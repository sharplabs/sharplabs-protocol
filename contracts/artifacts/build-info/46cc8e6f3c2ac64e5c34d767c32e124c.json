{
	"id": "46cc8e6f3c2ac64e5c34d767c32e124c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\nimport \"../utils/token/IERC20.sol\";\nimport \"../utils/token/SafeERC20.sol\";\n\nimport \"../utils/security/ContractGuard.sol\";\nimport \"../utils/interfaces/IBasisAsset.sol\";\nimport \"../utils/interfaces/ITreasury.sol\";\nimport \"./ShareWrapper.sol\";\n\n/*\n    ____       __              _______\n   / __ \\___  / /_  __  __    / ____(_)___  ____ _____  ________\n  / /_/ / __\\/ __ \\/ / / /   / /_  / / __ \\/ __ `/ __ \\/ ___/ _ \\\n / /_/ /  __/ /_/ / /_/ /   / __/ / / / / / /_/ / / / / /__/  __/\n/_.___/\\___/_.___/\\____/   /_/   /_/_/ /_/\\__,_/_/ /_/\\___/\\___/\n\n    http://bebu.finance\n*/\n\ncontract Boardroom is ShareWrapper, ContractGuard {\n    using SafeERC20 for IERC20;\n    using Address for address;\n    using SafeMath for uint256;\n\n    /* ========== DATA STRUCTURES ========== */\n\n    struct Memberseat {\n        uint256 lastSnapshotIndex;\n        uint256 rewardEarned;\n        uint256 epochTimerStart;\n    }\n\n    struct BoardroomSnapshot {\n        uint256 time;\n        uint256 rewardReceived;\n        uint256 rewardPerShare;\n    }\n\n    /* ========== STATE VARIABLES ========== */\n\n    // governance\n    address public operator;\n\n    // flags\n    bool public initialized = false;\n\n    IERC20 public token;\n    ITreasury public treasury;\n\n    // blacklist\n    mapping(address => bool) public blacklist;\n\n    mapping(address => Memberseat) public members;\n    BoardroomSnapshot[] public boardroomHistory;\n\n    uint256 public withdrawLockupEpochs;\n    uint256 public rewardLockupEpochs;\n\n    uint256 public fee;\n    address public feeTo;\n\n    /* ========== EVENTS ========== */\n\n    event Initialized(address indexed executor, uint256 at);\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardPaid(address indexed user, uint256 reward);\n    event RewardAdded(address indexed user, uint256 reward);\n    event BlacklistRewardPaid(address indexed from, address indexed to, uint256 reward);\n    event BlacklistWithdrawn(address indexed from, address indexed to, uint256 amount);\n\n    /* ========== Modifiers =============== */\n\n    modifier onlyOperator() {\n        require(operator == msg.sender, \"Boardroom: caller is not the operator\");\n        _;\n    }\n\n    modifier memberExists() {\n        require(balanceOf(msg.sender) > 0, \"Boardroom: The member does not exist\");\n        _;\n    }\n\n    modifier updateReward(address member) {\n        if (member != address(0)) {\n            Memberseat memory seat = members[member];\n            seat.rewardEarned = earned(member);\n            seat.lastSnapshotIndex = latestSnapshotIndex();\n            members[member] = seat;\n        }\n        _;\n    }\n\n    modifier notInitialized() {\n        require(!initialized, \"Boardroom: already initialized\");\n        _;\n    }\n\n    /* ========== GOVERNANCE ========== */\n\n    function initialize(\n        IERC20 _token,\n        IERC20 _share,\n        ITreasury _treasury,\n        uint256 _fee,\n        address _feeTo\n    ) public notInitialized {\n        token = _token;\n        share = _share;\n        treasury = _treasury;\n        fee = _fee;\n        feeTo = _feeTo;\n\n        BoardroomSnapshot memory genesisSnapshot = BoardroomSnapshot({time: block.number, rewardReceived: 0, rewardPerShare: 0});\n        boardroomHistory.push(genesisSnapshot);\n\n        withdrawLockupEpochs = 6; // Lock for 6 epochs (48h) before release withdraw\n        rewardLockupEpochs = 3; // Lock for 3 epochs (24h) before release claimReward\n\n        initialized = true;\n        operator = msg.sender;\n        emit Initialized(msg.sender, block.number);\n    }\n\n    function setOperator(address _operator) external onlyOperator {\n        operator = _operator;\n    }\n\n    function setLockUp(uint256 _withdrawLockupEpochs, uint256 _rewardLockupEpochs) external onlyOperator {\n        require(_withdrawLockupEpochs >= _rewardLockupEpochs && _withdrawLockupEpochs <= 56, \"_withdrawLockupEpochs: out of range\"); // <= 2 week\n        withdrawLockupEpochs = _withdrawLockupEpochs;\n        rewardLockupEpochs = _rewardLockupEpochs;\n    }\n\n    function setFee(uint256 _fee) external onlyOperator {\n        require(_fee >= 0 && _fee <= 10000, \"out of range\");\n        fee = _fee;\n    }\n\n    function setFeeTo(address _feeTo) external onlyOperator {\n        feeTo = _feeTo;\n    }\n\n    function addAddressBlacklist(address _address) public onlyOperator returns (bool) {\n        require(!blacklist[_address], \"address already added\");\n        blacklist[_address] = true;\n        return true;\n    }\n\n    function removeAddressBlacklist(address _address) public onlyOperator returns (bool) {\n        require(blacklist[_address], \"address not existed\");\n        blacklist[_address] = false;\n        return true;\n    }\n    \n    function isAddressBlacklist(address _address) public view returns (bool) {\n        return blacklist[_address];\n    }\n    /* ========== VIEW FUNCTIONS ========== */\n\n    // =========== Snapshot getters\n\n    function latestSnapshotIndex() public view returns (uint256) {\n        return boardroomHistory.length.sub(1);\n    }\n\n    function getLatestSnapshot() internal view returns (BoardroomSnapshot memory) {\n        return boardroomHistory[latestSnapshotIndex()];\n    }\n\n    function getLastSnapshotIndexOf(address member) public view returns (uint256) {\n        return members[member].lastSnapshotIndex;\n    }\n\n    function getLastSnapshotOf(address member) internal view returns (BoardroomSnapshot memory) {\n        return boardroomHistory[getLastSnapshotIndexOf(member)];\n    }\n\n    function canWithdraw(address member) external view returns (bool) {\n        return members[member].epochTimerStart.add(withdrawLockupEpochs) <= treasury.epoch();\n    }\n\n    function canClaimReward(address member) external view returns (bool) {\n        return members[member].epochTimerStart.add(rewardLockupEpochs) <= treasury.epoch();\n    }\n\n    function epoch() external view returns (uint256) {\n        return treasury.epoch();\n    }\n\n    function nextEpochPoint() external view returns (uint256) {\n        return treasury.nextEpochPoint();\n    }\n\n    function getTokenPrice() external view returns (uint256) {\n        return treasury.getTokenPrice();\n    }\n\n    // =========== Member getters\n\n    function rewardPerShare() public view returns (uint256) {\n        return getLatestSnapshot().rewardPerShare;\n    }\n\n    function earned(address member) public view returns (uint256) {\n        uint256 latestRPS = getLatestSnapshot().rewardPerShare;\n        uint256 storedRPS = getLastSnapshotOf(member).rewardPerShare;\n\n        return balanceOf(member).mul(latestRPS.sub(storedRPS)).div(1e18).add(members[member].rewardEarned);\n    }\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    function stake(uint256 amount) public override onlyOneBlock updateReward(msg.sender) {\n        require(!isAddressBlacklist(msg.sender), \"blacklist\");\n        require(amount > 0, \"Boardroom: Cannot stake 0\");\n        if (fee > 0) {\n            uint tax = amount.mul(fee).div(10000);\n            amount = amount.sub(tax);\n            share.safeTransferFrom(msg.sender, feeTo, tax);\n        }\n        super.stake(amount);\n        members[msg.sender].epochTimerStart = treasury.epoch(); // reset timer\n        emit Staked(msg.sender, amount);\n    }\n\n    function withdraw(uint256 amount) public override onlyOneBlock memberExists updateReward(msg.sender) {\n        require(!isAddressBlacklist(msg.sender), \"blacklist\");\n        require(amount > 0, \"Boardroom: Cannot withdraw 0\");\n        require(members[msg.sender].epochTimerStart.add(withdrawLockupEpochs) <= treasury.epoch(), \"Boardroom: still in withdraw lockup\");\n        claimReward();\n        super.withdraw(amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    function exit() external {\n        withdraw(balanceOf(msg.sender));\n    }\n\n    function claimReward() public updateReward(msg.sender) {\n        require(!isAddressBlacklist(msg.sender), \"blacklist\");\n        uint256 reward = members[msg.sender].rewardEarned;\n        if (reward > 0) {\n            require(members[msg.sender].epochTimerStart.add(rewardLockupEpochs) <= treasury.epoch(), \"Boardroom: still in reward lockup\");\n            members[msg.sender].epochTimerStart = treasury.epoch(); // reset timer\n            members[msg.sender].rewardEarned = 0;\n            token.safeTransfer(msg.sender, reward);\n            emit RewardPaid(msg.sender, reward);\n        }\n    }\n\n    function allocateSeigniorage(uint256 amount) external onlyOneBlock onlyOperator {\n        require(amount > 0, \"Boardroom: Cannot allocate 0\");\n        require(totalSupply() > 0, \"Boardroom: Cannot allocate when totalSupply is 0\");\n\n        // Create & add new snapshot\n        uint256 prevRPS = getLatestSnapshot().rewardPerShare;\n        uint256 nextRPS = prevRPS.add(amount.mul(1e18).div(totalSupply()));\n\n        BoardroomSnapshot memory newSnapshot = BoardroomSnapshot({time: block.number, rewardReceived: amount, rewardPerShare: nextRPS});\n        boardroomHistory.push(newSnapshot);\n\n        token.safeTransferFrom(msg.sender, address(this), amount);\n        emit RewardAdded(msg.sender, amount);\n    }\n\n    function blacklistFundWithdraw(address _address, address _to) external onlyOperator {\n        require(isAddressBlacklist(_address), \"address not in the blacklist\");\n        uint256 memberShare = _balances[_address];\n        require(memberShare > 0, \"Boardroom: Cannot withdraw 0\");\n        uint256 reward = members[_address].rewardEarned;\n        if (reward > 0) {\n            members[_address].epochTimerStart = treasury.epoch(); // reset timer\n            members[_address].rewardEarned = 0;\n            token.safeTransfer(_to, reward);\n            emit BlacklistRewardPaid(_address, _to, reward);\n        }\n        _totalSupply = _totalSupply.sub(memberShare);\n        _balances[_address] = 0;\n        share.safeTransfer(_to, memberShare);\n        emit BlacklistWithdrawn(_address, _to, memberShare);\n    }\n\n    function governanceRecoverUnsupported(\n        IERC20 _token,\n        uint256 _amount,\n        address _to\n    ) external onlyOperator {\n        require(_to != address(0), \"zero\");\n        // do not allow to drain core tokens\n        require(address(_token) != address(token), \"token\");\n        require(address(_token) != address(share), \"share\");\n        _token.safeTransfer(_to, _amount);\n    }\n}"
			},
			"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\nimport \"../utils/token/IERC20.sol\";\nimport \"../utils/token/SafeERC20.sol\";\n\ncontract ShareWrapper {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    IERC20 public share;\n\n    uint256 internal _totalSupply;\n    mapping(address => uint256) internal _balances;\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    function stake(uint256 amount) public virtual {\n        _totalSupply = _totalSupply.add(amount);\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\n        share.safeTransferFrom(msg.sender, address(this), amount);\n    }\n\n    function withdraw(uint256 amount) public virtual {\n        uint256 memberShare = _balances[msg.sender];\n        require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\");\n        _totalSupply = _totalSupply.sub(amount);\n        _balances[msg.sender] = memberShare.sub(amount);\n        share.safeTransfer(msg.sender, amount);\n    }\n}"
			},
			"brownie_projects/bebu_finance/contracts/utils/interfaces/ITreasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\ninterface ITreasury {\n    function burn(uint256 amount) external;\n\n    function burnFrom(address from, uint256 amount) external;\n\n    function isOperator() external returns (bool);\n\n    function operator() external view returns (address);\n\n    function transferOperator(address newOperator_) external;\n\n    function epoch() external view returns (uint256);\n\n    function nextEpochPoint() external view returns (uint256);\n\n    function getTokenPrice() external view returns (uint256);\n\n    function getRealtimeTokenIndexPrice() external view returns (uint256);\n\n    function initialize(address token, address share, address oracle, address boardroom, uint256 start_time) external;\n\n    function allocateSeigniorage() external;\n\n    function rebase() external returns (bool);\n\n    function setInitialPrice(uint256 _initialEpochTokenIndexPrice) external returns (bool);\n}"
			},
			"brownie_projects/bebu_finance/contracts/utils/interfaces/IBasisAsset.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\ninterface IBasisAsset {\n    function mint(address recipient, uint256 amount) external returns (bool);\n\n    function burn(uint256 amount) external;\n\n    function burnFrom(address from, uint256 amount) external;\n\n    function isOperator() external returns (bool);\n\n    function operator() external view returns (address);\n\n    function transferOperator(address newOperator_) external;\n}"
			},
			"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\ncontract ContractGuard {\n    mapping(uint256 => mapping(address => bool)) private _status;\n\n    function checkSameOriginReentranted() internal view returns (bool) {\n        return _status[block.number][tx.origin];\n    }\n\n    function checkSameSenderReentranted() internal view returns (bool) {\n        return _status[block.number][msg.sender];\n    }\n\n    modifier onlyOneBlock() {\n        require(!checkSameOriginReentranted(), \"ContractGuard: one block, one function\");\n        require(!checkSameSenderReentranted(), \"ContractGuard: one block, one function\");\n\n        _status[block.number][tx.origin] = true;\n        _status[block.number][msg.sender] = true;\n\n        _;\n    }\n}"
			},
			"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\nimport \"./IERC20.sol\";\nimport \"../math/SafeMath.sol\";\nimport \"../Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity 0.8.13;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"brownie_projects/bebu_finance/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}"
			},
			"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol": {
				"Boardroom": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "BlacklistRewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BlacklistWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "executor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "at",
									"type": "uint256"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "addAddressBlacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "allocateSeigniorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "blacklistFundWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "boardroomHistory",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardReceived",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "canClaimReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "canWithdraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "getLastSnapshotIndexOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_share",
									"type": "address"
								},
								{
									"internalType": "contract ITreasury",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_feeTo",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isAddressBlacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestSnapshotIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "members",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "lastSnapshotIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardEarned",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "epochTimerStart",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextEpochPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeAddressBlacklist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardLockupEpochs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeTo",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_withdrawLockupEpochs",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rewardLockupEpochs",
									"type": "uint256"
								}
							],
							"name": "setLockUp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "share",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "contract ITreasury",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawLockupEpochs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":633:10399  contract Boardroom is ShareWrapper, ContractGuard {... */\n  mstore(0x40, 0x80)\n    /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1197:1228  bool public initialized = false */\n  0x04\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":633:10399  contract Boardroom is ShareWrapper, ContractGuard {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":633:10399  contract Boardroom is ShareWrapper, ContractGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61d027b3\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xb3ab15fb\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xddca3f43\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf46901ed\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0xb3ab15fb\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc58e3843\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc5967c26\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd256d48a\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x714b4658\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x714b4658\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x900cf0cf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x97ffe1d7\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa8d5fd65\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x61d027b3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x69fe0e2d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x6cee85c2\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x530b97a4\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x530b97a4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x53c03829\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5db76731\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2ffaaa09\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f9e3f04\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x446a2ec8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4b94f50e\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x08ae4b0c\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x08ae4b0c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x19262d30\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x1e85cd65\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x017e7e58\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x022ba18d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x046335d0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6398:6710  function earned(address member) public view returns (uint256) {... */\n    tag_3:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":548:573   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6398:6710  function earned(address member) public view returns (uint256) {... */\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1563:1583  address public feeTo */\n    tag_4:\n      sload(0x0d)\n      tag_54\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_54:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":748:780   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":730:781   */\n      dup2\n      mstore\n        /* \"#utility.yul\":718:720   */\n      0x20\n        /* \"#utility.yul\":703:721   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1563:1583  address public feeTo */\n      tag_52\n        /* \"#utility.yul\":584:787   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1499:1532  uint256 public rewardLockupEpochs */\n    tag_5:\n      tag_48\n      sload(0x0b)\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5750:5918  function canClaimReward(address member) external view returns (bool) {... */\n    tag_6:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":957:971   */\n      swap1\n      iszero\n        /* \"#utility.yul\":950:972   */\n      iszero\n        /* \"#utility.yul\":932:973   */\n      dup2\n      mstore\n        /* \"#utility.yul\":920:922   */\n      0x20\n        /* \"#utility.yul\":905:923   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5750:5918  function canClaimReward(address member) external view returns (bool) {... */\n      tag_52\n        /* \"#utility.yul\":792:979   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1357:1402  mapping(address => Memberseat) public members */\n    tag_7:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_67:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_66:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1186:1211   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":1242:1244   */\n      0x20\n        /* \"#utility.yul\":1227:1245   */\n      dup5\n      add\n        /* \"#utility.yul\":1220:1254   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1270:1288   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1263:1297   */\n      mstore\n        /* \"#utility.yul\":1174:1176   */\n      0x60\n        /* \"#utility.yul\":1159:1177   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1357:1402  mapping(address => Memberseat) public members */\n      tag_52\n        /* \"#utility.yul\":984:1303   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1197:1228  bool public initialized = false */\n    tag_8:\n      sload(0x04)\n      tag_61\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":341:430  function totalSupply() public view returns (uint256) {... */\n    tag_9:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":411:423  _totalSupply */\n      sload(0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":341:430  function totalSupply() public view returns (uint256) {... */\n      jump(tag_48)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5577:5744  function canWithdraw(address member) external view returns (bool) {... */\n    tag_10:\n      tag_61\n      tag_78\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1458:1493  uint256 public withdrawLockupEpochs */\n    tag_11:\n      tag_48\n      sload(0x0a)\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7318:7788  function withdraw(uint256 amount) public override onlyOneBlock memberExists updateReward(msg.sender) {... */\n    tag_12:\n      tag_84\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3752:4110  function setLockUp(uint256 _withdrawLockupEpochs, uint256 _rewardLockupEpochs) external onlyOperator {... */\n    tag_13:\n      tag_84\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4998:5113  function latestSnapshotIndex() public view returns (uint256) {... */\n    tag_14:\n      tag_48\n      tag_93\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6278:6392  function rewardPerShare() public view returns (uint256) {... */\n    tag_15:\n      tag_48\n      tag_96\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6132:6237  function getTokenPrice() external view returns (uint256) {... */\n    tag_16:\n      tag_48\n      tag_99\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2880:3641  function initialize(... */\n    tag_17:\n      tag_84\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9186:9995  function blacklistFundWithdraw(address _address, address _to) external onlyOperator {... */\n    tag_18:\n      tag_84\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10001:10397  function governanceRecoverUnsupported(... */\n    tag_19:\n      tag_84\n      tag_110\n      calldatasize\n      0x04\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1154:1177  address public operator */\n    tag_20:\n      sload(0x04)\n      tag_54\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4355:4565  function addAddressBlacklist(address _address) public onlyOperator returns (bool) {... */\n    tag_21:\n      tag_61\n      tag_117\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1260:1285  ITreasury public treasury */\n    tag_22:\n      sload(0x06)\n      tag_54\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4116:4256  function setFee(uint256 _fee) external onlyOperator {... */\n    tag_23:\n      tag_84\n      tag_125\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4571:4782  function removeAddressBlacklist(address _address) public onlyOperator returns (bool) {... */\n    tag_24:\n      tag_61\n      tag_128\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":436:544  function balanceOf(address account) public view returns (uint256) {... */\n    tag_25:\n      tag_48\n      tag_132\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":493:500  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:528  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":436:544  function balanceOf(address account) public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5266:5401  function getLastSnapshotIndexOf(address member) public view returns (uint256) {... */\n    tag_26:\n      tag_48\n      tag_136\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5376  members[member] */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5335:5342  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5376  members[member] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5368  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5376  members[member] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5394  members[member].lastSnapshotIndex */\n      sload\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5266:5401  function getLastSnapshotIndexOf(address member) public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5924:6013  function epoch() external view returns (uint256) {... */\n    tag_27:\n      tag_48\n      tag_140\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8472:9180  function allocateSeigniorage(uint256 amount) external onlyOneBlock onlyOperator {... */\n    tag_28:\n      tag_84\n      tag_143\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6768:7312  function stake(uint256 amount) public override onlyOneBlock updateReward(msg.sender) {... */\n    tag_29:\n      tag_84\n      tag_146\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":227:246  IERC20 public share */\n    tag_30:\n      sload(0x00)\n      tag_54\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3647:3746  function setOperator(address _operator) external onlyOperator {... */\n    tag_31:\n      tag_84\n      tag_153\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7873:8466  function claimReward() public updateReward(msg.sender) {... */\n    tag_32:\n      tag_84\n      tag_156\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1408:1451  BoardroomSnapshot[] public boardroomHistory */\n    tag_33:\n      tag_66\n      tag_158\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6019:6126  function nextEpochPoint() external view returns (uint256) {... */\n    tag_34:\n      tag_48\n      tag_162\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4792:4908  function isAddressBlacklist(address _address) public view returns (bool) {... */\n    tag_35:\n      tag_61\n      tag_165\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1539:1557  uint256 public fee */\n    tag_36:\n      tag_48\n      sload(0x0c)\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7794:7867  function exit() external {... */\n    tag_37:\n      tag_84\n      tag_172\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4262:4349  function setFeeTo(address _feeTo) external onlyOperator {... */\n    tag_38:\n      tag_84\n      tag_174\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1309:1350  mapping(address => bool) public blacklist */\n    tag_39:\n      tag_61\n      tag_177\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_177:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1235:1254  IERC20 public token */\n    tag_40:\n      sload(0x05)\n      tag_54\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6398:6710  function earned(address member) public view returns (uint256) {... */\n    tag_51:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6451:6458  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6470:6487  uint256 latestRPS */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6490:6509  getLatestSnapshot() */\n      tag_184\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6490:6507  getLatestSnapshot */\n      tag_185\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6490:6509  getLatestSnapshot() */\n      jump\t// in\n    tag_184:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6490:6524  getLatestSnapshot().rewardPerShare */\n      0x40\n      add\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6470:6524  uint256 latestRPS = getLatestSnapshot().rewardPerShare */\n      swap1\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6534:6551  uint256 storedRPS */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6554:6579  getLastSnapshotOf(member) */\n      tag_186\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6572:6578  member */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6554:6571  getLastSnapshotOf */\n      tag_187\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6554:6579  getLastSnapshotOf(member) */\n      jump\t// in\n    tag_186:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6554:6594  getLastSnapshotOf(member).rewardPerShare */\n      0x40\n      swap1\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6674:6689  members[member] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6674:6681  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6674:6689  members[member] */\n      0x20\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6674:6702  members[member].rewardEarned */\n      0x01\n      add\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6554:6594  getLastSnapshotOf(member).rewardPerShare */\n      swap1\n      swap2\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6703  balanceOf(member).mul(latestRPS.sub(storedRPS)).div(1e18).add(members[member].rewardEarned) */\n      tag_188\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6669  balanceOf(member).mul(latestRPS.sub(storedRPS)).div(1e18) */\n      tag_189\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6664:6668  1e18 */\n      0x0de0b6b3a7640000\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6659  balanceOf(member).mul(latestRPS.sub(storedRPS)) */\n      tag_190\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6634:6658  latestRPS.sub(storedRPS) */\n      tag_191\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6634:6643  latestRPS */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6554:6594  getLastSnapshotOf(member).rewardPerShare */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6634:6647  latestRPS.sub */\n      tag_192\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6634:6658  latestRPS.sub(storedRPS) */\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      dup11\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":493:500  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:528  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6633  balanceOf(member).mul */\n      swap1\n      tag_194\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6659  balanceOf(member).mul(latestRPS.sub(storedRPS)) */\n      jump\t// in\n    tag_190:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6663  balanceOf(member).mul(latestRPS.sub(storedRPS)).div */\n      swap1\n      tag_195\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6669  balanceOf(member).mul(latestRPS.sub(storedRPS)).div(1e18) */\n      jump\t// in\n    tag_189:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6673  balanceOf(member).mul(latestRPS.sub(storedRPS)).div(1e18).add */\n      swap1\n      tag_196\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6612:6703  balanceOf(member).mul(latestRPS.sub(storedRPS)).div(1e18).add(members[member].rewardEarned) */\n      jump\t// in\n    tag_188:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6605:6703  return balanceOf(member).mul(latestRPS.sub(storedRPS)).div(1e18).add(members[member].rewardEarned) */\n      swap5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6398:6710  function earned(address member) public view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5750:5918  function canClaimReward(address member) external view returns (bool) {... */\n    tag_63:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5895:5903  treasury */\n      sload(0x06)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5895:5911  treasury.epoch() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x900cf0cf)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5813:5817  bool */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5895:5903  treasury */\n      and\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5895:5909  treasury.epoch */\n      0x900cf0cf\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5895:5911  treasury.epoch() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5895:5903  treasury */\n      dup7\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5895:5911  treasury.epoch() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5872:5890  rewardLockupEpochs */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5836:5851  members[member] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5836:5843  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5836:5851  members[member] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5836:5867  members[member].epochTimerStart */\n      0x02\n      add\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5836:5891  members[member].epochTimerStart.add(rewardLockupEpochs) */\n      tag_202\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5836:5871  members[member].epochTimerStart.add */\n      tag_196\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5836:5891  members[member].epochTimerStart.add(rewardLockupEpochs) */\n      jump\t// in\n    tag_202:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5836:5911  members[member].epochTimerStart.add(rewardLockupEpochs) <= treasury.epoch() */\n      gt\n      iszero\n      swap3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5750:5918  function canClaimReward(address member) external view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5577:5744  function canWithdraw(address member) external view returns (bool) {... */\n    tag_79:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5721:5729  treasury */\n      sload(0x06)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5721:5737  treasury.epoch() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x900cf0cf)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5637:5641  bool */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5721:5729  treasury */\n      and\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5721:5735  treasury.epoch */\n      0x900cf0cf\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5721:5737  treasury.epoch() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5721:5729  treasury */\n      dup7\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5721:5737  treasury.epoch() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_207:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5696:5716  withdrawLockupEpochs */\n      sload(0x0a)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5660:5675  members[member] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5660:5667  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5660:5675  members[member] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5660:5691  members[member].epochTimerStart */\n      0x02\n      add\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5660:5717  members[member].epochTimerStart.add(withdrawLockupEpochs) */\n      tag_202\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5660:5695  members[member].epochTimerStart.add */\n      tag_196\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5660:5717  members[member].epochTimerStart.add(withdrawLockupEpochs) */\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7318:7788  function withdraw(uint256 amount) public override onlyOneBlock memberExists updateReward(msg.sender) {... */\n    tag_87:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":246:258  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":215:219  bool */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:259  _status[block.number] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:245  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:259  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":260:269  tx.origin */\n      origin\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:270  _status[block.number][tx.origin] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":455:484  !checkSameOriginReentranted() */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":447:527  require(!checkSameOriginReentranted(), \"ContractGuard: one block, one function\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":375:387  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":344:348  bool */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:388  _status[block.number] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:374  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:388  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":389:399  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:400  _status[block.number][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":545:574  !checkSameSenderReentranted() */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":537:617  require(!checkSameSenderReentranted(), \"ContractGuard: one block, one function\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_217:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":636:648  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:649  _status[block.number] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:635  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:649  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":650:659  tx.origin */\n      origin\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:660  _status[block.number][tx.origin] */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:667  _status[block.number][tx.origin] = true */\n      dup1\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":663:667  true */\n      0x01\n      not(0xff)\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:667  _status[block.number][tx.origin] = true */\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":699:709  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":677:710  _status[block.number][msg.sender] */\n      dup6\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":677:717  _status[block.number][msg.sender] = true */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:528  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2325:2350  balanceOf(msg.sender) > 0 */\n      gt\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2317:2391  require(balanceOf(msg.sender) > 0, \"Boardroom: The member does not exist\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4655:4657   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2317:2391  require(balanceOf(msg.sender) > 0, \"Boardroom: The member does not exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4637:4658   */\n      mstore\n        /* \"#utility.yul\":4694:4696   */\n      0x24\n        /* \"#utility.yul\":4674:4692   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4667:4697   */\n      mstore\n        /* \"#utility.yul\":4733:4767   */\n      0x426f617264726f6f6d3a20546865206d656d62657220646f6573206e6f742065\n        /* \"#utility.yul\":4713:4731   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4706:4768   */\n      mstore\n      shl(0xe2, 0x1e1a5cdd)\n        /* \"#utility.yul\":4784:4802   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4777:4811   */\n      mstore\n        /* \"#utility.yul\":4828:4847   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2317:2391  require(balanceOf(msg.sender) > 0, \"Boardroom: The member does not exist\") */\n      tag_213\n        /* \"#utility.yul\":4453:4853   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2317:2391  require(balanceOf(msg.sender) > 0, \"Boardroom: The member does not exist\") */\n    tag_221:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7407:7417  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2467:2487  member != address(0) */\n      dup1\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2463:2698  if (member != address(0)) {... */\n      tag_225\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      dup2\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2503:2525  Memberseat memory seat */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2535  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2503:2543  Memberseat memory seat = members[member] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2591  earned(member) */\n      tag_226\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2536:2542  member */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2583  earned */\n      tag_51\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2591  earned(member) */\n      jump\t// in\n    tag_226:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2557:2574  seat.rewardEarned */\n      0x20\n      dup3\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2557:2591  seat.rewardEarned = earned(member) */\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2651  latestSnapshotIndex() */\n      tag_227\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2649  latestSnapshotIndex */\n      tag_93\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2651  latestSnapshotIndex() */\n      jump\t// in\n    tag_227:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2605:2651  seat.lastSnapshotIndex = latestSnapshotIndex() */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      dup3\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2605:2627  seat.lastSnapshotIndex */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2672  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2687  members[member] = seat */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2463:2698  if (member != address(0)) {... */\n    tag_225:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7438:7468  isAddressBlacklist(msg.sender) */\n      tag_229\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7457:7467  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7438:7456  isAddressBlacklist */\n      tag_166\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7438:7468  isAddressBlacklist(msg.sender) */\n      jump\t// in\n    tag_229:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7437:7468  !isAddressBlacklist(msg.sender) */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7429:7482  require(!isAddressBlacklist(msg.sender), \"blacklist\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_232\n      jump\t// in\n    tag_230:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7509:7510  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7500:7506  amount */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7500:7510  amount > 0 */\n      gt\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7492:7543  require(amount > 0, \"Boardroom: Cannot withdraw 0\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5397:5399   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7492:7543  require(amount > 0, \"Boardroom: Cannot withdraw 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5379:5400   */\n      mstore\n        /* \"#utility.yul\":5436:5438   */\n      0x1c\n        /* \"#utility.yul\":5416:5434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5409:5439   */\n      mstore\n        /* \"#utility.yul\":5475:5505   */\n      0x426f617264726f6f6d3a2043616e6e6f74207769746864726177203000000000\n        /* \"#utility.yul\":5455:5473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5448:5506   */\n      mstore\n        /* \"#utility.yul\":5523:5541   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7492:7543  require(amount > 0, \"Boardroom: Cannot withdraw 0\") */\n      tag_213\n        /* \"#utility.yul\":5195:5547   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7492:7543  require(amount > 0, \"Boardroom: Cannot withdraw 0\") */\n    tag_233:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7626:7634  treasury */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7626:7640  treasury.epoch */\n      and\n      0x900cf0cf\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7626:7642  treasury.epoch() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_238:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7601:7621  withdrawLockupEpochs */\n      sload(0x0a)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7569:7579  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7561:7580  members[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7561:7568  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7561:7580  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7561:7596  members[msg.sender].epochTimerStart */\n      0x02\n      add\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7561:7622  members[msg.sender].epochTimerStart.add(withdrawLockupEpochs) */\n      tag_239\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7561:7600  members[msg.sender].epochTimerStart.add */\n      tag_196\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7561:7622  members[msg.sender].epochTimerStart.add(withdrawLockupEpochs) */\n      jump\t// in\n    tag_239:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7561:7642  members[msg.sender].epochTimerStart.add(withdrawLockupEpochs) <= treasury.epoch() */\n      gt\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7553:7682  require(members[msg.sender].epochTimerStart.add(withdrawLockupEpochs) <= treasury.epoch(), \"Boardroom: still in withdraw lockup\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5754:5756   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7553:7682  require(members[msg.sender].epochTimerStart.add(withdrawLockupEpochs) <= treasury.epoch(), \"Boardroom: still in withdraw lockup\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5736:5757   */\n      mstore\n        /* \"#utility.yul\":5793:5795   */\n      0x23\n        /* \"#utility.yul\":5773:5791   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5766:5796   */\n      mstore\n        /* \"#utility.yul\":5832:5866   */\n      0x426f617264726f6f6d3a207374696c6c20696e207769746864726177206c6f63\n        /* \"#utility.yul\":5812:5830   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5805:5867   */\n      mstore\n      shl(0xec, 0x06b757)\n        /* \"#utility.yul\":5883:5901   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5876:5909   */\n      mstore\n        /* \"#utility.yul\":5926:5945   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7553:7682  require(members[msg.sender].epochTimerStart.add(withdrawLockupEpochs) <= treasury.epoch(), \"Boardroom: still in withdraw lockup\") */\n      tag_213\n        /* \"#utility.yul\":5552:5951   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7553:7682  require(members[msg.sender].epochTimerStart.add(withdrawLockupEpochs) <= treasury.epoch(), \"Boardroom: still in withdraw lockup\") */\n    tag_240:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7692:7705  claimReward() */\n      tag_243\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7692:7703  claimReward */\n      tag_156\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7692:7705  claimReward() */\n      jump\t// in\n    tag_243:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7715:7737  super.withdraw(amount) */\n      tag_244\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7730:7736  amount */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7715:7729  super.withdraw */\n      tag_245\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7715:7737  super.withdraw(amount) */\n      jump\t// in\n    tag_244:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7752:7781  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":548:573   */\n      dup3\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7762:7772  msg.sender */\n      caller\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7752:7781  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7752:7781  Withdrawn(msg.sender, amount) */\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2401:2402  _ */\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7318:7788  function withdraw(uint256 amount) public override onlyOneBlock memberExists updateReward(msg.sender) {... */\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3752:4110  function setLockUp(uint256 _withdrawLockupEpochs, uint256 _rewardLockupEpochs) external onlyOperator {... */\n    tag_91:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2207:2217  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_248:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3896:3915  _rewardLockupEpochs */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3871:3892  _withdrawLockupEpochs */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3871:3915  _withdrawLockupEpochs >= _rewardLockupEpochs */\n      lt\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3871:3946  _withdrawLockupEpochs >= _rewardLockupEpochs && _withdrawLockupEpochs <= 56 */\n      dup1\n      iszero\n      tag_252\n      jumpi\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3944:3946  56 */\n      0x38\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3919:3940  _withdrawLockupEpochs */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3919:3946  _withdrawLockupEpochs <= 56 */\n      gt\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3871:3946  _withdrawLockupEpochs >= _rewardLockupEpochs && _withdrawLockupEpochs <= 56 */\n    tag_252:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3863:3986  require(_withdrawLockupEpochs >= _rewardLockupEpochs && _withdrawLockupEpochs <= 56, \"_withdrawLockupEpochs: out of range\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6564:6566   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3863:3986  require(_withdrawLockupEpochs >= _rewardLockupEpochs && _withdrawLockupEpochs <= 56, \"_withdrawLockupEpochs: out of range\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6546:6567   */\n      mstore\n        /* \"#utility.yul\":6603:6605   */\n      0x23\n        /* \"#utility.yul\":6583:6601   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6576:6606   */\n      mstore\n        /* \"#utility.yul\":6642:6676   */\n      0x5f77697468647261774c6f636b757045706f6368733a206f7574206f66207261\n        /* \"#utility.yul\":6622:6640   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6615:6677   */\n      mstore\n      shl(0xe8, 0x6e6765)\n        /* \"#utility.yul\":6693:6711   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6686:6719   */\n      mstore\n        /* \"#utility.yul\":6736:6755   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3863:3986  require(_withdrawLockupEpochs >= _rewardLockupEpochs && _withdrawLockupEpochs <= 56, \"_withdrawLockupEpochs: out of range\") */\n      tag_213\n        /* \"#utility.yul\":6362:6761   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3863:3986  require(_withdrawLockupEpochs >= _rewardLockupEpochs && _withdrawLockupEpochs <= 56, \"_withdrawLockupEpochs: out of range\") */\n    tag_253:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4009:4029  withdrawLockupEpochs */\n      0x0a\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4009:4053  withdrawLockupEpochs = _withdrawLockupEpochs */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4063:4081  rewardLockupEpochs */\n      0x0b\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4063:4103  rewardLockupEpochs = _rewardLockupEpochs */\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3752:4110  function setLockUp(uint256 _withdrawLockupEpochs, uint256 _rewardLockupEpochs) external onlyOperator {... */\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4998:5113  function latestSnapshotIndex() public view returns (uint256) {... */\n    tag_93:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5076:5092  boardroomHistory */\n      0x09\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5076:5099  boardroomHistory.length */\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5050:5057  uint256 */\n      0x00\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5076:5106  boardroomHistory.length.sub(1) */\n      tag_257\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5104:5105  1 */\n      0x01\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5076:5103  boardroomHistory.length.sub */\n      tag_192\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5076:5106  boardroomHistory.length.sub(1) */\n      jump\t// in\n    tag_257:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5069:5106  return boardroomHistory.length.sub(1) */\n      swap1\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4998:5113  function latestSnapshotIndex() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6278:6392  function rewardPerShare() public view returns (uint256) {... */\n    tag_96:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6325:6332  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6351:6370  getLatestSnapshot() */\n      tag_259\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6351:6368  getLatestSnapshot */\n      tag_185\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6351:6370  getLatestSnapshot() */\n      jump\t// in\n    tag_259:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6351:6385  getLatestSnapshot().rewardPerShare */\n      0x40\n      add\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6344:6385  return getLatestSnapshot().rewardPerShare */\n      swap1\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6278:6392  function rewardPerShare() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6132:6237  function getTokenPrice() external view returns (uint256) {... */\n    tag_99:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6206:6214  treasury */\n      sload(0x06)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6206:6230  treasury.getTokenPrice() */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x25ca7a87)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6180:6187  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6206:6214  treasury */\n      and\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6206:6228  treasury.getTokenPrice */\n      0x4b94f50e\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6206:6230  treasury.getTokenPrice() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6206:6214  treasury */\n      dup7\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6206:6230  treasury.getTokenPrice() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2880:3641  function initialize(... */\n    tag_104:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2766:2777  initialized */\n      sload(0x04)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2765:2777  !initialized */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2757:2812  require(!initialized, \"Boardroom: already initialized\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6968:6970   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2757:2812  require(!initialized, \"Boardroom: already initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6950:6971   */\n      mstore\n        /* \"#utility.yul\":7007:7009   */\n      0x1e\n        /* \"#utility.yul\":6987:7005   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6980:7010   */\n      mstore\n        /* \"#utility.yul\":7046:7078   */\n      0x426f617264726f6f6d3a20616c726561647920696e697469616c697a65640000\n        /* \"#utility.yul\":7026:7044   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7019:7079   */\n      mstore\n        /* \"#utility.yul\":7096:7114   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2757:2812  require(!initialized, \"Boardroom: already initialized\") */\n      tag_213\n        /* \"#utility.yul\":6766:7120   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2757:2812  require(!initialized, \"Boardroom: already initialized\") */\n    tag_265:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3059:3064  token */\n      0x05\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3059:3073  token = _token */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3083:3097  share = _share */\n      dup1\n      sload\n      dup8\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      dup2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3107:3115  treasury */\n      0x06\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3107:3127  treasury = _treasury */\n      dup1\n      sload\n      dup8\n      dup6\n      and\n      swap1\n      dup5\n      and\n      or\n      dup2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3137:3140  fee */\n      0x0c\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3137:3147  fee = _fee */\n      dup7\n      swap1\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3157:3162  feeTo */\n      0x0d\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3157:3171  feeTo = _feeTo */\n      dup1\n      sload\n      swap5\n      dup7\n      and\n      swap5\n      swap1\n      swap4\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3225:3302  BoardroomSnapshot({time: block.number, rewardReceived: 0, rewardPerShare: 0}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3250:3262  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3225:3302  BoardroomSnapshot({time: block.number, rewardReceived: 0, rewardPerShare: 0}) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup6\n      dup2\n      mstore\n      dup4\n      dup6\n      add\n      dup7\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3312:3328  boardroomHistory */\n      0x09\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3312:3350  boardroomHistory.push(genesisSnapshot) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap8\n      mstore\n      dup5\n      mload\n      0x03\n      swap8\n      dup9\n      mul\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap2\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0\n      dup4\n      add\n      sstore\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1\n      swap1\n      swap2\n      add\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3361:3381  withdrawLockupEpochs */\n      0x0a\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3361:3385  withdrawLockupEpochs = 6 */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3446:3464  rewardLockupEpochs */\n      0x0b\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3446:3468  rewardLockupEpochs = 3 */\n      swap4\n      swap1\n      swap4\n      sstore\n      0x04\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3533:3551  initialized = true */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3561:3582  operator = msg.sender */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3572:3582  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3561:3582  operator = msg.sender */\n      swap1\n      dup2\n      or\n      shl(0xa0, 0x01)\n      or\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3597:3634  Initialized(msg.sender, block.number) */\n      swap2\n      mload\n        /* \"#utility.yul\":548:573   */\n      swap3\n      dup4\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3225:3302  BoardroomSnapshot({time: block.number, rewardReceived: 0, rewardPerShare: 0}) */\n      swap3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3572:3582  msg.sender */\n      swap1\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3597:3634  Initialized(msg.sender, block.number) */\n      0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79\n      swap2\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3597:3634  Initialized(msg.sender, block.number) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3049:3641  {... */\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2880:3641  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9186:9995  function blacklistFundWithdraw(address _address, address _to) external onlyOperator {... */\n    tag_108:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2207:2217  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_272:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9288:9316  isAddressBlacklist(_address) */\n      tag_275\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9307:9315  _address */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9288:9306  isAddressBlacklist */\n      tag_166\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9288:9316  isAddressBlacklist(_address) */\n      jump\t// in\n    tag_275:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9280:9349  require(isAddressBlacklist(_address), \"address not in the blacklist\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7327:7329   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9280:9349  require(isAddressBlacklist(_address), \"address not in the blacklist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7309:7330   */\n      mstore\n        /* \"#utility.yul\":7366:7368   */\n      0x1c\n        /* \"#utility.yul\":7346:7364   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7339:7369   */\n      mstore\n        /* \"#utility.yul\":7405:7435   */\n      0x61646472657373206e6f7420696e2074686520626c61636b6c69737400000000\n        /* \"#utility.yul\":7385:7403   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7378:7436   */\n      mstore\n        /* \"#utility.yul\":7453:7471   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9280:9349  require(isAddressBlacklist(_address), \"address not in the blacklist\") */\n      tag_213\n        /* \"#utility.yul\":7125:7477   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9280:9349  require(isAddressBlacklist(_address), \"address not in the blacklist\") */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9381:9400  _balances[_address] */\n      dup3\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9359:9378  uint256 memberShare */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9381:9400  _balances[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9381:9390  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9381:9400  _balances[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9418:9433  memberShare > 0 */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9410:9466  require(memberShare > 0, \"Boardroom: Cannot withdraw 0\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5397:5399   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9410:9466  require(memberShare > 0, \"Boardroom: Cannot withdraw 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5379:5400   */\n      mstore\n        /* \"#utility.yul\":5436:5438   */\n      0x1c\n        /* \"#utility.yul\":5416:5434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5409:5439   */\n      mstore\n        /* \"#utility.yul\":5475:5505   */\n      0x426f617264726f6f6d3a2043616e6e6f74207769746864726177203000000000\n        /* \"#utility.yul\":5455:5473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5448:5506   */\n      mstore\n        /* \"#utility.yul\":5523:5541   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9410:9466  require(memberShare > 0, \"Boardroom: Cannot withdraw 0\") */\n      tag_213\n        /* \"#utility.yul\":5195:5547   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9410:9466  require(memberShare > 0, \"Boardroom: Cannot withdraw 0\") */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9493:9510  members[_address] */\n      dup4\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9476:9490  uint256 reward */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9493:9510  members[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9493:9500  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9493:9510  members[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9493:9523  members[_address].rewardEarned */\n      0x01\n      add\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9537:9547  reward > 0 */\n      dup1\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9533:9795  if (reward > 0) {... */\n      tag_281\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9599:9607  treasury */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9599:9613  treasury.epoch */\n      and\n      0x900cf0cf\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9599:9615  treasury.epoch() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9563:9580  members[_address] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9563:9570  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9563:9580  members[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9563:9596  members[_address].epochTimerStart */\n      0x02\n      dup2\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9563:9615  members[_address].epochTimerStart = treasury.epoch() */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9644:9674  members[_address].rewardEarned */\n      0x01\n      swap1\n      swap3\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9644:9678  members[_address].rewardEarned = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9692:9697  token */\n      sload(0x05)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9692:9723  token.safeTransfer(_to, reward) */\n      tag_285\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9692:9697  token */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9711:9714  _to */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9716:9722  reward */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9692:9710  token.safeTransfer */\n      tag_286\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9692:9723  token.safeTransfer(_to, reward) */\n      jump\t// in\n    tag_285:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9772:9775  _to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9742:9784  BlacklistRewardPaid(_address, _to, reward) */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9762:9770  _address */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9742:9784  BlacklistRewardPaid(_address, _to, reward) */\n      and\n      0x715576a45bd0ea6ca90a2f53c258fe52bdd30e6061046ce86ca3fa7e9f5a91be\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9777:9783  reward */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9742:9784  BlacklistRewardPaid(_address, _to, reward) */\n      mload(0x40)\n      tag_287\n      swap2\n        /* \"#utility.yul\":548:573   */\n      dup2\n      mstore\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n      swap1\n        /* \"#utility.yul\":402:579   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9742:9784  BlacklistRewardPaid(_address, _to, reward) */\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9533:9795  if (reward > 0) {... */\n    tag_281:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9819:9831  _totalSupply */\n      sload(0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9819:9848  _totalSupply.sub(memberShare) */\n      tag_288\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9836:9847  memberShare */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9819:9835  _totalSupply.sub */\n      tag_192\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9819:9848  _totalSupply.sub(memberShare) */\n      jump\t// in\n    tag_288:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9804:9816  _totalSupply */\n      0x01\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9804:9848  _totalSupply = _totalSupply.sub(memberShare) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9858:9877  _balances[_address] */\n      dup1\n      dup6\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9880:9881  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9858:9877  _balances[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9858:9867  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9858:9877  _balances[_address] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9858:9881  _balances[_address] = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9891:9896  share */\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9891:9927  share.safeTransfer(_to, memberShare) */\n      tag_289\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9891:9896  share */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9910:9913  _to */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9915:9926  memberShare */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9891:9909  share.safeTransfer */\n      tag_286\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9891:9927  share.safeTransfer(_to, memberShare) */\n      jump\t// in\n    tag_289:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9971:9974  _to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9942:9988  BlacklistWithdrawn(_address, _to, memberShare) */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9961:9969  _address */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9942:9988  BlacklistWithdrawn(_address, _to, memberShare) */\n      and\n      0x345a298b5b7318863d2a616f67ae5329deb5255f9f90b5ebc73ee5ddcd81b180\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9976:9987  memberShare */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9942:9988  BlacklistWithdrawn(_address, _to, memberShare) */\n      mload(0x40)\n      tag_290\n      swap2\n        /* \"#utility.yul\":548:573   */\n      dup2\n      mstore\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n      swap1\n        /* \"#utility.yul\":402:579   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9942:9988  BlacklistWithdrawn(_address, _to, memberShare) */\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9270:9995  {... */\n      pop\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9186:9995  function blacklistFundWithdraw(address _address, address _to) external onlyOperator {... */\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10001:10397  function governanceRecoverUnsupported(... */\n    tag_112:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2207:2217  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10154:10171  _to != address(0) */\n      dup2\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10146:10180  require(_to != address(0), \"zero\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n        /* \"#utility.yul\":7684:7686   */\n      0x20\n        /* \"#utility.yul\":7666:7687   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7723:7724   */\n      0x04\n        /* \"#utility.yul\":7703:7721   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7696:7725   */\n      mstore\n      shl(0xe0, 0x7a65726f)\n        /* \"#utility.yul\":7756:7758   */\n      0x40\n        /* \"#utility.yul\":7741:7759   */\n      dup3\n      add\n        /* \"#utility.yul\":7734:7768   */\n      mstore\n        /* \"#utility.yul\":7800:7802   */\n      0x60\n        /* \"#utility.yul\":7785:7803   */\n      add\n      swap1\n        /* \"#utility.yul\":7482:7809   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10146:10180  require(_to != address(0), \"zero\") */\n    tag_295:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10270:10275  token */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10243:10276  address(_token) != address(token) */\n      swap1\n      dup5\n      and\n      sub\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10235:10286  require(address(_token) != address(token), \"token\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8016:8018   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10235:10286  require(address(_token) != address(token), \"token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7998:8019   */\n      mstore\n        /* \"#utility.yul\":8055:8056   */\n      0x05\n        /* \"#utility.yul\":8035:8053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8028:8057   */\n      mstore\n      shl(0xd9, 0x3a37b5b2b7)\n        /* \"#utility.yul\":8073:8091   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8066:8101   */\n      mstore\n        /* \"#utility.yul\":8118:8136   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10235:10286  require(address(_token) != address(token), \"token\") */\n      tag_213\n        /* \"#utility.yul\":7814:8142   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10235:10286  require(address(_token) != address(token), \"token\") */\n    tag_298:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10331:10336  share */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10304:10337  address(_token) != address(share) */\n      swap1\n      dup5\n      and\n      sub\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10296:10347  require(address(_token) != address(share), \"share\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8349:8351   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10296:10347  require(address(_token) != address(share), \"share\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8331:8352   */\n      mstore\n        /* \"#utility.yul\":8388:8389   */\n      0x05\n        /* \"#utility.yul\":8368:8386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8361:8390   */\n      mstore\n      shl(0xd8, 0x7368617265)\n        /* \"#utility.yul\":8406:8424   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8399:8434   */\n      mstore\n        /* \"#utility.yul\":8451:8469   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10296:10347  require(address(_token) != address(share), \"share\") */\n      tag_213\n        /* \"#utility.yul\":8147:8475   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10296:10347  require(address(_token) != address(share), \"share\") */\n    tag_301:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10357:10390  _token.safeTransfer(_to, _amount) */\n      tag_304\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10357:10376  _token.safeTransfer */\n      dup5\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10377:10380  _to */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10382:10389  _amount */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10357:10376  _token.safeTransfer */\n      tag_286\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10357:10390  _token.safeTransfer(_to, _amount) */\n      jump\t// in\n    tag_304:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":10001:10397  function governanceRecoverUnsupported(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4355:4565  function addAddressBlacklist(address _address) public onlyOperator returns (bool) {... */\n    tag_118:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      sload(0x04)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4431:4435  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2207:2217  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4456:4475  blacklist[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4456:4465  blacklist */\n      0x07\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4456:4475  blacklist[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4455:4475  !blacklist[_address] */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4447:4501  require(!blacklist[_address], \"address already added\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8682:8684   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4447:4501  require(!blacklist[_address], \"address already added\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8664:8685   */\n      mstore\n        /* \"#utility.yul\":8721:8723   */\n      0x15\n        /* \"#utility.yul\":8701:8719   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8694:8724   */\n      mstore\n      shl(0x5a, 0x1859191c995cdcc8185b1c9958591e481859191959)\n        /* \"#utility.yul\":8740:8758   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8733:8784   */\n      mstore\n        /* \"#utility.yul\":8801:8819   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4447:4501  require(!blacklist[_address], \"address already added\") */\n      tag_213\n        /* \"#utility.yul\":8480:8825   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4447:4501  require(!blacklist[_address], \"address already added\") */\n    tag_309:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4511:4530  blacklist[_address] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4511:4520  blacklist */\n      0x07\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4511:4530  blacklist[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4511:4537  blacklist[_address] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4533:4537  true */\n      0x01\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4511:4537  blacklist[_address] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4533:4537  true */\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4355:4565  function addAddressBlacklist(address _address) public onlyOperator returns (bool) {... */\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4116:4256  function setFee(uint256 _fee) external onlyOperator {... */\n    tag_126:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2207:2217  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_313:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4207:4212  10000 */\n      0x2710\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4199:4203  _fee */\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4199:4212  _fee <= 10000 */\n      gt\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4178:4229  require(_fee >= 0 && _fee <= 10000, \"out of range\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9032:9034   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4178:4229  require(_fee >= 0 && _fee <= 10000, \"out of range\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9014:9035   */\n      mstore\n        /* \"#utility.yul\":9071:9073   */\n      0x0c\n        /* \"#utility.yul\":9051:9069   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9044:9074   */\n      mstore\n      shl(0xa0, 0x6f7574206f662072616e6765)\n        /* \"#utility.yul\":9090:9108   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9083:9125   */\n      mstore\n        /* \"#utility.yul\":9142:9160   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4178:4229  require(_fee >= 0 && _fee <= 10000, \"out of range\") */\n      tag_213\n        /* \"#utility.yul\":8830:9166   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4178:4229  require(_fee >= 0 && _fee <= 10000, \"out of range\") */\n    tag_317:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4239:4242  fee */\n      0x0c\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4239:4249  fee = _fee */\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4116:4256  function setFee(uint256 _fee) external onlyOperator {... */\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4571:4782  function removeAddressBlacklist(address _address) public onlyOperator returns (bool) {... */\n    tag_129:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      sload(0x04)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4650:4654  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2207:2217  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4674:4693  blacklist[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4674:4683  blacklist */\n      0x07\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4674:4693  blacklist[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4666:4717  require(blacklist[_address], \"address not existed\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9373:9375   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4666:4717  require(blacklist[_address], \"address not existed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9355:9376   */\n      mstore\n        /* \"#utility.yul\":9412:9414   */\n      0x13\n        /* \"#utility.yul\":9392:9410   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9385:9415   */\n      mstore\n      shl(0x6a, 0x1859191c995cdcc81b9bdd08195e1a5cdd1959)\n        /* \"#utility.yul\":9431:9449   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9424:9473   */\n      mstore\n        /* \"#utility.yul\":9490:9508   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4666:4717  require(blacklist[_address], \"address not existed\") */\n      tag_213\n        /* \"#utility.yul\":9171:9514   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4666:4717  require(blacklist[_address], \"address not existed\") */\n    tag_324:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4727:4746  blacklist[_address] */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4749:4754  false */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4727:4746  blacklist[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4727:4736  blacklist */\n      0x07\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4727:4746  blacklist[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4727:4754  blacklist[_address] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n      0x01\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4571:4782  function removeAddressBlacklist(address _address) public onlyOperator returns (bool) {... */\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5924:6013  function epoch() external view returns (uint256) {... */\n    tag_140:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5990:5998  treasury */\n      sload(0x06)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5990:6006  treasury.epoch() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x900cf0cf)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5964:5971  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5990:5998  treasury */\n      and\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5990:6004  treasury.epoch */\n      0x900cf0cf\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5990:6006  treasury.epoch() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5990:5998  treasury */\n      dup7\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5990:6006  treasury.epoch() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8472:9180  function allocateSeigniorage(uint256 amount) external onlyOneBlock onlyOperator {... */\n    tag_144:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":246:258  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":215:219  bool */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:259  _status[block.number] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:245  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:259  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":260:269  tx.origin */\n      origin\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:270  _status[block.number][tx.origin] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":455:484  !checkSameOriginReentranted() */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":447:527  require(!checkSameOriginReentranted(), \"ContractGuard: one block, one function\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_335:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":375:387  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":344:348  bool */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:388  _status[block.number] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:374  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:388  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":389:399  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:400  _status[block.number][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":545:574  !checkSameSenderReentranted() */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":537:617  require(!checkSameSenderReentranted(), \"ContractGuard: one block, one function\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_338:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":636:648  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:649  _status[block.number] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:635  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:649  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":650:659  tx.origin */\n      origin\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:660  _status[block.number][tx.origin] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:667  _status[block.number][tx.origin] = true */\n      dup1\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":663:667  true */\n      0x01\n      not(0xff)\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:667  _status[block.number][tx.origin] = true */\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":699:709  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":677:710  _status[block.number][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      swap1\n      swap4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":677:717  _status[block.number][msg.sender] = true */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_341:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8579:8580  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8570:8576  amount */\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8570:8580  amount > 0 */\n      gt\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8562:8613  require(amount > 0, \"Boardroom: Cannot allocate 0\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9721:9723   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8562:8613  require(amount > 0, \"Boardroom: Cannot allocate 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9703:9724   */\n      mstore\n        /* \"#utility.yul\":9760:9762   */\n      0x1c\n        /* \"#utility.yul\":9740:9758   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9733:9763   */\n      mstore\n        /* \"#utility.yul\":9799:9829   */\n      0x426f617264726f6f6d3a2043616e6e6f7420616c6c6f63617465203000000000\n        /* \"#utility.yul\":9779:9797   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9772:9830   */\n      mstore\n        /* \"#utility.yul\":9847:9865   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8562:8613  require(amount > 0, \"Boardroom: Cannot allocate 0\") */\n      tag_213\n        /* \"#utility.yul\":9519:9871   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8562:8613  require(amount > 0, \"Boardroom: Cannot allocate 0\") */\n    tag_344:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8647:8648  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8631:8644  totalSupply() */\n      tag_347\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":411:423  _totalSupply */\n      sload(0x01)\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":341:430  function totalSupply() public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8631:8644  totalSupply() */\n    tag_347:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8631:8648  totalSupply() > 0 */\n      gt\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8623:8701  require(totalSupply() > 0, \"Boardroom: Cannot allocate when totalSupply is 0\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10078:10080   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8623:8701  require(totalSupply() > 0, \"Boardroom: Cannot allocate when totalSupply is 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10060:10081   */\n      mstore\n        /* \"#utility.yul\":10117:10119   */\n      0x30\n        /* \"#utility.yul\":10097:10115   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10090:10120   */\n      mstore\n        /* \"#utility.yul\":10156:10190   */\n      0x426f617264726f6f6d3a2043616e6e6f7420616c6c6f63617465207768656e20\n        /* \"#utility.yul\":10136:10154   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10129:10191   */\n      mstore\n      shl(0x84, 0x0746f74616c537570706c79206973203)\n        /* \"#utility.yul\":10207:10225   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10200:10246   */\n      mstore\n        /* \"#utility.yul\":10263:10282   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8623:8701  require(totalSupply() > 0, \"Boardroom: Cannot allocate when totalSupply is 0\") */\n      tag_213\n        /* \"#utility.yul\":9876:10288   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8623:8701  require(totalSupply() > 0, \"Boardroom: Cannot allocate when totalSupply is 0\") */\n    tag_348:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8749:8764  uint256 prevRPS */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8767:8786  getLatestSnapshot() */\n      tag_351\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8767:8784  getLatestSnapshot */\n      tag_185\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8767:8786  getLatestSnapshot() */\n      jump\t// in\n    tag_351:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8767:8801  getLatestSnapshot().rewardPerShare */\n      0x40\n      add\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8749:8801  uint256 prevRPS = getLatestSnapshot().rewardPerShare */\n      swap1\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8811:8826  uint256 nextRPS */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8829:8877  prevRPS.add(amount.mul(1e18).div(totalSupply())) */\n      tag_352\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8841:8876  amount.mul(1e18).div(totalSupply()) */\n      tag_353\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8862:8875  totalSupply() */\n      tag_354\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":411:423  _totalSupply */\n      sload(0x01)\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":341:430  function totalSupply() public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8862:8875  totalSupply() */\n    tag_354:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8841:8857  amount.mul(1e18) */\n      tag_190\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8841:8847  amount */\n      dup7\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8852:8856  1e18 */\n      0x0de0b6b3a7640000\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8841:8851  amount.mul */\n      tag_194\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8841:8857  amount.mul(1e18) */\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8841:8876  amount.mul(1e18).div(totalSupply()) */\n    tag_353:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8829:8836  prevRPS */\n      dup4\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8829:8840  prevRPS.add */\n      tag_196\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8829:8877  prevRPS.add(amount.mul(1e18).div(totalSupply())) */\n      jump\t// in\n    tag_352:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8927:9015  BoardroomSnapshot({time: block.number, rewardReceived: amount, rewardPerShare: nextRPS}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8952:8964  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8927:9015  BoardroomSnapshot({time: block.number, rewardReceived: amount, rewardPerShare: nextRPS}) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup7\n      dup2\n      mstore\n      swap2\n      dup2\n      add\n      dup4\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9025:9041  boardroomHistory */\n      0x09\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9025:9059  boardroomHistory.push(newSnapshot) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      0x03\n      swap1\n      swap3\n      mul\n      swap2\n      dup3\n      add\n      sstore\n      swap3\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0\n      dup5\n      add\n      sstore\n      mload\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9070:9075  token */\n      sload(0x05)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8927:9015  BoardroomSnapshot({time: block.number, rewardReceived: amount, rewardPerShare: nextRPS}) */\n      swap2\n      swap3\n      pop\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9070:9127  token.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_357\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9070:9075  token */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9093:9103  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9113:9117  this */\n      address\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8927:9015  BoardroomSnapshot({time: block.number, rewardReceived: amount, rewardPerShare: nextRPS}) */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9070:9092  token.safeTransferFrom */\n      tag_358\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9070:9127  token.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_357:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9142:9173  RewardAdded(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":548:573   */\n      dup5\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9154:9164  msg.sender */\n      caller\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9142:9173  RewardAdded(msg.sender, amount) */\n      0xac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29\n      swap1\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":9142:9173  RewardAdded(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8552:9180  {... */\n      pop\n      pop\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8472:9180  function allocateSeigniorage(uint256 amount) external onlyOneBlock onlyOperator {... */\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6768:7312  function stake(uint256 amount) public override onlyOneBlock updateReward(msg.sender) {... */\n    tag_147:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":246:258  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":215:219  bool */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:259  _status[block.number] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:245  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:259  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":260:269  tx.origin */\n      origin\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":238:270  _status[block.number][tx.origin] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":455:484  !checkSameOriginReentranted() */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":447:527  require(!checkSameOriginReentranted(), \"ContractGuard: one block, one function\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_362:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":375:387  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":344:348  bool */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:388  _status[block.number] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:374  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:388  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":389:399  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":367:400  _status[block.number][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":545:574  !checkSameSenderReentranted() */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":537:617  require(!checkSameSenderReentranted(), \"ContractGuard: one block, one function\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_365:\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":636:648  block.number */\n      number\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:649  _status[block.number] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:635  _status */\n      0x03\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:649  _status[block.number] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":650:659  tx.origin */\n      origin\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:660  _status[block.number][tx.origin] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:667  _status[block.number][tx.origin] = true */\n      dup1\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":663:667  true */\n      0x01\n      not(0xff)\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":628:667  _status[block.number][tx.origin] = true */\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":699:709  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":677:710  _status[block.number][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      swap1\n      swap4\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":677:717  _status[block.number][msg.sender] = true */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2467:2487  member != address(0) */\n      dup1\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2463:2698  if (member != address(0)) {... */\n      tag_368\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      dup2\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2503:2525  Memberseat memory seat */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2535  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2503:2543  Memberseat memory seat = members[member] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2591  earned(member) */\n      tag_369\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2536:2542  member */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2583  earned */\n      tag_51\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2591  earned(member) */\n      jump\t// in\n    tag_369:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2557:2574  seat.rewardEarned */\n      0x20\n      dup3\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2557:2591  seat.rewardEarned = earned(member) */\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2651  latestSnapshotIndex() */\n      tag_370\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2649  latestSnapshotIndex */\n      tag_93\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2651  latestSnapshotIndex() */\n      jump\t// in\n    tag_370:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2605:2651  seat.lastSnapshotIndex = latestSnapshotIndex() */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      dup3\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2605:2627  seat.lastSnapshotIndex */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2672  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2687  members[member] = seat */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2463:2698  if (member != address(0)) {... */\n    tag_368:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6872:6902  isAddressBlacklist(msg.sender) */\n      tag_372\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6891:6901  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6872:6890  isAddressBlacklist */\n      tag_166\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6872:6902  isAddressBlacklist(msg.sender) */\n      jump\t// in\n    tag_372:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6871:6902  !isAddressBlacklist(msg.sender) */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6863:6916  require(!isAddressBlacklist(msg.sender), \"blacklist\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_232\n      jump\t// in\n    tag_373:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6943:6944  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6934:6940  amount */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6934:6944  amount > 0 */\n      gt\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6926:6974  require(amount > 0, \"Boardroom: Cannot stake 0\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10495:10497   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6926:6974  require(amount > 0, \"Boardroom: Cannot stake 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10477:10498   */\n      mstore\n        /* \"#utility.yul\":10534:10536   */\n      0x19\n        /* \"#utility.yul\":10514:10532   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10507:10537   */\n      mstore\n        /* \"#utility.yul\":10573:10600   */\n      0x426f617264726f6f6d3a2043616e6e6f74207374616b65203000000000000000\n        /* \"#utility.yul\":10553:10571   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10546:10601   */\n      mstore\n        /* \"#utility.yul\":10618:10636   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6926:6974  require(amount > 0, \"Boardroom: Cannot stake 0\") */\n      tag_213\n        /* \"#utility.yul\":10293:10642   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6926:6974  require(amount > 0, \"Boardroom: Cannot stake 0\") */\n    tag_375:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6988:6991  fee */\n      sload(0x0c)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6988:6995  fee > 0 */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6984:7157  if (fee > 0) {... */\n      tag_378\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7011:7019  uint tax */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7022:7048  amount.mul(fee).div(10000) */\n      tag_379\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7042:7047  10000 */\n      0x2710\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7022:7037  amount.mul(fee) */\n      tag_190\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7033:7036  fee */\n      sload(0x0c)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7022:7028  amount */\n      dup7\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7022:7032  amount.mul */\n      tag_194\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7022:7037  amount.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7022:7048  amount.mul(fee).div(10000) */\n    tag_379:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7011:7048  uint tax = amount.mul(fee).div(10000) */\n      swap1\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7071:7086  amount.sub(tax) */\n      tag_381\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7071:7077  amount */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7011:7048  uint tax = amount.mul(fee).div(10000) */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7071:7081  amount.sub */\n      tag_192\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7071:7086  amount.sub(tax) */\n      jump\t// in\n    tag_381:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7135:7140  feeTo */\n      sload(0x0d)\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7100:7105  share */\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7062:7086  amount = amount.sub(tax) */\n      swap2\n      swap5\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7100:7146  share.safeTransferFrom(msg.sender, feeTo, tax) */\n      tag_382\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7100:7105  share */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7123:7133  msg.sender */\n      caller\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7135:7140  feeTo */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7142:7145  tax */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7100:7122  share.safeTransferFrom */\n      tag_358\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7100:7146  share.safeTransferFrom(msg.sender, feeTo, tax) */\n      jump\t// in\n    tag_382:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6997:7157  {... */\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6984:7157  if (fee > 0) {... */\n    tag_378:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7166:7185  super.stake(amount) */\n      tag_383\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7178:7184  amount */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7166:7177  super.stake */\n      tag_384\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7166:7185  super.stake(amount) */\n      jump\t// in\n    tag_383:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7233:7241  treasury */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7233:7247  treasury.epoch */\n      and\n      0x900cf0cf\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7233:7249  treasury.epoch() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_386\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_386:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_387\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_387:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7203:7213  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7195:7214  members[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7195:7202  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7195:7214  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7195:7230  members[msg.sender].epochTimerStart */\n      0x02\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7195:7249  members[msg.sender].epochTimerStart = treasury.epoch() */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7279:7305  Staked(msg.sender, amount) */\n      swap1\n      mload\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n      tag_246\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7298:7304  amount */\n      dup6\n        /* \"#utility.yul\":548:573   */\n      dup2\n      mstore\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n      swap1\n        /* \"#utility.yul\":402:579   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3647:3746  function setOperator(address _operator) external onlyOperator {... */\n    tag_154:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2207:2217  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_390:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3719:3727  operator */\n      0x04\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3719:3739  operator = _operator */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":3647:3746  function setOperator(address _operator) external onlyOperator {... */\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7873:8466  function claimReward() public updateReward(msg.sender) {... */\n    tag_156:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7916:7926  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2467:2487  member != address(0) */\n      dup1\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2463:2698  if (member != address(0)) {... */\n      tag_394\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      dup2\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2503:2525  Memberseat memory seat */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2535  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2528:2543  members[member] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2503:2543  Memberseat memory seat = members[member] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2591  earned(member) */\n      tag_395\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2536:2542  member */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2583  earned */\n      tag_51\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2577:2591  earned(member) */\n      jump\t// in\n    tag_395:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2557:2574  seat.rewardEarned */\n      0x20\n      dup3\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2557:2591  seat.rewardEarned = earned(member) */\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2651  latestSnapshotIndex() */\n      tag_396\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2649  latestSnapshotIndex */\n      tag_93\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2630:2651  latestSnapshotIndex() */\n      jump\t// in\n    tag_396:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2605:2651  seat.lastSnapshotIndex = latestSnapshotIndex() */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      dup3\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2605:2627  seat.lastSnapshotIndex */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2672  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2680  members[member] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2665:2687  members[member] = seat */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2463:2698  if (member != address(0)) {... */\n    tag_394:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7947:7977  isAddressBlacklist(msg.sender) */\n      tag_398\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7966:7976  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7947:7965  isAddressBlacklist */\n      tag_166\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7947:7977  isAddressBlacklist(msg.sender) */\n      jump\t// in\n    tag_398:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7946:7977  !isAddressBlacklist(msg.sender) */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7938:7991  require(!isAddressBlacklist(msg.sender), \"blacklist\") */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_232\n      jump\t// in\n    tag_399:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8026:8036  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8001:8015  uint256 reward */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8018:8037  members[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8018:8025  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8018:8037  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8018:8050  members[msg.sender].rewardEarned */\n      0x01\n      add\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8064:8074  reward > 0 */\n      dup1\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8060:8460  if (reward > 0) {... */\n      tag_401\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8161:8169  treasury */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8161:8175  treasury.epoch */\n      and\n      0x900cf0cf\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8161:8177  treasury.epoch() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_403\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_403:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_404\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_404:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8138:8156  rewardLockupEpochs */\n      sload(0x0b)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8106:8116  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8098:8117  members[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8098:8105  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8098:8117  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8098:8133  members[msg.sender].epochTimerStart */\n      0x02\n      add\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8098:8157  members[msg.sender].epochTimerStart.add(rewardLockupEpochs) */\n      tag_405\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8098:8137  members[msg.sender].epochTimerStart.add */\n      tag_196\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8098:8157  members[msg.sender].epochTimerStart.add(rewardLockupEpochs) */\n      jump\t// in\n    tag_405:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8098:8177  members[msg.sender].epochTimerStart.add(rewardLockupEpochs) <= treasury.epoch() */\n      gt\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8090:8215  require(members[msg.sender].epochTimerStart.add(rewardLockupEpochs) <= treasury.epoch(), \"Boardroom: still in reward lockup\") */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10849:10851   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8090:8215  require(members[msg.sender].epochTimerStart.add(rewardLockupEpochs) <= treasury.epoch(), \"Boardroom: still in reward lockup\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10831:10852   */\n      mstore\n        /* \"#utility.yul\":10888:10890   */\n      0x21\n        /* \"#utility.yul\":10868:10886   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10861:10891   */\n      mstore\n        /* \"#utility.yul\":10927:10961   */\n      0x426f617264726f6f6d3a207374696c6c20696e20726577617264206c6f636b75\n        /* \"#utility.yul\":10907:10925   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10900:10962   */\n      mstore\n      shl(0xfc, 0x07)\n        /* \"#utility.yul\":10978:10996   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10971:11002   */\n      mstore\n        /* \"#utility.yul\":11019:11038   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8090:8215  require(members[msg.sender].epochTimerStart.add(rewardLockupEpochs) <= treasury.epoch(), \"Boardroom: still in reward lockup\") */\n      tag_213\n        /* \"#utility.yul\":10647:11044   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8090:8215  require(members[msg.sender].epochTimerStart.add(rewardLockupEpochs) <= treasury.epoch(), \"Boardroom: still in reward lockup\") */\n    tag_406:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8267:8275  treasury */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8267:8281  treasury.epoch */\n      and\n      0x900cf0cf\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8267:8283  treasury.epoch() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_410\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_410:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_411\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_411:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8237:8247  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8229:8248  members[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8229:8236  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8229:8248  members[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8229:8264  members[msg.sender].epochTimerStart */\n      0x02\n      dup2\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8229:8283  members[msg.sender].epochTimerStart = treasury.epoch() */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8312:8344  members[msg.sender].rewardEarned */\n      0x01\n      swap1\n      swap3\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8312:8348  members[msg.sender].rewardEarned = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8362:8367  token */\n      sload(0x05)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8362:8400  token.safeTransfer(msg.sender, reward) */\n      tag_412\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8362:8367  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8393:8399  reward */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8362:8380  token.safeTransfer */\n      tag_286\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8362:8400  token.safeTransfer(msg.sender, reward) */\n      jump\t// in\n    tag_412:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8419:8449  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n        /* \"#utility.yul\":548:573   */\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8430:8440  msg.sender */\n      caller\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8419:8449  RewardPaid(msg.sender, reward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap1\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8419:8449  RewardPaid(msg.sender, reward) */\n      tag_246\n        /* \"#utility.yul\":402:579   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":8060:8460  if (reward > 0) {... */\n    tag_401:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7928:8466  {... */\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7873:8466  function claimReward() public updateReward(msg.sender) {... */\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":1408:1451  BoardroomSnapshot[] public boardroomHistory */\n    tag_159:\n      0x09\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_414\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_414:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap3\n      pop\n      dup4\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6019:6126  function nextEpochPoint() external view returns (uint256) {... */\n    tag_162:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6094:6102  treasury */\n      sload(0x06)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6094:6119  treasury.nextEpochPoint() */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x62cb3e13)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6068:6075  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6094:6102  treasury */\n      and\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6094:6117  treasury.nextEpochPoint */\n      0xc5967c26\n      swap2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6094:6119  treasury.nextEpochPoint() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6094:6102  treasury */\n      dup7\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":6094:6119  treasury.nextEpochPoint() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4792:4908  function isAddressBlacklist(address _address) public view returns (bool) {... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4882:4901  blacklist[_address] */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4859:4863  bool */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4882:4901  blacklist[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4882:4891  blacklist */\n      0x07\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4882:4901  blacklist[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4792:4908  function isAddressBlacklist(address _address) public view returns (bool) {... */\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7794:7867  function exit() external {... */\n    tag_172:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7848:7858  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":493:500  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:528  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7829:7860  withdraw(balanceOf(msg.sender)) */\n      tag_422\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7318:7788  function withdraw(uint256 amount) public override onlyOneBlock memberExists updateReward(msg.sender) {... */\n      tag_87\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7829:7860  withdraw(balanceOf(msg.sender)) */\n    tag_422:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":7794:7867  function exit() external {... */\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4262:4349  function setFeeTo(address _feeTo) external onlyOperator {... */\n    tag_175:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2203  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2207:2217  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2195:2217  operator == msg.sender */\n      eq\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":2187:2259  require(operator == msg.sender, \"Boardroom: caller is not the operator\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_250\n      jump\t// in\n    tag_425:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4328:4333  feeTo */\n      0x0d\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4328:4342  feeTo = _feeTo */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":4262:4349  function setFeeTo(address _feeTo) external onlyOperator {... */\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5119:5260  function getLatestSnapshot() internal view returns (BoardroomSnapshot memory) {... */\n    tag_185:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5171:5195  BoardroomSnapshot memory */\n      tag_428\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_428:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5214:5230  boardroomHistory */\n      0x09\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5231:5252  latestSnapshotIndex() */\n      tag_431\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5231:5250  latestSnapshotIndex */\n      tag_93\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5231:5252  latestSnapshotIndex() */\n      jump\t// in\n    tag_431:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5214:5253  boardroomHistory[latestSnapshotIndex()] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_433\n      jumpi\n      tag_433\n      tag_434\n      jump\t// in\n    tag_433:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5207:5253  return boardroomHistory[latestSnapshotIndex()] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5119:5260  function getLatestSnapshot() internal view returns (BoardroomSnapshot memory) {... */\n      swap1\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5407:5571  function getLastSnapshotOf(address member) internal view returns (BoardroomSnapshot memory) {... */\n    tag_187:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5473:5497  BoardroomSnapshot memory */\n      tag_436\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_436:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5516:5532  boardroomHistory */\n      0x09\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5533:5563  getLastSnapshotIndexOf(member) */\n      tag_438\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5556:5562  member */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5376  members[member] */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5335:5342  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5376  members[member] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5368  members */\n      0x08\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5376  members[member] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5361:5394  members[member].lastSnapshotIndex */\n      sload\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5266:5401  function getLastSnapshotIndexOf(address member) public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5533:5563  getLastSnapshotIndexOf(member) */\n    tag_438:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5516:5564  boardroomHistory[getLastSnapshotIndexOf(member)] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_440\n      jumpi\n      tag_440\n      tag_434\n      jump\t// in\n    tag_440:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5509:5564  return boardroomHistory[getLastSnapshotIndexOf(member)] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":5407:5571  function getLastSnapshotOf(address member) internal view returns (BoardroomSnapshot memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3050:3146  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_192:\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3108:3115  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3134:3139  a - b */\n      tag_443\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3138:3139  b */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3134:3135  a */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3134:3139  a - b */\n      tag_444\n      jump\t// in\n    tag_443:\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3127:3139  return a - b */\n      swap4\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3050:3146  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3393:3489  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_194:\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3451:3458  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3477:3482  a * b */\n      tag_443\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3481:3482  b */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3477:3478  a */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3477:3482  a * b */\n      tag_447\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3778:3874  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_195:\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3836:3843  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3862:3867  a / b */\n      tag_443\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3866:3867  b */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3862:3863  a */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3862:3867  a / b */\n      tag_450\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2683:2779  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_196:\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2741:2748  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2767:2772  a + b */\n      tag_443\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2771:2772  b */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2767:2768  a */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2767:2772  a + b */\n      tag_453\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":792:1153  function withdraw(uint256 amount) public virtual {... */\n    tag_245:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":883:893  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":851:870  uint256 memberShare */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":873:894  _balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":873:882  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":873:894  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":912:933  memberShare >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":904:992  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n      tag_457\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12173:12175   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":904:992  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12155:12176   */\n      mstore\n        /* \"#utility.yul\":12212:12214   */\n      0x36\n        /* \"#utility.yul\":12192:12210   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12185:12215   */\n      mstore\n        /* \"#utility.yul\":12251:12285   */\n      0x426f617264726f6f6d3a20776974686472617720726571756573742067726561\n        /* \"#utility.yul\":12231:12249   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12224:12286   */\n      mstore\n      shl(0x52, 0x1d195c881d1a185b881cdd185ad95908185b5bdd5b9d)\n        /* \"#utility.yul\":12302:12320   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12295:12347   */\n      mstore\n        /* \"#utility.yul\":12364:12383   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":904:992  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n      tag_213\n        /* \"#utility.yul\":11971:12389   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":904:992  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n    tag_457:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1017:1029  _totalSupply */\n      sload(0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1017:1041  _totalSupply.sub(amount) */\n      tag_460\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1034:1040  amount */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1017:1033  _totalSupply.sub */\n      tag_192\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1017:1041  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_460:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1002:1014  _totalSupply */\n      0x01\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1002:1041  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1075:1098  memberShare.sub(amount) */\n      tag_461\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1075:1086  memberShare */\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1091:1097  amount */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1075:1090  memberShare.sub */\n      tag_192\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1075:1098  memberShare.sub(amount) */\n      jump\t// in\n    tag_461:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1061:1071  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1051:1072  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1051:1060  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1051:1072  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1051:1098  _balances[msg.sender] = memberShare.sub(amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1108:1113  share */\n      swap1\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1108:1146  share.safeTransfer(msg.sender, amount) */\n      tag_401\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1108:1113  share */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1139:1145  amount */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":652:827  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_286:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12586:12618   */\n      dup4\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12568:12619   */\n      mstore\n        /* \"#utility.yul\":12635:12653   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12628:12662   */\n      dup3\n      swap1\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":734:820  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_304\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":754:759  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":784:807  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":12541:12559   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_465:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":734:753  _callOptionalReturn */\n      tag_467\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":734:820  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":833:1036  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_358:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12931:12946   */\n      dup1\n      dup6\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12913:12947   */\n      mstore\n        /* \"#utility.yul\":12983:12998   */\n      dup4\n      and\n        /* \"#utility.yul\":12963:12981   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12956:12999   */\n      mstore\n        /* \"#utility.yul\":13015:13033   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":13008:13042   */\n      dup3\n      swap1\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":933:1029  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_469\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":953:958  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":983:1010  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":12848:12866   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_465\n        /* \"#utility.yul\":12673:13048   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":933:1029  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_469:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":833:1036  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":550:786  function stake(uint256 amount) public virtual {... */\n    tag_384:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":621:633  _totalSupply */\n      sload(0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":621:645  _totalSupply.add(amount) */\n      tag_473\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":638:644  amount */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":621:637  _totalSupply.add */\n      tag_196\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":621:645  _totalSupply.add(amount) */\n      jump\t// in\n    tag_473:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":606:618  _totalSupply */\n      0x01\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":606:645  _totalSupply = _totalSupply.add(amount) */\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":689:699  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:700  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:688  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:700  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:712  _balances[msg.sender].add(amount) */\n      tag_474\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":705:711  amount */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:704  _balances[msg.sender].add */\n      tag_196\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:712  _balances[msg.sender].add(amount) */\n      jump\t// in\n    tag_474:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":665:675  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":655:676  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":655:664  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":655:676  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":655:712  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:727  share */\n      swap1\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:779  share.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_475\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:727  share */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":765:769  this */\n      address\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":772:778  amount */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:744  share.safeTransferFrom */\n      tag_358\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:779  share.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_475:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":550:786  function stake(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3000:3706  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_467:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3419:3442  bytes memory returndata */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_477\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3473:3477  data */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3453:3458  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3445:3472  address(token).functionCall */\n      and\n      tag_478\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_477:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3528:3545  returndata.length */\n      dup1\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3419:3514  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3528:3549  returndata.length > 0 */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3524:3700  if (returndata.length > 0) {... */\n      tag_304\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3623:3633  returndata */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3612:3642  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_480\n      swap2\n      swap1\n      tag_481\n      jump\t// in\n    tag_480:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13537:13539   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13519:13540   */\n      mstore\n        /* \"#utility.yul\":13576:13578   */\n      0x2a\n        /* \"#utility.yul\":13556:13574   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13549:13579   */\n      mstore\n        /* \"#utility.yul\":13615:13649   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":13595:13613   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13588:13650   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":13666:13684   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13659:13699   */\n      mstore\n        /* \"#utility.yul\":13716:13735   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_213\n        /* \"#utility.yul\":13335:13741   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4041:4264  function functionCall(... */\n    tag_478:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4174:4186  bytes memory */\n      0x60\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4205:4257  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_188\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4227:4233  target */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4235:4239  data */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4241:4242  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4244:4256  errorMessage */\n      dup6\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4174:4186  bytes memory */\n      dup6\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5379:5391  bool success */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5393:5416  bytes memory returndata */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5420:5426  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5420:5431  target.call */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5439:5444  value */\n      dup6\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5446:5450  data */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5420:5451  target.call{value: value}(data) */\n      mload(0x40)\n      tag_492\n      swap2\n      swap1\n      tag_493\n      jump\t// in\n    tag_492:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_496\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_495)\n    tag_496:\n      0x60\n      swap2\n      pop\n    tag_495:\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5378:5451  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5468:5537  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_497\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5495:5501  target */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5503:5510  success */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5512:5522  returndata */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5524:5536  errorMessage */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5468:5494  verifyCallResultFromTarget */\n      tag_498\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5468:5537  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_497:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5461:5537  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5098:5544  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7604:8232  function verifyCallResultFromTarget(... */\n    tag_498:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7784:7796  bytes memory */\n      0x60\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7812:7819  success */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7808:8226  if (success) {... */\n      iszero\n      tag_500\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7839:7849  returndata */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7839:7856  returndata.length */\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7860:7861  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7839:7861  returndata.length == 0 */\n      sub\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7835:8121  if (returndata.length == 0) {... */\n      tag_504\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":1634:1653  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      tag_504\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14897:14899   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14879:14900   */\n      mstore\n        /* \"#utility.yul\":14936:14938   */\n      0x1d\n        /* \"#utility.yul\":14916:14934   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14909:14939   */\n      mstore\n        /* \"#utility.yul\":14975:15006   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":14955:14973   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14948:15007   */\n      mstore\n        /* \"#utility.yul\":15024:15042   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      tag_213\n        /* \"#utility.yul\":14695:15048   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n    tag_504:\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8141:8151  returndata */\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8134:8151  return returndata */\n      jump(tag_188)\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7808:8226  if (success) {... */\n    tag_500:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8182:8215  _revert(returndata, errorMessage) */\n      tag_188\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8190:8200  returndata */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8202:8214  errorMessage */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8913:8930  returndata.length */\n      dup2\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8913:8934  returndata.length > 0 */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8909:9288  if (returndata.length > 0) {... */\n      tag_512\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9141:9151  returndata */\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9135:9152  mload(returndata) */\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9197:9212  returndata_size */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9184:9194  returndata */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9180:9182  32 */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9176:9195  add(32, returndata) */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9169:9213  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8909:9288  if (returndata.length > 0) {... */\n    tag_512:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9264:9276  errorMessage */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9257:9277  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_515\n      jump\t// in\n        /* \"#utility.yul\":14:145   */\n    tag_516:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:397   */\n    tag_50:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_523:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_443\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_516\n      jump\t// in\n        /* \"#utility.yul\":1308:1488   */\n    tag_86:\n        /* \"#utility.yul\":1367:1373   */\n      0x00\n        /* \"#utility.yul\":1420:1422   */\n      0x20\n        /* \"#utility.yul\":1408:1417   */\n      dup3\n        /* \"#utility.yul\":1399:1406   */\n      dup5\n        /* \"#utility.yul\":1395:1418   */\n      sub\n        /* \"#utility.yul\":1391:1423   */\n      slt\n        /* \"#utility.yul\":1388:1440   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1433:1434   */\n      dup1\n        /* \"#utility.yul\":1426:1438   */\n      revert\n        /* \"#utility.yul\":1388:1440   */\n    tag_530:\n      pop\n        /* \"#utility.yul\":1459:1482   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1308:1488   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1493:1741   */\n    tag_90:\n        /* \"#utility.yul\":1561:1567   */\n      0x00\n        /* \"#utility.yul\":1569:1575   */\n      dup1\n        /* \"#utility.yul\":1622:1624   */\n      0x40\n        /* \"#utility.yul\":1610:1619   */\n      dup4\n        /* \"#utility.yul\":1601:1608   */\n      dup6\n        /* \"#utility.yul\":1597:1620   */\n      sub\n        /* \"#utility.yul\":1593:1625   */\n      slt\n        /* \"#utility.yul\":1590:1642   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":1638:1639   */\n      0x00\n        /* \"#utility.yul\":1635:1636   */\n      dup1\n        /* \"#utility.yul\":1628:1640   */\n      revert\n        /* \"#utility.yul\":1590:1642   */\n    tag_532:\n      pop\n      pop\n        /* \"#utility.yul\":1661:1684   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1731:1733   */\n      0x20\n        /* \"#utility.yul\":1716:1734   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1703:1735   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1493:1741   */\n      jump\t// out\n        /* \"#utility.yul\":1746:2534   */\n    tag_103:\n        /* \"#utility.yul\":1889:1895   */\n      0x00\n        /* \"#utility.yul\":1897:1903   */\n      dup1\n        /* \"#utility.yul\":1905:1911   */\n      0x00\n        /* \"#utility.yul\":1913:1919   */\n      dup1\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1977   */\n      0xa0\n        /* \"#utility.yul\":1962:1971   */\n      dup7\n        /* \"#utility.yul\":1953:1960   */\n      dup9\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1978   */\n      slt\n        /* \"#utility.yul\":1942:1995   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":1991:1992   */\n      0x00\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1981:1993   */\n      revert\n        /* \"#utility.yul\":1942:1995   */\n    tag_534:\n        /* \"#utility.yul\":2030:2039   */\n      dup6\n        /* \"#utility.yul\":2017:2040   */\n      calldataload\n        /* \"#utility.yul\":2049:2080   */\n      tag_535\n        /* \"#utility.yul\":2074:2079   */\n      dup2\n        /* \"#utility.yul\":2049:2080   */\n      tag_516\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":2099:2104   */\n      swap5\n      pop\n        /* \"#utility.yul\":2156:2158   */\n      0x20\n        /* \"#utility.yul\":2141:2159   */\n      dup7\n      add\n        /* \"#utility.yul\":2128:2160   */\n      calldataload\n        /* \"#utility.yul\":2169:2202   */\n      tag_536\n        /* \"#utility.yul\":2128:2160   */\n      dup2\n        /* \"#utility.yul\":2169:2202   */\n      tag_516\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":2221:2228   */\n      swap4\n      pop\n        /* \"#utility.yul\":2280:2282   */\n      0x40\n        /* \"#utility.yul\":2265:2283   */\n      dup7\n      add\n        /* \"#utility.yul\":2252:2284   */\n      calldataload\n        /* \"#utility.yul\":2293:2326   */\n      tag_537\n        /* \"#utility.yul\":2252:2284   */\n      dup2\n        /* \"#utility.yul\":2293:2326   */\n      tag_516\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":2345:2352   */\n      swap3\n      pop\n        /* \"#utility.yul\":2399:2401   */\n      0x60\n        /* \"#utility.yul\":2384:2402   */\n      dup7\n      add\n        /* \"#utility.yul\":2371:2403   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2455:2458   */\n      0x80\n        /* \"#utility.yul\":2440:2459   */\n      dup7\n      add\n        /* \"#utility.yul\":2427:2460   */\n      calldataload\n        /* \"#utility.yul\":2469:2502   */\n      tag_538\n        /* \"#utility.yul\":2427:2460   */\n      dup2\n        /* \"#utility.yul\":2469:2502   */\n      tag_516\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":2521:2528   */\n      dup1\n        /* \"#utility.yul\":2511:2528   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1746:2534   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:2927   */\n    tag_107:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2668:2670   */\n      0x40\n        /* \"#utility.yul\":2656:2665   */\n      dup4\n        /* \"#utility.yul\":2647:2654   */\n      dup6\n        /* \"#utility.yul\":2643:2666   */\n      sub\n        /* \"#utility.yul\":2639:2671   */\n      slt\n        /* \"#utility.yul\":2636:2688   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":2684:2685   */\n      0x00\n        /* \"#utility.yul\":2681:2682   */\n      dup1\n        /* \"#utility.yul\":2674:2686   */\n      revert\n        /* \"#utility.yul\":2636:2688   */\n    tag_540:\n        /* \"#utility.yul\":2723:2732   */\n      dup3\n        /* \"#utility.yul\":2710:2733   */\n      calldataload\n        /* \"#utility.yul\":2742:2773   */\n      tag_541\n        /* \"#utility.yul\":2767:2772   */\n      dup2\n        /* \"#utility.yul\":2742:2773   */\n      tag_516\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":2792:2797   */\n      swap2\n      pop\n        /* \"#utility.yul\":2849:2851   */\n      0x20\n        /* \"#utility.yul\":2834:2852   */\n      dup4\n      add\n        /* \"#utility.yul\":2821:2853   */\n      calldataload\n        /* \"#utility.yul\":2862:2895   */\n      tag_542\n        /* \"#utility.yul\":2821:2853   */\n      dup2\n        /* \"#utility.yul\":2862:2895   */\n      tag_516\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":2914:2921   */\n      dup1\n        /* \"#utility.yul\":2904:2921   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2539:2927   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2932:3403   */\n    tag_111:\n        /* \"#utility.yul\":3024:3030   */\n      0x00\n        /* \"#utility.yul\":3032:3038   */\n      dup1\n        /* \"#utility.yul\":3040:3046   */\n      0x00\n        /* \"#utility.yul\":3093:3095   */\n      0x60\n        /* \"#utility.yul\":3081:3090   */\n      dup5\n        /* \"#utility.yul\":3072:3079   */\n      dup7\n        /* \"#utility.yul\":3068:3091   */\n      sub\n        /* \"#utility.yul\":3064:3096   */\n      slt\n        /* \"#utility.yul\":3061:3113   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":3109:3110   */\n      0x00\n        /* \"#utility.yul\":3106:3107   */\n      dup1\n        /* \"#utility.yul\":3099:3111   */\n      revert\n        /* \"#utility.yul\":3061:3113   */\n    tag_544:\n        /* \"#utility.yul\":3148:3157   */\n      dup4\n        /* \"#utility.yul\":3135:3158   */\n      calldataload\n        /* \"#utility.yul\":3167:3198   */\n      tag_545\n        /* \"#utility.yul\":3192:3197   */\n      dup2\n        /* \"#utility.yul\":3167:3198   */\n      tag_516\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":3217:3222   */\n      swap3\n      pop\n        /* \"#utility.yul\":3269:3271   */\n      0x20\n        /* \"#utility.yul\":3254:3272   */\n      dup5\n      add\n        /* \"#utility.yul\":3241:3273   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3325:3327   */\n      0x40\n        /* \"#utility.yul\":3310:3328   */\n      dup5\n      add\n        /* \"#utility.yul\":3297:3329   */\n      calldataload\n        /* \"#utility.yul\":3338:3371   */\n      tag_546\n        /* \"#utility.yul\":3297:3329   */\n      dup2\n        /* \"#utility.yul\":3338:3371   */\n      tag_516\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":3390:3397   */\n      dup1\n        /* \"#utility.yul\":3380:3397   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2932:3403   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3857:4041   */\n    tag_201:\n        /* \"#utility.yul\":3927:3933   */\n      0x00\n        /* \"#utility.yul\":3980:3982   */\n      0x20\n        /* \"#utility.yul\":3968:3977   */\n      dup3\n        /* \"#utility.yul\":3959:3966   */\n      dup5\n        /* \"#utility.yul\":3955:3978   */\n      sub\n        /* \"#utility.yul\":3951:3983   */\n      slt\n        /* \"#utility.yul\":3948:4000   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":3996:3997   */\n      0x00\n        /* \"#utility.yul\":3993:3994   */\n      dup1\n        /* \"#utility.yul\":3986:3998   */\n      revert\n        /* \"#utility.yul\":3948:4000   */\n    tag_550:\n      pop\n        /* \"#utility.yul\":4019:4035   */\n      mload\n      swap2\n        /* \"#utility.yul\":3857:4041   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4046:4448   */\n    tag_214:\n        /* \"#utility.yul\":4248:4250   */\n      0x20\n        /* \"#utility.yul\":4230:4251   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4287:4289   */\n      0x26\n        /* \"#utility.yul\":4267:4285   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4260:4290   */\n      mstore\n        /* \"#utility.yul\":4326:4360   */\n      0x436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e65206675\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4306:4324   */\n      dup3\n      add\n        /* \"#utility.yul\":4299:4361   */\n      mstore\n      shl(0xd1, 0x3731ba34b7b7)\n        /* \"#utility.yul\":4392:4394   */\n      0x60\n        /* \"#utility.yul\":4377:4395   */\n      dup3\n      add\n        /* \"#utility.yul\":4370:4406   */\n      mstore\n        /* \"#utility.yul\":4438:4441   */\n      0x80\n        /* \"#utility.yul\":4423:4442   */\n      add\n      swap1\n        /* \"#utility.yul\":4046:4448   */\n      jump\t// out\n        /* \"#utility.yul\":4858:5190   */\n    tag_232:\n        /* \"#utility.yul\":5060:5062   */\n      0x20\n        /* \"#utility.yul\":5042:5063   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5099:5100   */\n      0x09\n        /* \"#utility.yul\":5079:5097   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5072:5101   */\n      mstore\n      shl(0xba, 0x189b1858dadb1a5cdd)\n        /* \"#utility.yul\":5132:5134   */\n      0x40\n        /* \"#utility.yul\":5117:5135   */\n      dup3\n      add\n        /* \"#utility.yul\":5110:5149   */\n      mstore\n        /* \"#utility.yul\":5181:5183   */\n      0x60\n        /* \"#utility.yul\":5166:5184   */\n      add\n      swap1\n        /* \"#utility.yul\":4858:5190   */\n      jump\t// out\n        /* \"#utility.yul\":5956:6357   */\n    tag_250:\n        /* \"#utility.yul\":6158:6160   */\n      0x20\n        /* \"#utility.yul\":6140:6161   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6197:6199   */\n      0x25\n        /* \"#utility.yul\":6177:6195   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6170:6200   */\n      mstore\n        /* \"#utility.yul\":6236:6270   */\n      0x426f617264726f6f6d3a2063616c6c6572206973206e6f7420746865206f7065\n        /* \"#utility.yul\":6231:6233   */\n      0x40\n        /* \"#utility.yul\":6216:6234   */\n      dup3\n      add\n        /* \"#utility.yul\":6209:6271   */\n      mstore\n      shl(0xd9, 0x3930ba37b9)\n        /* \"#utility.yul\":6302:6304   */\n      0x60\n        /* \"#utility.yul\":6287:6305   */\n      dup3\n      add\n        /* \"#utility.yul\":6280:6315   */\n      mstore\n        /* \"#utility.yul\":6347:6350   */\n      0x80\n        /* \"#utility.yul\":6332:6351   */\n      add\n      swap1\n        /* \"#utility.yul\":5956:6357   */\n      jump\t// out\n        /* \"#utility.yul\":11049:11176   */\n    tag_434:\n        /* \"#utility.yul\":11110:11120   */\n      0x4e487b71\n        /* \"#utility.yul\":11105:11108   */\n      0xe0\n        /* \"#utility.yul\":11101:11121   */\n      shl\n        /* \"#utility.yul\":11098:11099   */\n      0x00\n        /* \"#utility.yul\":11091:11122   */\n      mstore\n        /* \"#utility.yul\":11141:11145   */\n      0x32\n        /* \"#utility.yul\":11138:11139   */\n      0x04\n        /* \"#utility.yul\":11131:11146   */\n      mstore\n        /* \"#utility.yul\":11165:11169   */\n      0x24\n        /* \"#utility.yul\":11162:11163   */\n      0x00\n        /* \"#utility.yul\":11155:11170   */\n      revert\n        /* \"#utility.yul\":11181:11308   */\n    tag_517:\n        /* \"#utility.yul\":11242:11252   */\n      0x4e487b71\n        /* \"#utility.yul\":11237:11240   */\n      0xe0\n        /* \"#utility.yul\":11233:11253   */\n      shl\n        /* \"#utility.yul\":11230:11231   */\n      0x00\n        /* \"#utility.yul\":11223:11254   */\n      mstore\n        /* \"#utility.yul\":11273:11277   */\n      0x11\n        /* \"#utility.yul\":11270:11271   */\n      0x04\n        /* \"#utility.yul\":11263:11278   */\n      mstore\n        /* \"#utility.yul\":11297:11301   */\n      0x24\n        /* \"#utility.yul\":11294:11295   */\n      0x00\n        /* \"#utility.yul\":11287:11302   */\n      revert\n        /* \"#utility.yul\":11313:11438   */\n    tag_444:\n        /* \"#utility.yul\":11353:11357   */\n      0x00\n        /* \"#utility.yul\":11381:11382   */\n      dup3\n        /* \"#utility.yul\":11378:11379   */\n      dup3\n        /* \"#utility.yul\":11375:11383   */\n      lt\n        /* \"#utility.yul\":11372:11406   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":11386:11404   */\n      tag_574\n      tag_517\n      jump\t// in\n    tag_574:\n      pop\n        /* \"#utility.yul\":11423:11432   */\n      sub\n      swap1\n        /* \"#utility.yul\":11313:11438   */\n      jump\t// out\n        /* \"#utility.yul\":11443:11611   */\n    tag_447:\n        /* \"#utility.yul\":11483:11490   */\n      0x00\n        /* \"#utility.yul\":11549:11550   */\n      dup2\n        /* \"#utility.yul\":11545:11546   */\n      0x00\n        /* \"#utility.yul\":11541:11547   */\n      not\n        /* \"#utility.yul\":11537:11551   */\n      div\n        /* \"#utility.yul\":11534:11535   */\n      dup4\n        /* \"#utility.yul\":11531:11552   */\n      gt\n        /* \"#utility.yul\":11526:11527   */\n      dup3\n        /* \"#utility.yul\":11519:11528   */\n      iszero\n        /* \"#utility.yul\":11512:11529   */\n      iszero\n        /* \"#utility.yul\":11508:11553   */\n      and\n        /* \"#utility.yul\":11505:11576   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":11556:11574   */\n      tag_577\n      tag_517\n      jump\t// in\n    tag_577:\n      pop\n        /* \"#utility.yul\":11596:11605   */\n      mul\n      swap1\n        /* \"#utility.yul\":11443:11611   */\n      jump\t// out\n        /* \"#utility.yul\":11616:11833   */\n    tag_450:\n        /* \"#utility.yul\":11656:11657   */\n      0x00\n        /* \"#utility.yul\":11682:11683   */\n      dup3\n        /* \"#utility.yul\":11672:11804   */\n      tag_579\n      jumpi\n        /* \"#utility.yul\":11726:11736   */\n      0x4e487b71\n        /* \"#utility.yul\":11721:11724   */\n      0xe0\n        /* \"#utility.yul\":11717:11737   */\n      shl\n        /* \"#utility.yul\":11714:11715   */\n      0x00\n        /* \"#utility.yul\":11707:11738   */\n      mstore\n        /* \"#utility.yul\":11761:11765   */\n      0x12\n        /* \"#utility.yul\":11758:11759   */\n      0x04\n        /* \"#utility.yul\":11751:11766   */\n      mstore\n        /* \"#utility.yul\":11789:11793   */\n      0x24\n        /* \"#utility.yul\":11786:11787   */\n      0x00\n        /* \"#utility.yul\":11779:11794   */\n      revert\n        /* \"#utility.yul\":11672:11804   */\n    tag_579:\n      pop\n        /* \"#utility.yul\":11818:11827   */\n      div\n      swap1\n        /* \"#utility.yul\":11616:11833   */\n      jump\t// out\n        /* \"#utility.yul\":11838:11966   */\n    tag_453:\n        /* \"#utility.yul\":11878:11881   */\n      0x00\n        /* \"#utility.yul\":11909:11910   */\n      dup3\n        /* \"#utility.yul\":11905:11911   */\n      not\n        /* \"#utility.yul\":11902:11903   */\n      dup3\n        /* \"#utility.yul\":11899:11912   */\n      gt\n        /* \"#utility.yul\":11896:11935   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":11915:11933   */\n      tag_582\n      tag_517\n      jump\t// in\n    tag_582:\n      pop\n        /* \"#utility.yul\":11951:11960   */\n      add\n      swap1\n        /* \"#utility.yul\":11838:11966   */\n      jump\t// out\n        /* \"#utility.yul\":13053:13330   */\n    tag_481:\n        /* \"#utility.yul\":13120:13126   */\n      0x00\n        /* \"#utility.yul\":13173:13175   */\n      0x20\n        /* \"#utility.yul\":13161:13170   */\n      dup3\n        /* \"#utility.yul\":13152:13159   */\n      dup5\n        /* \"#utility.yul\":13148:13171   */\n      sub\n        /* \"#utility.yul\":13144:13176   */\n      slt\n        /* \"#utility.yul\":13141:13193   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":13189:13190   */\n      0x00\n        /* \"#utility.yul\":13186:13187   */\n      dup1\n        /* \"#utility.yul\":13179:13191   */\n      revert\n        /* \"#utility.yul\":13141:13193   */\n    tag_587:\n        /* \"#utility.yul\":13221:13230   */\n      dup2\n        /* \"#utility.yul\":13215:13231   */\n      mload\n        /* \"#utility.yul\":13274:13279   */\n      dup1\n        /* \"#utility.yul\":13267:13280   */\n      iszero\n        /* \"#utility.yul\":13260:13281   */\n      iszero\n        /* \"#utility.yul\":13253:13258   */\n      dup2\n        /* \"#utility.yul\":13250:13282   */\n      eq\n        /* \"#utility.yul\":13240:13300   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":13296:13297   */\n      0x00\n        /* \"#utility.yul\":13293:13294   */\n      dup1\n        /* \"#utility.yul\":13286:13298   */\n      revert\n        /* \"#utility.yul\":14153:14411   */\n    tag_518:\n        /* \"#utility.yul\":14225:14226   */\n      0x00\n        /* \"#utility.yul\":14235:14348   */\n    tag_592:\n        /* \"#utility.yul\":14249:14255   */\n      dup4\n        /* \"#utility.yul\":14246:14247   */\n      dup2\n        /* \"#utility.yul\":14243:14256   */\n      lt\n        /* \"#utility.yul\":14235:14348   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":14325:14336   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14319:14337   */\n      mload\n        /* \"#utility.yul\":14306:14317   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":14299:14338   */\n      mstore\n        /* \"#utility.yul\":14271:14273   */\n      0x20\n        /* \"#utility.yul\":14264:14274   */\n      add\n        /* \"#utility.yul\":14235:14348   */\n      jump(tag_592)\n    tag_594:\n        /* \"#utility.yul\":14366:14372   */\n      dup4\n        /* \"#utility.yul\":14363:14364   */\n      dup2\n        /* \"#utility.yul\":14360:14373   */\n      gt\n        /* \"#utility.yul\":14357:14405   */\n      iszero\n      tag_469\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":14401:14402   */\n      0x00\n        /* \"#utility.yul\":14383:14399   */\n      swap2\n      add\n        /* \"#utility.yul\":14376:14403   */\n      mstore\n        /* \"#utility.yul\":14153:14411   */\n      jump\t// out\n        /* \"#utility.yul\":14416:14690   */\n    tag_493:\n        /* \"#utility.yul\":14545:14548   */\n      0x00\n        /* \"#utility.yul\":14583:14589   */\n      dup3\n        /* \"#utility.yul\":14577:14590   */\n      mload\n        /* \"#utility.yul\":14599:14652   */\n      tag_597\n        /* \"#utility.yul\":14645:14651   */\n      dup2\n        /* \"#utility.yul\":14640:14643   */\n      dup5\n        /* \"#utility.yul\":14633:14637   */\n      0x20\n        /* \"#utility.yul\":14625:14631   */\n      dup8\n        /* \"#utility.yul\":14621:14638   */\n      add\n        /* \"#utility.yul\":14599:14652   */\n      tag_518\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":14668:14684   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":14416:14690   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15053:15436   */\n    tag_515:\n        /* \"#utility.yul\":15202:15204   */\n      0x20\n        /* \"#utility.yul\":15191:15200   */\n      dup2\n        /* \"#utility.yul\":15184:15205   */\n      mstore\n        /* \"#utility.yul\":15165:15169   */\n      0x00\n        /* \"#utility.yul\":15234:15240   */\n      dup3\n        /* \"#utility.yul\":15228:15241   */\n      mload\n        /* \"#utility.yul\":15277:15283   */\n      dup1\n        /* \"#utility.yul\":15272:15274   */\n      0x20\n        /* \"#utility.yul\":15261:15270   */\n      dup5\n        /* \"#utility.yul\":15257:15275   */\n      add\n        /* \"#utility.yul\":15250:15284   */\n      mstore\n        /* \"#utility.yul\":15293:15359   */\n      tag_600\n        /* \"#utility.yul\":15352:15358   */\n      dup2\n        /* \"#utility.yul\":15347:15349   */\n      0x40\n        /* \"#utility.yul\":15336:15345   */\n      dup6\n        /* \"#utility.yul\":15332:15350   */\n      add\n        /* \"#utility.yul\":15327:15329   */\n      0x20\n        /* \"#utility.yul\":15319:15325   */\n      dup8\n        /* \"#utility.yul\":15315:15330   */\n      add\n        /* \"#utility.yul\":15293:15359   */\n      tag_518\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":15420:15422   */\n      0x1f\n        /* \"#utility.yul\":15399:15414   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":15395:15424   */\n      and\n        /* \"#utility.yul\":15380:15425   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":15427:15429   */\n      0x40\n        /* \"#utility.yul\":15376:15430   */\n      add\n      swap3\n        /* \"#utility.yul\":15053:15436   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209c3f8abeb878c7f7eae12fafc8fc1f0908ee71fe498c6e898c6049d4440ee5ed64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526004805460ff60a01b1916905534801561001d57600080fd5b506125178061002d6000396000f3fe608060405234801561001057600080fd5b50600436106102315760003560e01c806361d027b311610130578063b3ab15fb116100b8578063ddca3f431161007c578063ddca3f43146104e9578063e9fad8ee146104f2578063f46901ed146104fa578063f9f92be41461050d578063fc0c546a1461053057600080fd5b8063b3ab15fb146104a0578063b88a802f146104b3578063c58e3843146104bb578063c5967c26146104ce578063d256d48a146104d657600080fd5b8063714b4658116100ff578063714b465814610436578063900cf0cf1461045f57806397ffe1d714610467578063a694fc3a1461047a578063a8d5fd651461048d57600080fd5b806361d027b3146103d457806369fe0e2d146103e75780636cee85c2146103fa57806370a082311461040d57600080fd5b80632e1a7d4d116101be578063530b97a411610182578063530b97a41461037557806353c038291461038857806354575af41461039b578063570ca735146103ae5780635db76731146103c157600080fd5b80632e1a7d4d146103355780632ffaaa091461034a5780633f9e3f041461035d578063446a2ec8146103655780634b94f50e1461036d57600080fd5b806308ae4b0c1161020557806308ae4b0c146102b3578063158ef93e146102fd57806318160ddd1461031157806319262d30146103195780631e85cd651461032c57600080fd5b80628cc26214610236578063017e7e581461025c578063022ba18d14610287578063046335d014610290575b600080fd5b6102496102443660046121a6565b610543565b6040519081526020015b60405180910390f35b600d5461026f906001600160a01b031681565b6040516001600160a01b039091168152602001610253565b610249600b5481565b6102a361029e3660046121a6565b6105d4565b6040519015158152602001610253565b6102e26102c13660046121a6565b60086020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610253565b6004546102a390600160a01b900460ff1681565b600154610249565b6102a36103273660046121a6565b610672565b610249600a5481565b6103486103433660046121c3565b610708565b005b6103486103583660046121dc565b610a63565b610249610b01565b610249610b17565b610249610b2a565b6103486103833660046121fe565b610b98565b610348610396366004612266565b610d46565b6103486103a936600461229f565b610fd7565b60045461026f906001600160a01b031681565b6102a36103cf3660046121a6565b6110e5565b60065461026f906001600160a01b031681565b6103486103f53660046121c3565b61119c565b6102a36104083660046121a6565b61120c565b61024961041b3660046121a6565b6001600160a01b031660009081526002602052604090205490565b6102496104443660046121a6565b6001600160a01b031660009081526008602052604090205490565b6102496112bc565b6103486104753660046121c3565b611306565b6103486104883660046121c3565b6115d7565b60005461026f906001600160a01b031681565b6103486104ae3660046121a6565b6118ac565b6103486118f8565b6102e26104c93660046121c3565b611b9c565b610249611bcf565b6102a36104e43660046121a6565b611c19565b610249600c5481565b610348611c37565b6103486105083660046121a6565b611c52565b6102a361051b3660046121a6565b60076020526000908152604090205460ff1681565b60055461026f906001600160a01b031681565b60008061054e611c9e565b604001519050600061055f84611d18565b6040908101516001600160a01b0386166000908152600860205291909120600101549091506105cc906105c6670de0b6b3a76400006105c06105a18787611dab565b6001600160a01b038a1660009081526002602052604090205490611dbe565b90611dca565b90611dd6565b949350505050565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064291906122e1565b600b546001600160a01b03841660009081526008602052604090206002015461066a91611dd6565b111592915050565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa1580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e091906122e1565b600a546001600160a01b03841660009081526008602052604090206002015461066a91611dd6565b43600090815260036020908152604080832032845290915290205460ff161561074c5760405162461bcd60e51b8152600401610743906122fa565b60405180910390fd5b43600090815260036020908152604080832033845290915290205460ff16156107875760405162461bcd60e51b8152600401610743906122fa565b43600090815260036020908152604080832032845282528083208054600160ff199182168117909255338552828520805490911690911790556002909152812054116108215760405162461bcd60e51b8152602060048201526024808201527f426f617264726f6f6d3a20546865206d656d62657220646f6573206e6f7420656044820152631e1a5cdd60e21b6064820152608401610743565b3380156108b2576001600160a01b038116600090815260086020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915261087082610543565b602082015261087d610b01565b81526001600160a01b038216600090815260086020908152604091829020835181559083015160018201559101516002909101555b6108bb33611c19565b156108d85760405162461bcd60e51b815260040161074390612340565b600082116109285760405162461bcd60e51b815260206004820152601c60248201527f426f617264726f6f6d3a2043616e6e6f742077697468647261772030000000006044820152606401610743565b600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f91906122e1565b600a54336000908152600860205260409020600201546109be91611dd6565b1115610a185760405162461bcd60e51b815260206004820152602360248201527f426f617264726f6f6d3a207374696c6c20696e207769746864726177206c6f6360448201526206b75760ec1b6064820152608401610743565b610a206118f8565b610a2982611de2565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b6004546001600160a01b03163314610a8d5760405162461bcd60e51b815260040161074390612363565b808210158015610a9e575060388211155b610af65760405162461bcd60e51b815260206004820152602360248201527f5f77697468647261774c6f636b757045706f6368733a206f7574206f662072616044820152626e676560e81b6064820152608401610743565b600a91909155600b55565b600954600090610b12906001611dab565b905090565b6000610b21611c9e565b60400151905090565b600654604080516325ca7a8760e11b815290516000926001600160a01b031691634b94f50e9160048083019260209291908290030181865afa158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1291906122e1565b600454600160a01b900460ff1615610bf25760405162461bcd60e51b815260206004820152601e60248201527f426f617264726f6f6d3a20616c726561647920696e697469616c697a656400006044820152606401610743565b600580546001600160a01b038781166001600160a01b0319928316179092556000805487841690831617815560068054878516908416178155600c869055600d8054948616949093169390931790915560408051606081018252438082526020808301858152838501868152600980546001810182559752845160039788027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af81019190915591517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0830155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b190910155600a95909555600b93909355600480546001600160a81b03191633908117600160a01b1790915591519283529290917f25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79910160405180910390a2505050505050565b6004546001600160a01b03163314610d705760405162461bcd60e51b815260040161074390612363565b610d7982611c19565b610dc55760405162461bcd60e51b815260206004820152601c60248201527f61646472657373206e6f7420696e2074686520626c61636b6c697374000000006044820152606401610743565b6001600160a01b03821660009081526002602052604090205480610e2b5760405162461bcd60e51b815260206004820152601c60248201527f426f617264726f6f6d3a2043616e6e6f742077697468647261772030000000006044820152606401610743565b6001600160a01b0383166000908152600860205260409020600101548015610f4b57600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec491906122e1565b6001600160a01b0380861660009081526008602052604081206002810193909355600190920191909155600554610efd91168483611ea2565b826001600160a01b0316846001600160a01b03167f715576a45bd0ea6ca90a2f53c258fe52bdd30e6061046ce86ca3fa7e9f5a91be83604051610f4291815260200190565b60405180910390a35b600154610f589083611dab565b6001556001600160a01b03808516600090815260026020526040812081905554610f8491168484611ea2565b826001600160a01b0316846001600160a01b03167f345a298b5b7318863d2a616f67ae5329deb5255f9f90b5ebc73ee5ddcd81b18084604051610fc991815260200190565b60405180910390a350505050565b6004546001600160a01b031633146110015760405162461bcd60e51b815260040161074390612363565b6001600160a01b0381166110405760405162461bcd60e51b8152600401610743906020808252600490820152637a65726f60e01b604082015260600190565b6005546001600160a01b03908116908416036110865760405162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b6044820152606401610743565b6000546001600160a01b03908116908416036110cc5760405162461bcd60e51b8152602060048201526005602482015264736861726560d81b6044820152606401610743565b6110e06001600160a01b0384168284611ea2565b505050565b6004546000906001600160a01b031633146111125760405162461bcd60e51b815260040161074390612363565b6001600160a01b03821660009081526007602052604090205460ff16156111735760405162461bcd60e51b81526020600482015260156024820152741859191c995cdcc8185b1c9958591e481859191959605a1b6044820152606401610743565b506001600160a01b03166000908152600760205260409020805460ff1916600190811790915590565b6004546001600160a01b031633146111c65760405162461bcd60e51b815260040161074390612363565b6127108111156112075760405162461bcd60e51b815260206004820152600c60248201526b6f7574206f662072616e676560a01b6044820152606401610743565b600c55565b6004546000906001600160a01b031633146112395760405162461bcd60e51b815260040161074390612363565b6001600160a01b03821660009081526007602052604090205460ff166112975760405162461bcd60e51b81526020600482015260136024820152721859191c995cdcc81b9bdd08195e1a5cdd1959606a1b6044820152606401610743565b506001600160a01b03166000908152600760205260409020805460ff19169055600190565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa158015610b74573d6000803e3d6000fd5b43600090815260036020908152604080832032845290915290205460ff16156113415760405162461bcd60e51b8152600401610743906122fa565b43600090815260036020908152604080832033845290915290205460ff161561137c5760405162461bcd60e51b8152600401610743906122fa565b4360009081526003602090815260408083203284529091528082208054600160ff19918216811790925533808552929093208054909316179091556004546001600160a01b0316146113e05760405162461bcd60e51b815260040161074390612363565b600081116114305760405162461bcd60e51b815260206004820152601c60248201527f426f617264726f6f6d3a2043616e6e6f7420616c6c6f636174652030000000006044820152606401610743565b600061143b60015490565b116114a15760405162461bcd60e51b815260206004820152603060248201527f426f617264726f6f6d3a2043616e6e6f7420616c6c6f63617465207768656e2060448201526f0746f74616c537570706c7920697320360841b6064820152608401610743565b60006114ab611c9e565b60400151905060006114db6114d46114c260015490565b6105c086670de0b6b3a7640000611dbe565b8390611dd6565b60408051606081018252438152602081018681529181018381526009805460018101825560009190915282517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af60039092029182015592517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0840155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1909201919091556005549192509061159c906001600160a01b0316333087611f05565b60405184815233907fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e299060200160405180910390a250505050565b43600090815260036020908152604080832032845290915290205460ff16156116125760405162461bcd60e51b8152600401610743906122fa565b43600090815260036020908152604080832033845290915290205460ff161561164d5760405162461bcd60e51b8152600401610743906122fa565b4360009081526003602090815260408083203284529091528082208054600160ff19918216811790925533808552929093208054909316179091558015611718576001600160a01b03811660009081526008602090815260409182902082516060810184528154815260018201549281019290925260020154918101919091526116d682610543565b60208201526116e3610b01565b81526001600160a01b038216600090815260086020908152604091829020835181559083015160018201559101516002909101555b61172133611c19565b1561173e5760405162461bcd60e51b815260040161074390612340565b6000821161178e5760405162461bcd60e51b815260206004820152601960248201527f426f617264726f6f6d3a2043616e6e6f74207374616b652030000000000000006044820152606401610743565b600c54156117e35760006117b36127106105c0600c5486611dbe90919063ffffffff16565b90506117bf8382611dab565b600d546000549194506117e1916001600160a01b039081169133911684611f05565b505b6117ec82611f43565b600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561183f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186391906122e1565b33600081815260086020526040908190206002019290925590517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90610a579085815260200190565b6004546001600160a01b031633146118d65760405162461bcd60e51b815260040161074390612363565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b338015611989576001600160a01b038116600090815260086020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915261194782610543565b6020820152611954610b01565b81526001600160a01b038216600090815260086020908152604091829020835181559083015160018201559101516002909101555b61199233611c19565b156119af5760405162461bcd60e51b815260040161074390612340565b336000908152600860205260409020600101548015611b9857600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3f91906122e1565b600b5433600090815260086020526040902060020154611a5e91611dd6565b1115611ab65760405162461bcd60e51b815260206004820152602160248201527f426f617264726f6f6d3a207374696c6c20696e20726577617264206c6f636b756044820152600760fc1b6064820152608401610743565b600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2d91906122e1565b3360008181526008602052604081206002810193909355600190920191909155600554611b66916001600160a01b039091169083611ea2565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048690602001610a57565b5050565b60098181548110611bac57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600654604080516362cb3e1360e11b815290516000926001600160a01b03169163c5967c269160048083019260209291908290030181865afa158015610b74573d6000803e3d6000fd5b6001600160a01b031660009081526007602052604090205460ff1690565b33600090815260026020526040902054611c5090610708565b565b6004546001600160a01b03163314611c7c5760405162461bcd60e51b815260040161074390612363565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b611cc260405180606001604052806000815260200160008152602001600081525090565b6009611ccc610b01565b81548110611cdc57611cdc6123a8565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b611d3c60405180606001604052806000815260200160008152602001600081525090565b6009611d5d836001600160a01b031660009081526008602052604090205490565b81548110611d6d57611d6d6123a8565b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050919050565b6000611db782846123d4565b9392505050565b6000611db782846123eb565b6000611db7828461240a565b6000611db7828461242c565b3360009081526002602052604090205481811015611e615760405162461bcd60e51b815260206004820152603660248201527f426f617264726f6f6d3a207769746864726177207265717565737420677265616044820152751d195c881d1a185b881cdd185ad95908185b5bdd5b9d60521b6064820152608401610743565b600154611e6e9083611dab565b600155611e7b8183611dab565b336000818152600260205260408120929092559054611b98916001600160a01b0390911690845b6040516001600160a01b0383166024820152604481018290526110e090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611f9c565b6040516001600160a01b0380851660248301528316604482015260648101829052611f3d9085906323b872dd60e01b90608401611ece565b50505050565b600154611f509082611dd6565b60015533600090815260026020526040902054611f6d9082611dd6565b336000818152600260205260408120929092559054611f99916001600160a01b03909116903084611f05565b50565b6000611ff1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661206e9092919063ffffffff16565b8051909150156110e0578080602001905181019061200f9190612444565b6110e05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610743565b60606105cc848460008585600080866001600160a01b031685876040516120959190612492565b60006040518083038185875af1925050503d80600081146120d2576040519150601f19603f3d011682016040523d82523d6000602084013e6120d7565b606091505b50915091506120e8878383876120f3565b979650505050505050565b6060831561216257825160000361215b576001600160a01b0385163b61215b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610743565b50816105cc565b6105cc83838151156121775781518083602001fd5b8060405162461bcd60e51b815260040161074391906124ae565b6001600160a01b0381168114611f9957600080fd5b6000602082840312156121b857600080fd5b8135611db781612191565b6000602082840312156121d557600080fd5b5035919050565b600080604083850312156121ef57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561221657600080fd5b853561222181612191565b9450602086013561223181612191565b9350604086013561224181612191565b925060608601359150608086013561225881612191565b809150509295509295909350565b6000806040838503121561227957600080fd5b823561228481612191565b9150602083013561229481612191565b809150509250929050565b6000806000606084860312156122b457600080fd5b83356122bf81612191565b92506020840135915060408401356122d681612191565b809150509250925092565b6000602082840312156122f357600080fd5b5051919050565b60208082526026908201527f436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e652066756040820152653731ba34b7b760d11b606082015260800190565b602080825260099082015268189b1858dadb1a5cdd60ba1b604082015260600190565b60208082526025908201527f426f617264726f6f6d3a2063616c6c6572206973206e6f7420746865206f70656040820152643930ba37b960d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156123e6576123e66123be565b500390565b6000816000190483118215151615612405576124056123be565b500290565b60008261242757634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561243f5761243f6123be565b500190565b60006020828403121561245657600080fd5b81518015158114611db757600080fd5b60005b83811015612481578181015183820152602001612469565b83811115611f3d5750506000910152565b600082516124a4818460208701612466565b9190910192915050565b60208152600082518060208401526124cd816040850160208701612466565b601f01601f1916919091016040019291505056fea26469706673582212209c3f8abeb878c7f7eae12fafc8fc1f0908ee71fe498c6e898c6049d4440ee5ed64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2517 DUP1 PUSH2 0x2D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x231 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61D027B3 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xB3AB15FB GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xF46901ED EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xC58E3843 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xC5967C26 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xD256D48A EQ PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x714B4658 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x714B4658 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x97FFE1D7 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xA8D5FD65 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x6CEE85C2 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x530B97A4 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x530B97A4 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x53C03829 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x5DB76731 EQ PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x2FFAAA09 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x3F9E3F04 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x446A2EC8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x4B94F50E EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AE4B0C GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x8AE4B0C EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x1E85CD65 EQ PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x17E7E58 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x22BA18D EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x46335D0 EQ PUSH2 0x290 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xD SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x253 JUMP JUMPDEST PUSH2 0x249 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x253 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2A3 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x249 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH2 0x249 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x348 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x249 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x249 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x249 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x348 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x2266 JUMP JUMPDEST PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x229F JUMP JUMPDEST PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x119C JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST PUSH2 0x249 PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x348 PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x348 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x4C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x249 PUSH2 0x1BCF JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0x249 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x54E PUSH2 0x1C9E JUMP JUMPDEST PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x55F DUP5 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x5CC SWAP1 PUSH2 0x5C6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5C0 PUSH2 0x5A1 DUP8 DUP8 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1DBE JUMP JUMPDEST SWAP1 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x900CF0CF PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x900CF0CF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x66A SWAP2 PUSH2 0x1DD6 JUMP JUMPDEST GT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x900CF0CF PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x900CF0CF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x66A SWAP2 PUSH2 0x1DD6 JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x74C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE CALLER DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD GT PUSH2 0x821 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20546865206D656D62657220646F6573206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1E1A5CDD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST CALLER DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x870 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x87D PUSH2 0xB01 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH2 0x8BB CALLER PUSH2 0x1C19 JUMP JUMPDEST ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F74207769746864726177203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0xA SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x9BE SWAP2 PUSH2 0x1DD6 JUMP JUMPDEST GT ISZERO PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A207374696C6C20696E207769746864726177206C6F63 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6B757 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH2 0xA20 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0xA29 DUP3 PUSH2 0x1DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST DUP1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xA9E JUMPI POP PUSH1 0x38 DUP3 GT ISZERO JUMPDEST PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F77697468647261774C6F636B757045706F6368733A206F7574206F66207261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0xA SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB12 SWAP1 PUSH1 0x1 PUSH2 0x1DAB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 PUSH2 0x1C9E JUMP JUMPDEST PUSH1 0x40 ADD MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x25CA7A87 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x4B94F50E SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20616C726561647920696E697469616C697A65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP4 AND OR DUP2 SSTORE PUSH1 0x6 DUP1 SLOAD DUP8 DUP6 AND SWAP1 DUP5 AND OR DUP2 SSTORE PUSH1 0xC DUP7 SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD SWAP5 DUP7 AND SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE NUMBER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE DUP4 DUP6 ADD DUP7 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP8 MSTORE DUP5 MLOAD PUSH1 0x3 SWAP8 DUP9 MUL PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP4 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP2 ADD SSTORE PUSH1 0xA SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xB SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER SWAP1 DUP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP3 DUP4 MSTORE SWAP3 SWAP1 SWAP2 PUSH32 0x25FF68DD81B34665B5BA7E553EE5511BF6812E12ADB4A7E2C0D9E26B3099CE79 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH2 0xD79 DUP3 PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x61646472657373206E6F7420696E2074686520626C61636B6C69737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F74207769746864726177203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 ISZERO PUSH2 0xF4B JUMPI PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC4 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0xEFD SWAP2 AND DUP5 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x715576A45BD0EA6CA90A2F53C258FE52BDD30E6061046CE86CA3FA7E9F5A91BE DUP4 PUSH1 0x40 MLOAD PUSH2 0xF42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF58 SWAP1 DUP4 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE SLOAD PUSH2 0xF84 SWAP2 AND DUP5 DUP5 PUSH2 0x1EA2 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x345A298B5B7318863D2A616F67AE5329DEB5255F9F90B5EBC73EE5DDCD81B180 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x7A65726F PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x7368617265 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH2 0x10E0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x1EA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1112 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1859191C995CDCC8185B1C9958591E481859191959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6F7574206F662072616E6765 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1297 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1859191C995CDCC81B9BDD08195E1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x900CF0CF PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x900CF0CF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x137C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE CALLER DUP1 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F7420616C6C6F63617465203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143B PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST GT PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F7420616C6C6F63617465207768656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x746F74616C537570706C79206973203 PUSH1 0x84 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AB PUSH2 0x1C9E JUMP JUMPDEST PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x14DB PUSH2 0x14D4 PUSH2 0x14C2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5C0 DUP7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1DBE JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE NUMBER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP5 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x159C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP8 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0xAC24935FD910BC682B5CCB1A07B718CADF8CF2F6D1404C4F3DDC3662DAE40E29 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE CALLER DUP1 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE DUP1 ISZERO PUSH2 0x1718 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x16D6 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x16E3 PUSH2 0xB01 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH2 0x1721 CALLER PUSH2 0x1C19 JUMP JUMPDEST ISZERO PUSH2 0x173E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x178E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F74207374616B65203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0xC SLOAD ISZERO PUSH2 0x17E3 JUMPI PUSH1 0x0 PUSH2 0x17B3 PUSH2 0x2710 PUSH2 0x5C0 PUSH1 0xC SLOAD DUP7 PUSH2 0x1DBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17BF DUP4 DUP3 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SLOAD SWAP2 SWAP5 POP PUSH2 0x17E1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 CALLER SWAP2 AND DUP5 PUSH2 0x1F05 JUMP JUMPDEST POP JUMPDEST PUSH2 0x17EC DUP3 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x183F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0xA57 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER DUP1 ISZERO PUSH2 0x1989 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1947 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1954 PUSH2 0xB01 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH2 0x1992 CALLER PUSH2 0x1C19 JUMP JUMPDEST ISZERO PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2340 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3F SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0xB SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1A5E SWAP2 PUSH2 0x1DD6 JUMP JUMPDEST GT ISZERO PUSH2 0x1AB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A207374696C6C20696E20726577617264206C6F636B75 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2D SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0x1B66 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH2 0xA57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x62CB3E13 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xC5967C26 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1C50 SWAP1 PUSH2 0x708 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1CC2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1CCC PUSH2 0xB01 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1CDC JUMPI PUSH2 0x1CDC PUSH2 0x23A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1D5D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1D6D JUMPI PUSH2 0x1D6D PUSH2 0x23A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 DUP5 PUSH2 0x23D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 DUP5 PUSH2 0x23EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 DUP5 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 DUP5 PUSH2 0x242C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1E61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20776974686472617720726571756573742067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D195C881D1A185B881CDD185AD95908185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1E6E SWAP1 DUP4 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x1E7B DUP2 DUP4 PUSH2 0x1DAB JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x1B98 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x10E0 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1F3D SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1ECE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F50 SWAP1 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F6D SWAP1 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x1F99 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP5 PUSH2 0x1F05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x206E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x10E0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x200F SWAP2 SWAP1 PUSH2 0x2444 JUMP JUMPDEST PUSH2 0x10E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5CC DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2095 SWAP2 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20E8 DUP8 DUP4 DUP4 DUP8 PUSH2 0x20F3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2162 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x215B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x215B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST POP DUP2 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x5CC DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2177 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x24AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DB7 DUP2 PUSH2 0x2191 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2221 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2231 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2241 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x2258 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2284 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2294 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x22BF DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x22D6 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E747261637447756172643A206F6E6520626C6F636B2C206F6E65206675 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3731BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x189B1858DADB1A5CDD PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2063616C6C6572206973206E6F7420746865206F7065 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x3930BA37B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x23E6 JUMPI PUSH2 0x23E6 PUSH2 0x23BE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2405 JUMPI PUSH2 0x2405 PUSH2 0x23BE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2427 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x243F JUMPI PUSH2 0x243F PUSH2 0x23BE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2481 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2469 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F3D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x24A4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x24CD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 EXTCODEHASH DUP11 0xBE 0xB8 PUSH25 0xC7F7EAE12FAFC8FC1F0908EE71FE498C6E898C6049D4440EE5 0xED PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "633:9766:0:-:0;;;1197:31;;;-1:-1:-1;;;;1197:31:0;;;633:9766;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_2307": {
									"entryPoint": 8092,
									"id": 2307,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_1500": {
									"entryPoint": null,
									"id": 1500,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addAddressBlacklist_372": {
									"entryPoint": 4325,
									"id": 372,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_1794": {
									"entryPoint": 7638,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allocateSeigniorage_893": {
									"entryPoint": 4870,
									"id": 893,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_1087": {
									"entryPoint": null,
									"id": 1087,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blacklistFundWithdraw_990": {
									"entryPoint": 3398,
									"id": 990,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@blacklist_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@boardroomHistory_59": {
									"entryPoint": 7068,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@canClaimReward_501": {
									"entryPoint": 1492,
									"id": 501,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@canWithdraw_481": {
									"entryPoint": 1650,
									"id": 481,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkSameOriginReentranted_1952": {
									"entryPoint": null,
									"id": 1952,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@checkSameSenderReentranted_1966": {
									"entryPoint": null,
									"id": 1966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@claimReward_814": {
									"entryPoint": 6392,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_1839": {
									"entryPoint": 7626,
									"id": 1839,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_581": {
									"entryPoint": 1347,
									"id": 581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@epoch_511": {
									"entryPoint": 4796,
									"id": 511,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@exit_736": {
									"entryPoint": 7223,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeTo_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fee_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1325": {
									"entryPoint": null,
									"id": 1325,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1261": {
									"entryPoint": 8302,
									"id": 1261,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getLastSnapshotIndexOf_446": {
									"entryPoint": null,
									"id": 446,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLastSnapshotOf_461": {
									"entryPoint": 7448,
									"id": 461,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLatestSnapshot_433": {
									"entryPoint": 7326,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenPrice_531": {
									"entryPoint": 2858,
									"id": 531,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@governanceRecoverUnsupported_1046": {
									"entryPoint": 4055,
									"id": 1046,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@initialize_270": {
									"entryPoint": 2968,
									"id": 270,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@initialized_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAddressBlacklist_409": {
									"entryPoint": 7193,
									"id": 409,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_1189": {
									"entryPoint": null,
									"id": 1189,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@latestSnapshotIndex_421": {
									"entryPoint": 2817,
									"id": 421,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@members_55": {
									"entryPoint": null,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1824": {
									"entryPoint": 7614,
									"id": 1824,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nextEpochPoint_521": {
									"entryPoint": 7119,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@operator_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeAddressBlacklist_397": {
									"entryPoint": 4620,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardLockupEpochs_63": {
									"entryPoint": null,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerShare_541": {
									"entryPoint": 2839,
									"id": 541,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_2141": {
									"entryPoint": 7941,
									"id": 2141,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_2115": {
									"entryPoint": 7842,
									"id": 2115,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setFeeTo_346": {
									"entryPoint": 7250,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFee_334": {
									"entryPoint": 4508,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockUp_311": {
									"entryPoint": 2659,
									"id": 311,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setOperator_282": {
									"entryPoint": 6316,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@share_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1125": {
									"entryPoint": 8003,
									"id": 1125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_663": {
									"entryPoint": 5591,
									"id": 663,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1809": {
									"entryPoint": 7595,
									"id": 1809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_1075": {
									"entryPoint": null,
									"id": 1075,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@treasury_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1456": {
									"entryPoint": 8435,
									"id": 1456,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawLockupEpochs_61": {
									"entryPoint": null,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1170": {
									"entryPoint": 7650,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_725": {
									"entryPoint": 1800,
									"id": 725,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$2083t_contract$_IERC20_$2083t_contract$_ITreasury_$1618t_uint256t_address": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_contract$_IERC20_$2083t_uint256t_address": {
									"entryPoint": 8863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$2083__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITreasury_$1618__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2dbd8da2e347db2af1121670d00b751c9b434318480fe5bd806b0214e8af7480__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4934c70f1bf51b646cb3956d013ab2370a398e96f48ecb9a678f6b946d390d1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e424ad945b7dda92060782b6e1cfcfb7f80755c4a78721a549519ee83c1316a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_645c975c9766324d9f320cf38ddaa64d8379ac561310d48e32cac093164232e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_754d33edb65061d6597bb25880335e98840642c1b5fdcc396ef4dcfeadfc4541__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7eebd3ab7211eff05fddabca5b84eaa658cc7fb494729279632df7c3544ffe28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_82fe2394c65979e700253b917b585e2c156f99181a99ea593efdce474622f26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9809b15ceb77dc2632e61e2b4cab09eb411018b86c28ab4016ea119d2b609307__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aae0337b4611b89fcfb85e75a72a0e57c87560b2e5302344f0dd2f0c21965c43__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae60855e4e87ed1ffda84d3fe0c226ee07dbacf982ce825bf7a5b22ad061ca7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4cdc3d8a828364413eb5a76eb1fa4225d58cb47d3674544d05ebb54f20c5529__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbfaebaba866a120888a6744276afa2abdb96e2badf25b8c0411ea7366a527b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dee4276bb2eecf402cc50ff31bc9b887690399ff6e65cd553655d48a039a6efd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f83ca082be46052f95d9ac48c312ac41c56724041f1255c6b059cce7ccba571e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15438:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:9"
															},
															"nodeType": "YulIf",
															"src": "69:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:9",
														"type": ""
													}
												],
												"src": "14:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:9"
															},
															"nodeType": "YulIf",
															"src": "230:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:9",
														"type": ""
													}
												],
												"src": "150:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "525:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "536:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "513:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "555:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "566:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "472:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "483:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "494:4:9",
														"type": ""
													}
												],
												"src": "402:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "685:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "695:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "707:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "703:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "695:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "737:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "768:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "773:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "764:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "764:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "777:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "760:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "760:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "748:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "730:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "730:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "730:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "654:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "665:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "676:4:9",
														"type": ""
													}
												],
												"src": "584:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "887:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "897:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "920:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "897:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "939:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "964:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "957:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "957:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "950:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "950:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "932:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "856:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "867:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "878:4:9",
														"type": ""
													}
												],
												"src": "792:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1141:162:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1151:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1174:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1151:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1193:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1204:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1186:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1231:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1242:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1247:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1220:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1274:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1285:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1270:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1270:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1290:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1263:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1263:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1094:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1105:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1113:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1121:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1132:4:9",
														"type": ""
													}
												],
												"src": "984:319:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1378:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1424:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1433:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1426:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1426:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1426:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1399:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1408:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1420:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1391:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:32:9"
															},
															"nodeType": "YulIf",
															"src": "1388:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1449:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1472:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1459:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1344:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1355:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1367:6:9",
														"type": ""
													}
												],
												"src": "1308:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:161:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1626:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1635:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1638:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1628:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1628:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1628:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1601:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1597:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1597:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:32:9"
															},
															"nodeType": "YulIf",
															"src": "1590:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1651:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1674:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1651:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1693:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1731:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1703:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1538:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1549:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1561:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1569:6:9",
														"type": ""
													}
												],
												"src": "1493:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:602:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1979:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1988:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1991:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1981:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1981:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1974:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:33:9"
															},
															"nodeType": "YulIf",
															"src": "1942:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2004:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2017:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2008:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2049:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2049:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2089:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2099:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2089:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2113:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2145:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2156:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2141:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2128:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2117:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2194:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2169:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2169:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2211:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2221:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2237:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2269:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2280:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2265:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2265:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2252:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:32:9"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "2241:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "2318:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2293:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2293:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2293:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2335:17:9",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "2345:7:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2335:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2361:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2388:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2399:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2384:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2384:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2371:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2412:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2427:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:33:9"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "2416:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "2494:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2469:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2469:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2511:17:9",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "2521:7:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$2083t_contract$_IERC20_$2083t_contract$_ITreasury_$1618t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1866:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1877:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1889:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1897:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1905:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1913:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1921:6:9",
														"type": ""
													}
												],
												"src": "1746:788:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2626:301:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2672:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2674:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2674:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2674:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2647:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2643:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2643:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:32:9"
															},
															"nodeType": "YulIf",
															"src": "2636:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2697:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2723:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2701:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2767:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2742:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2742:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2782:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2792:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2782:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2806:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2838:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2849:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2834:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2834:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2821:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2810:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2887:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2862:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2862:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2862:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2904:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2914:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2904:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:9",
														"type": ""
													}
												],
												"src": "2539:388:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3051:352:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3097:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3106:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3109:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3099:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3099:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3099:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3072:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3081:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3068:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3068:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3093:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3064:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3064:32:9"
															},
															"nodeType": "YulIf",
															"src": "3061:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3122:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3148:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3135:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3126:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3192:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3167:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3167:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3207:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3217:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3231:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3258:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3269:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3254:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3254:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3241:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3241:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3282:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3325:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3310:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3310:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3297:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3286:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3363:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3338:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3338:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3390:7:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$2083t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3001:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3012:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3024:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3032:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3040:6:9",
														"type": ""
													}
												],
												"src": "2932:471:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3527:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3537:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3549:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3537:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3579:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3594:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3610:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3615:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3606:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3606:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3619:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3602:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3602:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3590:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITreasury_$1618__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3496:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3507:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3518:4:9",
														"type": ""
													}
												],
												"src": "3408:221:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3750:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3760:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3772:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3760:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3802:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3817:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3833:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3838:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3829:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3829:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3842:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3825:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3825:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3813:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3813:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3795:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3795:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$2083__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3719:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3730:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3741:4:9",
														"type": ""
													}
												],
												"src": "3634:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3938:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3984:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3993:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3996:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3986:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3986:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3986:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3959:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3968:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3980:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3951:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:32:9"
															},
															"nodeType": "YulIf",
															"src": "3948:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4009:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4025:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4019:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4009:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3904:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3915:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3927:6:9",
														"type": ""
													}
												],
												"src": "3857:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4220:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4237:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4230:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4271:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4282:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4287:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4310:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4321:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4306:18:9"
																	},
																	{
																		"hexValue": "436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e65206675",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4326:34:9",
																		"type": "",
																		"value": "ContractGuard: one block, one fu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4299:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4299:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:9"
																	},
																	{
																		"hexValue": "6e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4397:8:9",
																		"type": "",
																		"value": "nction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4370:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4415:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4427:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4438:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4423:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4423:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4415:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4197:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4211:4:9",
														"type": ""
													}
												],
												"src": "4046:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4627:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4644:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4655:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4637:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4637:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4678:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4689:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4674:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4674:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4694:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4667:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4717:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4728:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4713:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4713:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a20546865206d656d62657220646f6573206e6f742065",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4733:34:9",
																		"type": "",
																		"value": "Boardroom: The member does not e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4706:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4788:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4799:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4784:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4784:18:9"
																	},
																	{
																		"hexValue": "78697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4804:6:9",
																		"type": "",
																		"value": "xist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4832:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4843:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4828:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4828:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4820:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e424ad945b7dda92060782b6e1cfcfb7f80755c4a78721a549519ee83c1316a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4604:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4618:4:9",
														"type": ""
													}
												],
												"src": "4453:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5032:158:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5049:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5060:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5042:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5042:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5083:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5094:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5079:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5099:1:9",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5072:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5072:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5072:29:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5121:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5132:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5117:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5117:18:9"
																	},
																	{
																		"hexValue": "626c61636b6c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5137:11:9",
																		"type": "",
																		"value": "blacklist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5110:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5110:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5110:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5158:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5158:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5009:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5023:4:9",
														"type": ""
													}
												],
												"src": "4858:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5369:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5386:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5397:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5436:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5459:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5470:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5455:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a2043616e6e6f742077697468647261772030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5475:30:9",
																		"type": "",
																		"value": "Boardroom: Cannot withdraw 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5448:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5448:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5448:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5515:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5527:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5538:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5523:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5523:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5515:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2dbd8da2e347db2af1121670d00b751c9b434318480fe5bd806b0214e8af7480__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5346:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5360:4:9",
														"type": ""
													}
												],
												"src": "5195:352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5726:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5743:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5754:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5736:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5736:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5736:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5777:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5788:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5773:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5773:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5766:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5766:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5766:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5816:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5827:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5812:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5812:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a207374696c6c20696e207769746864726177206c6f63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5832:34:9",
																		"type": "",
																		"value": "Boardroom: still in withdraw loc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5805:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5887:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5898:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5883:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5883:18:9"
																	},
																	{
																		"hexValue": "6b7570",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5903:5:9",
																		"type": "",
																		"value": "kup"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5876:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5876:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5918:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5930:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5941:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5918:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dee4276bb2eecf402cc50ff31bc9b887690399ff6e65cd553655d48a039a6efd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5703:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5717:4:9",
														"type": ""
													}
												],
												"src": "5552:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6130:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6140:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6140:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6181:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6192:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6177:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6177:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6197:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6170:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6220:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6231:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6216:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a2063616c6c6572206973206e6f7420746865206f7065",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6236:34:9",
																		"type": "",
																		"value": "Boardroom: caller is not the ope"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6209:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6209:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6291:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6302:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6287:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6287:18:9"
																	},
																	{
																		"hexValue": "7261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6307:7:9",
																		"type": "",
																		"value": "rator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6280:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6280:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6280:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6324:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6336:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6347:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6332:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6332:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6324:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae60855e4e87ed1ffda84d3fe0c226ee07dbacf982ce825bf7a5b22ad061ca7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6107:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6121:4:9",
														"type": ""
													}
												],
												"src": "5956:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6536:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6553:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6546:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6546:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6546:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6587:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6598:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6583:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6583:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6603:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6576:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6626:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6637:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6622:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6622:18:9"
																	},
																	{
																		"hexValue": "5f77697468647261774c6f636b757045706f6368733a206f7574206f66207261",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6642:34:9",
																		"type": "",
																		"value": "_withdrawLockupEpochs: out of ra"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6615:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6615:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6697:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6708:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6693:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6693:18:9"
																	},
																	{
																		"hexValue": "6e6765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6713:5:9",
																		"type": "",
																		"value": "nge"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6686:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6686:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6686:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6728:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6740:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6751:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6736:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6736:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6728:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aae0337b4611b89fcfb85e75a72a0e57c87560b2e5302344f0dd2f0c21965c43__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6513:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6527:4:9",
														"type": ""
													}
												],
												"src": "6362:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6940:180:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6957:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6968:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6950:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6950:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6991:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7002:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6987:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6987:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7007:2:9",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6980:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6980:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7030:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7041:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7026:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7026:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a20616c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7046:32:9",
																		"type": "",
																		"value": "Boardroom: already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7019:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7019:60:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7019:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7088:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7100:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7111:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7096:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7088:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_645c975c9766324d9f320cf38ddaa64d8379ac561310d48e32cac093164232e3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6917:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6931:4:9",
														"type": ""
													}
												],
												"src": "6766:354:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7299:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7316:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7327:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7309:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7309:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7350:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7361:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7346:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7346:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7366:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7339:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7339:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7339:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7389:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7400:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:18:9"
																	},
																	{
																		"hexValue": "61646472657373206e6f7420696e2074686520626c61636b6c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7405:30:9",
																		"type": "",
																		"value": "address not in the blacklist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7378:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7378:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7378:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7445:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7457:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7468:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7453:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7453:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7445:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f83ca082be46052f95d9ac48c312ac41c56724041f1255c6b059cce7ccba571e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7276:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7290:4:9",
														"type": ""
													}
												],
												"src": "7125:352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7656:153:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7673:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7666:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7666:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7707:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7718:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7703:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7723:1:9",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7696:29:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:9"
																	},
																	{
																		"hexValue": "7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7761:6:9",
																		"type": "",
																		"value": "zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7734:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7734:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7734:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7777:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7789:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7800:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7785:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7785:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7777:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7633:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7647:4:9",
														"type": ""
													}
												],
												"src": "7482:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7988:154:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8005:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8016:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7998:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7998:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8039:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8050:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8035:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8035:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8055:1:9",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8028:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8028:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8028:29:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8077:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8088:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8073:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8073:18:9"
																	},
																	{
																		"hexValue": "746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8093:7:9",
																		"type": "",
																		"value": "token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8066:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8066:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8066:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8110:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8122:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8133:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8118:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8118:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8110:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7965:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7979:4:9",
														"type": ""
													}
												],
												"src": "7814:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8321:154:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8338:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8349:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8331:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8331:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8372:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8383:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8368:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8368:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8388:1:9",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:29:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8410:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8421:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8406:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8406:18:9"
																	},
																	{
																		"hexValue": "7368617265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8426:7:9",
																		"type": "",
																		"value": "share"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8399:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8399:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8443:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8455:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8466:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8451:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8451:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8443:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4cdc3d8a828364413eb5a76eb1fa4225d58cb47d3674544d05ebb54f20c5529__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8298:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8312:4:9",
														"type": ""
													}
												],
												"src": "8147:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8654:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8671:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8682:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8664:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8664:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8664:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8705:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8716:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8701:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8701:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8721:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8694:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8694:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8694:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8744:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8755:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8740:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8740:18:9"
																	},
																	{
																		"hexValue": "6164647265737320616c7265616479206164646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8760:23:9",
																		"type": "",
																		"value": "address already added"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8733:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8733:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8793:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8805:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8816:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8801:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8793:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8631:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8645:4:9",
														"type": ""
													}
												],
												"src": "8480:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9004:162:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9021:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9032:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9014:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9014:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9055:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9066:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9051:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9051:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9071:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9044:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9044:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9044:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9094:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9105:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9090:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9090:18:9"
																	},
																	{
																		"hexValue": "6f7574206f662072616e6765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9110:14:9",
																		"type": "",
																		"value": "out of range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9083:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9083:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9083:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9134:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9146:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9157:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9142:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9142:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9134:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4934c70f1bf51b646cb3956d013ab2370a398e96f48ecb9a678f6b946d390d1f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8981:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8995:4:9",
														"type": ""
													}
												],
												"src": "8830:336:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9345:169:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9362:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9373:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9355:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9355:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9355:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9396:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9407:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9392:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9392:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9412:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9385:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9385:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9385:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9435:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9446:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9431:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9431:18:9"
																	},
																	{
																		"hexValue": "61646472657373206e6f742065786973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9451:21:9",
																		"type": "",
																		"value": "address not existed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9424:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9424:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9424:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9482:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9494:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9505:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9490:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9490:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9482:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbfaebaba866a120888a6744276afa2abdb96e2badf25b8c0411ea7366a527b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9322:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9336:4:9",
														"type": ""
													}
												],
												"src": "9171:343:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9693:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9710:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9721:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9703:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9703:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9703:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9744:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9755:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9740:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9760:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9733:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9783:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9794:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9779:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9779:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a2043616e6e6f7420616c6c6f636174652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9799:30:9",
																		"type": "",
																		"value": "Boardroom: Cannot allocate 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9772:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9772:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9772:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9839:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9851:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9862:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9847:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9847:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9839:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_82fe2394c65979e700253b917b585e2c156f99181a99ea593efdce474622f26c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9670:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9684:4:9",
														"type": ""
													}
												],
												"src": "9519:352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10050:238:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10067:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10078:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10060:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10060:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10060:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10101:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10112:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10097:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10097:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10117:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10090:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10090:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10140:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10151:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10136:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10136:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a2043616e6e6f7420616c6c6f63617465207768656e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10156:34:9",
																		"type": "",
																		"value": "Boardroom: Cannot allocate when "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10129:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10129:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10129:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10211:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10222:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10207:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10207:18:9"
																	},
																	{
																		"hexValue": "746f74616c537570706c792069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10227:18:9",
																		"type": "",
																		"value": "totalSupply is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10200:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10200:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10200:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10255:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10267:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10278:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10263:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10263:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10255:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7eebd3ab7211eff05fddabca5b84eaa658cc7fb494729279632df7c3544ffe28__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10027:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10041:4:9",
														"type": ""
													}
												],
												"src": "9876:412:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10467:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10484:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10477:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10477:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10477:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10518:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10529:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10514:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10514:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10534:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10507:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10507:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10507:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10557:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10568:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10553:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10553:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a2043616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10573:27:9",
																		"type": "",
																		"value": "Boardroom: Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10546:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10546:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10546:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10610:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10622:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10633:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10618:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10618:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10610:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_754d33edb65061d6597bb25880335e98840642c1b5fdcc396ef4dcfeadfc4541__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10444:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10458:4:9",
														"type": ""
													}
												],
												"src": "10293:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10821:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10838:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10849:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10831:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10872:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10883:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10868:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10868:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10888:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10861:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10861:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10861:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10922:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10907:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a207374696c6c20696e20726577617264206c6f636b75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10927:34:9",
																		"type": "",
																		"value": "Boardroom: still in reward locku"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10900:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10900:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10982:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10993:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10978:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10978:18:9"
																	},
																	{
																		"hexValue": "70",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10998:3:9",
																		"type": "",
																		"value": "p"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10971:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10971:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10971:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11011:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11023:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11034:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11019:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11019:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11011:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9809b15ceb77dc2632e61e2b4cab09eb411018b86c28ab4016ea119d2b609307__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10798:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10812:4:9",
														"type": ""
													}
												],
												"src": "10647:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11081:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11098:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11105:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11110:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11101:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11091:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11091:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11091:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11138:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11141:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11131:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11131:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11131:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11162:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11165:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11155:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11155:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11049:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11213:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11230:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11237:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11242:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11233:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11223:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11223:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11223:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11270:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11273:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11263:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11263:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11263:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11294:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11297:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11287:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11287:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11287:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11181:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11362:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11384:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11386:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11386:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11386:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11378:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11381:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11375:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11375:8:9"
															},
															"nodeType": "YulIf",
															"src": "11372:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11415:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11427:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11430:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11423:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11423:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11415:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11344:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11347:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11353:4:9",
														"type": ""
													}
												],
												"src": "11313:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11495:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11554:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11556:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11556:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11556:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11526:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11519:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11519:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11512:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11512:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11534:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11545:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11541:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11541:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11549:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11537:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11537:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11531:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11531:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:45:9"
															},
															"nodeType": "YulIf",
															"src": "11505:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11585:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11600:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11603:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11596:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11596:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11585:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11474:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11477:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11483:7:9",
														"type": ""
													}
												],
												"src": "11443:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11662:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11693:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11714:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11721:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11726:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11717:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11717:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11707:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11707:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11707:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11758:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11761:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11751:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11751:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11751:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11786:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11789:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11779:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11779:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11779:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11682:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11675:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11675:9:9"
															},
															"nodeType": "YulIf",
															"src": "11672:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11813:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11822:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11825:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11818:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11818:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11813:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11647:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11650:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11656:1:9",
														"type": ""
													}
												],
												"src": "11616:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11886:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11913:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11915:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11915:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11915:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11902:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11909:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11905:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11905:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11899:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11899:13:9"
															},
															"nodeType": "YulIf",
															"src": "11896:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11944:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11955:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11958:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11951:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11951:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11944:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11869:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11872:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11878:3:9",
														"type": ""
													}
												],
												"src": "11838:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12145:244:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12162:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12173:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12155:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12155:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12196:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12207:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12192:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12192:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12212:2:9",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12185:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12185:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12185:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12235:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12246:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12231:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12231:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a20776974686472617720726571756573742067726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12251:34:9",
																		"type": "",
																		"value": "Boardroom: withdraw request grea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12224:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12224:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12224:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12306:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12317:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12302:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12302:18:9"
																	},
																	{
																		"hexValue": "746572207468616e207374616b656420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12322:24:9",
																		"type": "",
																		"value": "ter than staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12295:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12295:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12295:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12356:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12368:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12379:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12364:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12364:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12356:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12122:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12136:4:9",
														"type": ""
													}
												],
												"src": "11971:418:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12523:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12533:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12545:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12556:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12541:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12541:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12533:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12575:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12590:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12606:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12611:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12602:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12602:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12615:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12598:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12598:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12586:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12586:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12568:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12568:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12568:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12639:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12650:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12635:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12635:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12655:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12628:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12628:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12628:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12484:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12495:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12503:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12514:4:9",
														"type": ""
													}
												],
												"src": "12394:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12830:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12840:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12852:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12863:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12848:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12848:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12840:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12875:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12893:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12898:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12889:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12889:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12902:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12885:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12885:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12879:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12920:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12935:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12943:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12931:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12931:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12913:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12967:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12978:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12963:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12963:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12987:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12995:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12983:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12983:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12956:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12956:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12956:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13019:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13030:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13015:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13015:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13035:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13008:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13008:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13008:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12783:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12794:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12802:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12810:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12821:4:9",
														"type": ""
													}
												],
												"src": "12673:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13131:199:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13177:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13186:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13189:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13179:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13179:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13179:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13152:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13161:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13148:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13148:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13173:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13144:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13144:32:9"
															},
															"nodeType": "YulIf",
															"src": "13141:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13202:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13221:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13215:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13215:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13206:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13284:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13293:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13296:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13286:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13286:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13286:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13253:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "13274:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "13267:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13267:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13260:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13260:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13250:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13250:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13243:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13243:40:9"
															},
															"nodeType": "YulIf",
															"src": "13240:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13309:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13319:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13309:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13097:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13108:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13120:6:9",
														"type": ""
													}
												],
												"src": "13053:277:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13509:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13526:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13537:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13519:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13519:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13519:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13560:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13571:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13556:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13556:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13576:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13549:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13549:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13549:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13599:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13610:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13595:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13595:18:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13615:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13588:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13588:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13588:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13670:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13681:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13666:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13666:18:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13686:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13659:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13659:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13659:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13708:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13720:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13731:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13716:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13716:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13708:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13486:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13500:4:9",
														"type": ""
													}
												],
												"src": "13335:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13920:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13937:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13948:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13930:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13930:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13971:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13982:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13967:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13967:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13987:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13960:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13960:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13960:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14010:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14021:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14006:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14006:18:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14026:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13999:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13999:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13999:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14081:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14092:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14077:18:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14097:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14070:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14070:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14070:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14115:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14127:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14138:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14123:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14123:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14115:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13897:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13911:4:9",
														"type": ""
													}
												],
												"src": "13746:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14206:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14216:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14225:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14220:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14285:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14310:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14315:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14306:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14306:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14329:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14334:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14325:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14325:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14319:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14319:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14299:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14299:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14299:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14246:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14249:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14243:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14243:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14257:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14259:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14268:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14271:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14264:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14264:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14259:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14239:3:9",
																"statements": []
															},
															"src": "14235:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14374:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14387:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14392:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14383:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14383:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14401:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14376:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14376:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14376:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14363:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14366:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14360:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14360:13:9"
															},
															"nodeType": "YulIf",
															"src": "14357:48:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14184:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14189:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14194:6:9",
														"type": ""
													}
												],
												"src": "14153:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14553:137:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14563:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14583:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14577:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14577:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14567:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14625:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14633:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14621:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14621:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14640:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14645:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14599:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14599:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14599:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14661:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14672:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14677:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14668:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14668:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14661:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14529:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14534:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14545:3:9",
														"type": ""
													}
												],
												"src": "14416:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14869:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14886:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14897:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14879:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14879:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14879:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14920:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14931:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14916:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14916:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14936:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14909:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14909:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14909:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14959:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14970:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14955:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14955:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14975:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14948:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14948:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14948:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15016:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15028:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15039:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15024:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15024:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15016:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14846:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14860:4:9",
														"type": ""
													}
												],
												"src": "14695:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15174:262:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15191:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15202:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15184:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15184:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15184:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15214:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15234:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15228:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15228:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15218:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15261:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15272:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15257:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15257:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15277:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15250:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15250:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15250:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15319:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15327:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15315:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15315:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15336:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15347:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15332:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15332:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15352:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "15293:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15293:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15293:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15368:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15384:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "15403:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15411:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15399:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15399:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15420:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15416:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15416:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "15395:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15395:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15380:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15380:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15427:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15376:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15376:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15368:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15143:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15154:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15165:4:9",
														"type": ""
													}
												],
												"src": "15053:383:9"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$2083t_contract$_IERC20_$2083t_contract$_ITreasury_$1618t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        let value_3 := calldataload(add(headStart, 128))\n        validator_revert_address(value_3)\n        value4 := value_3\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$2083t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_contract$_ITreasury_$1618__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2083__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ContractGuard: one block, one fu\")\n        mstore(add(headStart, 96), \"nction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5e424ad945b7dda92060782b6e1cfcfb7f80755c4a78721a549519ee83c1316a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Boardroom: The member does not e\")\n        mstore(add(headStart, 96), \"xist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"blacklist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2dbd8da2e347db2af1121670d00b751c9b434318480fe5bd806b0214e8af7480__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Boardroom: Cannot withdraw 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dee4276bb2eecf402cc50ff31bc9b887690399ff6e65cd553655d48a039a6efd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Boardroom: still in withdraw loc\")\n        mstore(add(headStart, 96), \"kup\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ae60855e4e87ed1ffda84d3fe0c226ee07dbacf982ce825bf7a5b22ad061ca7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Boardroom: caller is not the ope\")\n        mstore(add(headStart, 96), \"rator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aae0337b4611b89fcfb85e75a72a0e57c87560b2e5302344f0dd2f0c21965c43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"_withdrawLockupEpochs: out of ra\")\n        mstore(add(headStart, 96), \"nge\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_645c975c9766324d9f320cf38ddaa64d8379ac561310d48e32cac093164232e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Boardroom: already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f83ca082be46052f95d9ac48c312ac41c56724041f1255c6b059cce7ccba571e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"address not in the blacklist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c4cdc3d8a828364413eb5a76eb1fa4225d58cb47d3674544d05ebb54f20c5529__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"share\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"address already added\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4934c70f1bf51b646cb3956d013ab2370a398e96f48ecb9a678f6b946d390d1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"out of range\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cbfaebaba866a120888a6744276afa2abdb96e2badf25b8c0411ea7366a527b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"address not existed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_82fe2394c65979e700253b917b585e2c156f99181a99ea593efdce474622f26c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Boardroom: Cannot allocate 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7eebd3ab7211eff05fddabca5b84eaa658cc7fb494729279632df7c3544ffe28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Boardroom: Cannot allocate when \")\n        mstore(add(headStart, 96), \"totalSupply is 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_754d33edb65061d6597bb25880335e98840642c1b5fdcc396ef4dcfeadfc4541__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Boardroom: Cannot stake 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9809b15ceb77dc2632e61e2b4cab09eb411018b86c28ab4016ea119d2b609307__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Boardroom: still in reward locku\")\n        mstore(add(headStart, 96), \"p\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Boardroom: withdraw request grea\")\n        mstore(add(headStart, 96), \"ter than staked amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102315760003560e01c806361d027b311610130578063b3ab15fb116100b8578063ddca3f431161007c578063ddca3f43146104e9578063e9fad8ee146104f2578063f46901ed146104fa578063f9f92be41461050d578063fc0c546a1461053057600080fd5b8063b3ab15fb146104a0578063b88a802f146104b3578063c58e3843146104bb578063c5967c26146104ce578063d256d48a146104d657600080fd5b8063714b4658116100ff578063714b465814610436578063900cf0cf1461045f57806397ffe1d714610467578063a694fc3a1461047a578063a8d5fd651461048d57600080fd5b806361d027b3146103d457806369fe0e2d146103e75780636cee85c2146103fa57806370a082311461040d57600080fd5b80632e1a7d4d116101be578063530b97a411610182578063530b97a41461037557806353c038291461038857806354575af41461039b578063570ca735146103ae5780635db76731146103c157600080fd5b80632e1a7d4d146103355780632ffaaa091461034a5780633f9e3f041461035d578063446a2ec8146103655780634b94f50e1461036d57600080fd5b806308ae4b0c1161020557806308ae4b0c146102b3578063158ef93e146102fd57806318160ddd1461031157806319262d30146103195780631e85cd651461032c57600080fd5b80628cc26214610236578063017e7e581461025c578063022ba18d14610287578063046335d014610290575b600080fd5b6102496102443660046121a6565b610543565b6040519081526020015b60405180910390f35b600d5461026f906001600160a01b031681565b6040516001600160a01b039091168152602001610253565b610249600b5481565b6102a361029e3660046121a6565b6105d4565b6040519015158152602001610253565b6102e26102c13660046121a6565b60086020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610253565b6004546102a390600160a01b900460ff1681565b600154610249565b6102a36103273660046121a6565b610672565b610249600a5481565b6103486103433660046121c3565b610708565b005b6103486103583660046121dc565b610a63565b610249610b01565b610249610b17565b610249610b2a565b6103486103833660046121fe565b610b98565b610348610396366004612266565b610d46565b6103486103a936600461229f565b610fd7565b60045461026f906001600160a01b031681565b6102a36103cf3660046121a6565b6110e5565b60065461026f906001600160a01b031681565b6103486103f53660046121c3565b61119c565b6102a36104083660046121a6565b61120c565b61024961041b3660046121a6565b6001600160a01b031660009081526002602052604090205490565b6102496104443660046121a6565b6001600160a01b031660009081526008602052604090205490565b6102496112bc565b6103486104753660046121c3565b611306565b6103486104883660046121c3565b6115d7565b60005461026f906001600160a01b031681565b6103486104ae3660046121a6565b6118ac565b6103486118f8565b6102e26104c93660046121c3565b611b9c565b610249611bcf565b6102a36104e43660046121a6565b611c19565b610249600c5481565b610348611c37565b6103486105083660046121a6565b611c52565b6102a361051b3660046121a6565b60076020526000908152604090205460ff1681565b60055461026f906001600160a01b031681565b60008061054e611c9e565b604001519050600061055f84611d18565b6040908101516001600160a01b0386166000908152600860205291909120600101549091506105cc906105c6670de0b6b3a76400006105c06105a18787611dab565b6001600160a01b038a1660009081526002602052604090205490611dbe565b90611dca565b90611dd6565b949350505050565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064291906122e1565b600b546001600160a01b03841660009081526008602052604090206002015461066a91611dd6565b111592915050565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa1580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e091906122e1565b600a546001600160a01b03841660009081526008602052604090206002015461066a91611dd6565b43600090815260036020908152604080832032845290915290205460ff161561074c5760405162461bcd60e51b8152600401610743906122fa565b60405180910390fd5b43600090815260036020908152604080832033845290915290205460ff16156107875760405162461bcd60e51b8152600401610743906122fa565b43600090815260036020908152604080832032845282528083208054600160ff199182168117909255338552828520805490911690911790556002909152812054116108215760405162461bcd60e51b8152602060048201526024808201527f426f617264726f6f6d3a20546865206d656d62657220646f6573206e6f7420656044820152631e1a5cdd60e21b6064820152608401610743565b3380156108b2576001600160a01b038116600090815260086020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915261087082610543565b602082015261087d610b01565b81526001600160a01b038216600090815260086020908152604091829020835181559083015160018201559101516002909101555b6108bb33611c19565b156108d85760405162461bcd60e51b815260040161074390612340565b600082116109285760405162461bcd60e51b815260206004820152601c60248201527f426f617264726f6f6d3a2043616e6e6f742077697468647261772030000000006044820152606401610743565b600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f91906122e1565b600a54336000908152600860205260409020600201546109be91611dd6565b1115610a185760405162461bcd60e51b815260206004820152602360248201527f426f617264726f6f6d3a207374696c6c20696e207769746864726177206c6f6360448201526206b75760ec1b6064820152608401610743565b610a206118f8565b610a2982611de2565b60405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b6004546001600160a01b03163314610a8d5760405162461bcd60e51b815260040161074390612363565b808210158015610a9e575060388211155b610af65760405162461bcd60e51b815260206004820152602360248201527f5f77697468647261774c6f636b757045706f6368733a206f7574206f662072616044820152626e676560e81b6064820152608401610743565b600a91909155600b55565b600954600090610b12906001611dab565b905090565b6000610b21611c9e565b60400151905090565b600654604080516325ca7a8760e11b815290516000926001600160a01b031691634b94f50e9160048083019260209291908290030181865afa158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1291906122e1565b600454600160a01b900460ff1615610bf25760405162461bcd60e51b815260206004820152601e60248201527f426f617264726f6f6d3a20616c726561647920696e697469616c697a656400006044820152606401610743565b600580546001600160a01b038781166001600160a01b0319928316179092556000805487841690831617815560068054878516908416178155600c869055600d8054948616949093169390931790915560408051606081018252438082526020808301858152838501868152600980546001810182559752845160039788027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af81019190915591517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0830155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b190910155600a95909555600b93909355600480546001600160a81b03191633908117600160a01b1790915591519283529290917f25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79910160405180910390a2505050505050565b6004546001600160a01b03163314610d705760405162461bcd60e51b815260040161074390612363565b610d7982611c19565b610dc55760405162461bcd60e51b815260206004820152601c60248201527f61646472657373206e6f7420696e2074686520626c61636b6c697374000000006044820152606401610743565b6001600160a01b03821660009081526002602052604090205480610e2b5760405162461bcd60e51b815260206004820152601c60248201527f426f617264726f6f6d3a2043616e6e6f742077697468647261772030000000006044820152606401610743565b6001600160a01b0383166000908152600860205260409020600101548015610f4b57600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec491906122e1565b6001600160a01b0380861660009081526008602052604081206002810193909355600190920191909155600554610efd91168483611ea2565b826001600160a01b0316846001600160a01b03167f715576a45bd0ea6ca90a2f53c258fe52bdd30e6061046ce86ca3fa7e9f5a91be83604051610f4291815260200190565b60405180910390a35b600154610f589083611dab565b6001556001600160a01b03808516600090815260026020526040812081905554610f8491168484611ea2565b826001600160a01b0316846001600160a01b03167f345a298b5b7318863d2a616f67ae5329deb5255f9f90b5ebc73ee5ddcd81b18084604051610fc991815260200190565b60405180910390a350505050565b6004546001600160a01b031633146110015760405162461bcd60e51b815260040161074390612363565b6001600160a01b0381166110405760405162461bcd60e51b8152600401610743906020808252600490820152637a65726f60e01b604082015260600190565b6005546001600160a01b03908116908416036110865760405162461bcd60e51b81526020600482015260056024820152643a37b5b2b760d91b6044820152606401610743565b6000546001600160a01b03908116908416036110cc5760405162461bcd60e51b8152602060048201526005602482015264736861726560d81b6044820152606401610743565b6110e06001600160a01b0384168284611ea2565b505050565b6004546000906001600160a01b031633146111125760405162461bcd60e51b815260040161074390612363565b6001600160a01b03821660009081526007602052604090205460ff16156111735760405162461bcd60e51b81526020600482015260156024820152741859191c995cdcc8185b1c9958591e481859191959605a1b6044820152606401610743565b506001600160a01b03166000908152600760205260409020805460ff1916600190811790915590565b6004546001600160a01b031633146111c65760405162461bcd60e51b815260040161074390612363565b6127108111156112075760405162461bcd60e51b815260206004820152600c60248201526b6f7574206f662072616e676560a01b6044820152606401610743565b600c55565b6004546000906001600160a01b031633146112395760405162461bcd60e51b815260040161074390612363565b6001600160a01b03821660009081526007602052604090205460ff166112975760405162461bcd60e51b81526020600482015260136024820152721859191c995cdcc81b9bdd08195e1a5cdd1959606a1b6044820152606401610743565b506001600160a01b03166000908152600760205260409020805460ff19169055600190565b6006546040805163900cf0cf60e01b815290516000926001600160a01b03169163900cf0cf9160048083019260209291908290030181865afa158015610b74573d6000803e3d6000fd5b43600090815260036020908152604080832032845290915290205460ff16156113415760405162461bcd60e51b8152600401610743906122fa565b43600090815260036020908152604080832033845290915290205460ff161561137c5760405162461bcd60e51b8152600401610743906122fa565b4360009081526003602090815260408083203284529091528082208054600160ff19918216811790925533808552929093208054909316179091556004546001600160a01b0316146113e05760405162461bcd60e51b815260040161074390612363565b600081116114305760405162461bcd60e51b815260206004820152601c60248201527f426f617264726f6f6d3a2043616e6e6f7420616c6c6f636174652030000000006044820152606401610743565b600061143b60015490565b116114a15760405162461bcd60e51b815260206004820152603060248201527f426f617264726f6f6d3a2043616e6e6f7420616c6c6f63617465207768656e2060448201526f0746f74616c537570706c7920697320360841b6064820152608401610743565b60006114ab611c9e565b60400151905060006114db6114d46114c260015490565b6105c086670de0b6b3a7640000611dbe565b8390611dd6565b60408051606081018252438152602081018681529181018381526009805460018101825560009190915282517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af60039092029182015592517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b0840155517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b1909201919091556005549192509061159c906001600160a01b0316333087611f05565b60405184815233907fac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e299060200160405180910390a250505050565b43600090815260036020908152604080832032845290915290205460ff16156116125760405162461bcd60e51b8152600401610743906122fa565b43600090815260036020908152604080832033845290915290205460ff161561164d5760405162461bcd60e51b8152600401610743906122fa565b4360009081526003602090815260408083203284529091528082208054600160ff19918216811790925533808552929093208054909316179091558015611718576001600160a01b03811660009081526008602090815260409182902082516060810184528154815260018201549281019290925260020154918101919091526116d682610543565b60208201526116e3610b01565b81526001600160a01b038216600090815260086020908152604091829020835181559083015160018201559101516002909101555b61172133611c19565b1561173e5760405162461bcd60e51b815260040161074390612340565b6000821161178e5760405162461bcd60e51b815260206004820152601960248201527f426f617264726f6f6d3a2043616e6e6f74207374616b652030000000000000006044820152606401610743565b600c54156117e35760006117b36127106105c0600c5486611dbe90919063ffffffff16565b90506117bf8382611dab565b600d546000549194506117e1916001600160a01b039081169133911684611f05565b505b6117ec82611f43565b600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561183f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186391906122e1565b33600081815260086020526040908190206002019290925590517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90610a579085815260200190565b6004546001600160a01b031633146118d65760405162461bcd60e51b815260040161074390612363565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b338015611989576001600160a01b038116600090815260086020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915261194782610543565b6020820152611954610b01565b81526001600160a01b038216600090815260086020908152604091829020835181559083015160018201559101516002909101555b61199233611c19565b156119af5760405162461bcd60e51b815260040161074390612340565b336000908152600860205260409020600101548015611b9857600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3f91906122e1565b600b5433600090815260086020526040902060020154611a5e91611dd6565b1115611ab65760405162461bcd60e51b815260206004820152602160248201527f426f617264726f6f6d3a207374696c6c20696e20726577617264206c6f636b756044820152600760fc1b6064820152608401610743565b600660009054906101000a90046001600160a01b03166001600160a01b031663900cf0cf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2d91906122e1565b3360008181526008602052604081206002810193909355600190920191909155600554611b66916001600160a01b039091169083611ea2565b60405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048690602001610a57565b5050565b60098181548110611bac57600080fd5b600091825260209091206003909102018054600182015460029092015490925083565b600654604080516362cb3e1360e11b815290516000926001600160a01b03169163c5967c269160048083019260209291908290030181865afa158015610b74573d6000803e3d6000fd5b6001600160a01b031660009081526007602052604090205460ff1690565b33600090815260026020526040902054611c5090610708565b565b6004546001600160a01b03163314611c7c5760405162461bcd60e51b815260040161074390612363565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b611cc260405180606001604052806000815260200160008152602001600081525090565b6009611ccc610b01565b81548110611cdc57611cdc6123a8565b90600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b611d3c60405180606001604052806000815260200160008152602001600081525090565b6009611d5d836001600160a01b031660009081526008602052604090205490565b81548110611d6d57611d6d6123a8565b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050919050565b6000611db782846123d4565b9392505050565b6000611db782846123eb565b6000611db7828461240a565b6000611db7828461242c565b3360009081526002602052604090205481811015611e615760405162461bcd60e51b815260206004820152603660248201527f426f617264726f6f6d3a207769746864726177207265717565737420677265616044820152751d195c881d1a185b881cdd185ad95908185b5bdd5b9d60521b6064820152608401610743565b600154611e6e9083611dab565b600155611e7b8183611dab565b336000818152600260205260408120929092559054611b98916001600160a01b0390911690845b6040516001600160a01b0383166024820152604481018290526110e090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611f9c565b6040516001600160a01b0380851660248301528316604482015260648101829052611f3d9085906323b872dd60e01b90608401611ece565b50505050565b600154611f509082611dd6565b60015533600090815260026020526040902054611f6d9082611dd6565b336000818152600260205260408120929092559054611f99916001600160a01b03909116903084611f05565b50565b6000611ff1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661206e9092919063ffffffff16565b8051909150156110e0578080602001905181019061200f9190612444565b6110e05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610743565b60606105cc848460008585600080866001600160a01b031685876040516120959190612492565b60006040518083038185875af1925050503d80600081146120d2576040519150601f19603f3d011682016040523d82523d6000602084013e6120d7565b606091505b50915091506120e8878383876120f3565b979650505050505050565b6060831561216257825160000361215b576001600160a01b0385163b61215b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610743565b50816105cc565b6105cc83838151156121775781518083602001fd5b8060405162461bcd60e51b815260040161074391906124ae565b6001600160a01b0381168114611f9957600080fd5b6000602082840312156121b857600080fd5b8135611db781612191565b6000602082840312156121d557600080fd5b5035919050565b600080604083850312156121ef57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561221657600080fd5b853561222181612191565b9450602086013561223181612191565b9350604086013561224181612191565b925060608601359150608086013561225881612191565b809150509295509295909350565b6000806040838503121561227957600080fd5b823561228481612191565b9150602083013561229481612191565b809150509250929050565b6000806000606084860312156122b457600080fd5b83356122bf81612191565b92506020840135915060408401356122d681612191565b809150509250925092565b6000602082840312156122f357600080fd5b5051919050565b60208082526026908201527f436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e652066756040820152653731ba34b7b760d11b606082015260800190565b602080825260099082015268189b1858dadb1a5cdd60ba1b604082015260600190565b60208082526025908201527f426f617264726f6f6d3a2063616c6c6572206973206e6f7420746865206f70656040820152643930ba37b960d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156123e6576123e66123be565b500390565b6000816000190483118215151615612405576124056123be565b500290565b60008261242757634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561243f5761243f6123be565b500190565b60006020828403121561245657600080fd5b81518015158114611db757600080fd5b60005b83811015612481578181015183820152602001612469565b83811115611f3d5750506000910152565b600082516124a4818460208701612466565b9190910192915050565b60208152600082518060208401526124cd816040850160208701612466565b601f01601f1916919091016040019291505056fea26469706673582212209c3f8abeb878c7f7eae12fafc8fc1f0908ee71fe498c6e898c6049d4440ee5ed64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x231 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61D027B3 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xB3AB15FB GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x4F2 JUMPI DUP1 PUSH4 0xF46901ED EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xC58E3843 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xC5967C26 EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0xD256D48A EQ PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x714B4658 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x714B4658 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x97FFE1D7 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xA8D5FD65 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x6CEE85C2 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x1BE JUMPI DUP1 PUSH4 0x530B97A4 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x530B97A4 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x53C03829 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x5DB76731 EQ PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x2FFAAA09 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x3F9E3F04 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x446A2EC8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x4B94F50E EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AE4B0C GT PUSH2 0x205 JUMPI DUP1 PUSH4 0x8AE4B0C EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x1E85CD65 EQ PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x17E7E58 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x22BA18D EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x46335D0 EQ PUSH2 0x290 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xD SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x253 JUMP JUMPDEST PUSH2 0x249 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x253 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x253 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2A3 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x249 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH2 0x249 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x348 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x249 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x249 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x249 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x348 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x2266 JUMP JUMPDEST PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x229F JUMP JUMPDEST PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x119C JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x120C JUMP JUMPDEST PUSH2 0x249 PUSH2 0x41B CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x348 PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x348 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x4C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x249 PUSH2 0x1BCF JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0x249 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x1C37 JUMP JUMPDEST PUSH2 0x348 PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x2A3 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x26F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x54E PUSH2 0x1C9E JUMP JUMPDEST PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x55F DUP5 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x5CC SWAP1 PUSH2 0x5C6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x5C0 PUSH2 0x5A1 DUP8 DUP8 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1DBE JUMP JUMPDEST SWAP1 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x900CF0CF PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x900CF0CF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x66A SWAP2 PUSH2 0x1DD6 JUMP JUMPDEST GT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x900CF0CF PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x900CF0CF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x66A SWAP2 PUSH2 0x1DD6 JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x74C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE CALLER DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD GT PUSH2 0x821 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20546865206D656D62657220646F6573206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1E1A5CDD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST CALLER DUP1 ISZERO PUSH2 0x8B2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x870 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x87D PUSH2 0xB01 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH2 0x8BB CALLER PUSH2 0x1C19 JUMP JUMPDEST ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F74207769746864726177203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0xA SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x9BE SWAP2 PUSH2 0x1DD6 JUMP JUMPDEST GT ISZERO PUSH2 0xA18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A207374696C6C20696E207769746864726177206C6F63 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6B757 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH2 0xA20 PUSH2 0x18F8 JUMP JUMPDEST PUSH2 0xA29 DUP3 PUSH2 0x1DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST DUP1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xA9E JUMPI POP PUSH1 0x38 DUP3 GT ISZERO JUMPDEST PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F77697468647261774C6F636B757045706F6368733A206F7574206F66207261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6765 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0xA SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB12 SWAP1 PUSH1 0x1 PUSH2 0x1DAB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB21 PUSH2 0x1C9E JUMP JUMPDEST PUSH1 0x40 ADD MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x25CA7A87 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x4B94F50E SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20616C726561647920696E697469616C697A65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP4 AND OR DUP2 SSTORE PUSH1 0x6 DUP1 SLOAD DUP8 DUP6 AND SWAP1 DUP5 AND OR DUP2 SSTORE PUSH1 0xC DUP7 SWAP1 SSTORE PUSH1 0xD DUP1 SLOAD SWAP5 DUP7 AND SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE NUMBER DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP6 DUP2 MSTORE DUP4 DUP6 ADD DUP7 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP8 MSTORE DUP5 MLOAD PUSH1 0x3 SWAP8 DUP9 MUL PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP4 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP2 ADD SSTORE PUSH1 0xA SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xB SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER SWAP1 DUP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP3 DUP4 MSTORE SWAP3 SWAP1 SWAP2 PUSH32 0x25FF68DD81B34665B5BA7E553EE5511BF6812E12ADB4A7E2C0D9E26B3099CE79 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH2 0xD79 DUP3 PUSH2 0x1C19 JUMP JUMPDEST PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x61646472657373206E6F7420696E2074686520626C61636B6C69737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F74207769746864726177203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 ISZERO PUSH2 0xF4B JUMPI PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC4 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0xEFD SWAP2 AND DUP5 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x715576A45BD0EA6CA90A2F53C258FE52BDD30E6061046CE86CA3FA7E9F5A91BE DUP4 PUSH1 0x40 MLOAD PUSH2 0xF42 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xF58 SWAP1 DUP4 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE SLOAD PUSH2 0xF84 SWAP2 AND DUP5 DUP5 PUSH2 0x1EA2 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x345A298B5B7318863D2A616F67AE5329DEB5255F9F90B5EBC73EE5DDCD81B180 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFC9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x7A65726F PUSH1 0xE0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x7368617265 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH2 0x10E0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x1EA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1112 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1859191C995CDCC8185B1C9958591E481859191959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6F7574206F662072616E6765 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1297 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1859191C995CDCC81B9BDD08195E1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x900CF0CF PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x900CF0CF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x137C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE CALLER DUP1 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F7420616C6C6F63617465203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143B PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST GT PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F7420616C6C6F63617465207768656E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x746F74616C537570706C79206973203 PUSH1 0x84 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AB PUSH2 0x1C9E JUMP JUMPDEST PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x14DB PUSH2 0x14D4 PUSH2 0x14C2 PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5C0 DUP7 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1DBE JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE NUMBER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP3 MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0 DUP5 ADD SSTORE MLOAD PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x159C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP8 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0xAC24935FD910BC682B5CCB1A07B718CADF8CF2F6D1404C4F3DDC3662DAE40E29 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x164D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x22FA JUMP JUMPDEST NUMBER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 ORIGIN DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE CALLER DUP1 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE DUP1 ISZERO PUSH2 0x1718 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x16D6 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x16E3 PUSH2 0xB01 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH2 0x1721 CALLER PUSH2 0x1C19 JUMP JUMPDEST ISZERO PUSH2 0x173E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2340 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x178E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2043616E6E6F74207374616B65203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0xC SLOAD ISZERO PUSH2 0x17E3 JUMPI PUSH1 0x0 PUSH2 0x17B3 PUSH2 0x2710 PUSH2 0x5C0 PUSH1 0xC SLOAD DUP7 PUSH2 0x1DBE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17BF DUP4 DUP3 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SLOAD SWAP2 SWAP5 POP PUSH2 0x17E1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 CALLER SWAP2 AND DUP5 PUSH2 0x1F05 JUMP JUMPDEST POP JUMPDEST PUSH2 0x17EC DUP3 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x183F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0xA57 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER DUP1 ISZERO PUSH2 0x1989 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1947 DUP3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1954 PUSH2 0xB01 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH2 0x1992 CALLER PUSH2 0x1C19 JUMP JUMPDEST ISZERO PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2340 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP1 ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3F SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0xB SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1A5E SWAP2 PUSH2 0x1DD6 JUMP JUMPDEST GT ISZERO PUSH2 0x1AB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A207374696C6C20696E20726577617264206C6F636B75 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x900CF0CF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2D SWAP2 SWAP1 PUSH2 0x22E1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH2 0x1B66 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x1EA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH2 0xA57 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x62CB3E13 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xC5967C26 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1C50 SWAP1 PUSH2 0x708 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP1 PUSH2 0x2363 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1CC2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1CCC PUSH2 0xB01 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1CDC JUMPI PUSH2 0x1CDC PUSH2 0x23A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1D5D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1D6D JUMPI PUSH2 0x1D6D PUSH2 0x23A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 DUP5 PUSH2 0x23D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 DUP5 PUSH2 0x23EB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 DUP5 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB7 DUP3 DUP5 PUSH2 0x242C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1E61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20776974686472617720726571756573742067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D195C881D1A185B881CDD185AD95908185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1E6E SWAP1 DUP4 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x1E7B DUP2 DUP4 PUSH2 0x1DAB JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x1B98 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x10E0 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1F3D SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1ECE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F50 SWAP1 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F6D SWAP1 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x1F99 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP5 PUSH2 0x1F05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x206E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x10E0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x200F SWAP2 SWAP1 PUSH2 0x2444 JUMP JUMPDEST PUSH2 0x10E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x743 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5CC DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2095 SWAP2 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20E8 DUP8 DUP4 DUP4 DUP8 PUSH2 0x20F3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2162 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x215B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x215B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x743 JUMP JUMPDEST POP DUP2 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x5CC DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2177 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x743 SWAP2 SWAP1 PUSH2 0x24AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DB7 DUP2 PUSH2 0x2191 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2221 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2231 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x2241 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x2258 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2284 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2294 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x22BF DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x22D6 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x436F6E747261637447756172643A206F6E6520626C6F636B2C206F6E65206675 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x3731BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x189B1858DADB1A5CDD PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A2063616C6C6572206973206E6F7420746865206F7065 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x3930BA37B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x23E6 JUMPI PUSH2 0x23E6 PUSH2 0x23BE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2405 JUMPI PUSH2 0x2405 PUSH2 0x23BE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2427 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x243F JUMPI PUSH2 0x243F PUSH2 0x23BE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2481 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2469 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F3D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x24A4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2466 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x24CD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2466 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 EXTCODEHASH DUP11 0xBE 0xB8 PUSH25 0xC7F7EAE12FAFC8FC1F0908EE71FE498C6E898C6049D4440EE5 0xED PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "633:9766:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6398:312;;;;;;:::i;:::-;;:::i;:::-;;;548:25:9;;;536:2;521:18;6398:312:0;;;;;;;;1563:20;;;;;-1:-1:-1;;;;;1563:20:0;;;;;;-1:-1:-1;;;;;748:32:9;;;730:51;;718:2;703:18;1563:20:0;584:203:9;1499:33:0;;;;;;5750:168;;;;;;:::i;:::-;;:::i;:::-;;;957:14:9;;950:22;932:41;;920:2;905:18;5750:168:0;792:187:9;1357:45:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1186:25:9;;;1242:2;1227:18;;1220:34;;;;1270:18;;;1263:34;1174:2;1159:18;1357:45:0;984:319:9;1197:31:0;;;;;-1:-1:-1;;;1197:31:0;;;;;;341:89:1;411:12;;341:89;;5577:167:0;;;;;;:::i;:::-;;:::i;1458:35::-;;;;;;7318:470;;;;;;:::i;:::-;;:::i;:::-;;3752:358;;;;;;:::i;:::-;;:::i;4998:115::-;;;:::i;6278:114::-;;;:::i;6132:105::-;;;:::i;2880:761::-;;;;;;:::i;:::-;;:::i;9186:809::-;;;;;;:::i;:::-;;:::i;10001:396::-;;;;;;:::i;:::-;;:::i;1154:23::-;;;;;-1:-1:-1;;;;;1154:23:0;;;4355:210;;;;;;:::i;:::-;;:::i;1260:25::-;;;;;-1:-1:-1;;;;;1260:25:0;;;4116:140;;;;;;:::i;:::-;;:::i;4571:211::-;;;;;;:::i;:::-;;:::i;436:108:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;519:18:1;493:7;519:18;;;:9;:18;;;;;;;436:108;5266:135:0;;;;;;:::i;:::-;-1:-1:-1;;;;;5361:15:0;5335:7;5361:15;;;:7;:15;;;;;:33;;5266:135;5924:89;;;:::i;8472:708::-;;;;;;:::i;:::-;;:::i;6768:544::-;;;;;;:::i;:::-;;:::i;227:19:1:-;;;;;-1:-1:-1;;;;;227:19:1;;;3647:99:0;;;;;;:::i;:::-;;:::i;7873:593::-;;;:::i;1408:43::-;;;;;;:::i;:::-;;:::i;6019:107::-;;;:::i;4792:116::-;;;;;;:::i;:::-;;:::i;1539:18::-;;;;;;7794:73;;;:::i;4262:87::-;;;;;;:::i;:::-;;:::i;1309:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1235:19;;;;;-1:-1:-1;;;;;1235:19:0;;;6398:312;6451:7;6470:17;6490:19;:17;:19::i;:::-;:34;;;6470:54;;6534:17;6554:25;6572:6;6554:17;:25::i;:::-;:40;;;;;-1:-1:-1;;;;;6674:15:0;;;;;;:7;:15;;;;;;:28;;;6554:40;;-1:-1:-1;6612:91:0;;:57;6664:4;6612:47;6634:24;:9;6554:40;6634:13;:24::i;:::-;-1:-1:-1;;;;;519:18:1;;493:7;519:18;;;:9;:18;;;;;;6612:21:0;;:47::i;:::-;:51;;:57::i;:::-;:61;;:91::i;:::-;6605:98;6398:312;-1:-1:-1;;;;6398:312:0:o;5750:168::-;5895:8;;:16;;;-1:-1:-1;;;5895:16:0;;;;5813:4;;-1:-1:-1;;;;;5895:8:0;;:14;;:16;;;;;;;;;;;;;;:8;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5872:18;;-1:-1:-1;;;;;5836:15:0;;;;;;:7;:15;;;;;:31;;;:55;;:35;:55::i;:::-;:75;;;5750:168;-1:-1:-1;;5750:168:0:o;5577:167::-;5721:8;;:16;;;-1:-1:-1;;;5721:16:0;;;;5637:4;;-1:-1:-1;;;;;5721:8:0;;:14;;:16;;;;;;;;;;;;;;:8;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5696:20;;-1:-1:-1;;;;;5660:15:0;;;;;;:7;:15;;;;;:31;;;:57;;:35;:57::i;7318:470::-;246:12:6;215:4;238:21;;;:7;:21;;;;;;;;260:9;238:32;;;;;;;;;;455:29;447:80;;;;-1:-1:-1;;;447:80:6;;;;;;;:::i;:::-;;;;;;;;;375:12;344:4;367:21;;;:7;:21;;;;;;;;389:10;367:33;;;;;;;;;;545:29;537:80;;;;-1:-1:-1;;;537:80:6;;;;;;;:::i;:::-;636:12;628:21;;;;:7;:21;;;;;;;;650:9;628:32;;;;;;;:39;;663:4;-1:-1:-1;;628:39:6;;;;;;;;699:10;677:33;;;;;:40;;;;;;;;;;519:9:1;:18;;;;;;2325:25:0::1;2317:74;;;::::0;-1:-1:-1;;;2317:74:0;;4655:2:9;2317:74:0::1;::::0;::::1;4637:21:9::0;4694:2;4674:18;;;4667:30;4733:34;4713:18;;;4706:62;-1:-1:-1;;;4784:18:9;;;4777:34;4828:19;;2317:74:0::1;4453:400:9::0;2317:74:0::1;7407:10:::2;2467:20:::0;;2463:235:::2;;-1:-1:-1::0;;;;;2528:15:0;::::2;2503:22;2528:15:::0;;;:7:::2;:15;::::0;;;;;;;;2503:40;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;::::2;;::::0;;;;;;;;2577:14:::2;2536:6:::0;2577::::2;:14::i;:::-;2557:17;::::0;::::2;:34:::0;2630:21:::2;:19;:21::i;:::-;2605:46:::0;;-1:-1:-1;;;;;2665:15:0;::::2;2605:22;2665:15:::0;;;:7:::2;:15;::::0;;;;;;;;:22;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;2463:235:::2;7438:30:::3;7457:10;7438:18;:30::i;:::-;7437:31;7429:53;;;;-1:-1:-1::0;;;7429:53:0::3;;;;;;;:::i;:::-;7509:1;7500:6;:10;7492:51;;;::::0;-1:-1:-1;;;7492:51:0;;5397:2:9;7492:51:0::3;::::0;::::3;5379:21:9::0;5436:2;5416:18;;;5409:30;5475;5455:18;;;5448:58;5523:18;;7492:51:0::3;5195:352:9::0;7492:51:0::3;7626:8;;;;;;;;;-1:-1:-1::0;;;;;7626:8:0::3;-1:-1:-1::0;;;;;7626:14:0::3;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7601:20;::::0;7569:10:::3;7561:19;::::0;;;:7:::3;:19;::::0;;;;:35:::3;;::::0;:61:::3;::::0;:39:::3;:61::i;:::-;:81;;7553:129;;;::::0;-1:-1:-1;;;7553:129:0;;5754:2:9;7553:129:0::3;::::0;::::3;5736:21:9::0;5793:2;5773:18;;;5766:30;5832:34;5812:18;;;5805:62;-1:-1:-1;;;5883:18:9;;;5876:33;5926:19;;7553:129:0::3;5552:399:9::0;7553:129:0::3;7692:13;:11;:13::i;:::-;7715:22;7730:6;7715:14;:22::i;:::-;7752:29;::::0;548:25:9;;;7762:10:0::3;::::0;7752:29:::3;::::0;536:2:9;521:18;7752:29:0::3;;;;;;;;2401:1:::2;7318:470:::0;:::o;3752:358::-;2195:8;;-1:-1:-1;;;;;2195:8:0;2207:10;2195:22;2187:72;;;;-1:-1:-1;;;2187:72:0;;;;;;;:::i;:::-;3896:19:::1;3871:21;:44;;:75;;;;;3944:2;3919:21;:27;;3871:75;3863:123;;;::::0;-1:-1:-1;;;3863:123:0;;6564:2:9;3863:123:0::1;::::0;::::1;6546:21:9::0;6603:2;6583:18;;;6576:30;6642:34;6622:18;;;6615:62;-1:-1:-1;;;6693:18:9;;;6686:33;6736:19;;3863:123:0::1;6362:399:9::0;3863:123:0::1;4009:20;:44:::0;;;;4063:18:::1;:40:::0;3752:358::o;4998:115::-;5076:16;:23;5050:7;;5076:30;;5104:1;5076:27;:30::i;:::-;5069:37;;4998:115;:::o;6278:114::-;6325:7;6351:19;:17;:19::i;:::-;:34;;;6344:41;;6278:114;:::o;6132:105::-;6206:8;;:24;;;-1:-1:-1;;;6206:24:0;;;;6180:7;;-1:-1:-1;;;;;6206:8:0;;:22;;:24;;;;;;;;;;;;;;:8;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2880:761::-;2766:11;;-1:-1:-1;;;2766:11:0;;;;2765:12;2757:55;;;;-1:-1:-1;;;2757:55:0;;6968:2:9;2757:55:0;;;6950:21:9;7007:2;6987:18;;;6980:30;7046:32;7026:18;;;7019:60;7096:18;;2757:55:0;6766:354:9;2757:55:0;3059:5:::1;:14:::0;;-1:-1:-1;;;;;3059:14:0;;::::1;-1:-1:-1::0;;;;;;3059:14:0;;::::1;;::::0;;;-1:-1:-1;3083:14:0;;;;::::1;::::0;;::::1;;::::0;;3107:8:::1;:20:::0;;;;::::1;::::0;;::::1;;::::0;;3137:3:::1;:10:::0;;;3157:5:::1;:14:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;3225:77:::1;::::0;;::::1;::::0;::::1;::::0;;3250:12:::1;3225:77:::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;3312:16:::1;:38:::0;;-1:-1:-1;3312:38:0;::::1;::::0;;;;;;-1:-1:-1;3312:38:0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;3361:20:::1;:24:::0;;;;3446:18:::1;:22:::0;;;;-1:-1:-1;3533:18:0;;-1:-1:-1;;;;;;3561:21:0;3572:10:::1;3561:21:::0;;;-1:-1:-1;;;3561:21:0;;;;3597:37;;548:25:9;;;3225:77:0;3572:10;;3597:37:::1;::::0;521:18:9;3597:37:0::1;;;;;;;3049:592;2880:761:::0;;;;;:::o;9186:809::-;2195:8;;-1:-1:-1;;;;;2195:8:0;2207:10;2195:22;2187:72;;;;-1:-1:-1;;;2187:72:0;;;;;;;:::i;:::-;9288:28:::1;9307:8;9288:18;:28::i;:::-;9280:69;;;::::0;-1:-1:-1;;;9280:69:0;;7327:2:9;9280:69:0::1;::::0;::::1;7309:21:9::0;7366:2;7346:18;;;7339:30;7405;7385:18;;;7378:58;7453:18;;9280:69:0::1;7125:352:9::0;9280:69:0::1;-1:-1:-1::0;;;;;9381:19:0;::::1;9359;9381::::0;;;:9:::1;:19;::::0;;;;;9418:15;9410:56:::1;;;::::0;-1:-1:-1;;;9410:56:0;;5397:2:9;9410:56:0::1;::::0;::::1;5379:21:9::0;5436:2;5416:18;;;5409:30;5475;5455:18;;;5448:58;5523:18;;9410:56:0::1;5195:352:9::0;9410:56:0::1;-1:-1:-1::0;;;;;9493:17:0;::::1;9476:14;9493:17:::0;;;:7:::1;:17;::::0;;;;:30:::1;;::::0;9537:10;;9533:262:::1;;9599:8;;;;;;;;;-1:-1:-1::0;;;;;9599:8:0::1;-1:-1:-1::0;;;;;9599:14:0::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9563:17:0;;::::1;;::::0;;;:7:::1;:17;::::0;;;;:33:::1;::::0;::::1;:52:::0;;;;9644:30:::1;::::0;;::::1;:34:::0;;;;9692:5:::1;::::0;:31:::1;::::0;:5:::1;9711:3:::0;9716:6;9692:18:::1;:31::i;:::-;9772:3;-1:-1:-1::0;;;;;9742:42:0::1;9762:8;-1:-1:-1::0;;;;;9742:42:0::1;;9777:6;9742:42;;;;548:25:9::0;;536:2;521:18;;402:177;9742:42:0::1;;;;;;;;9533:262;9819:12;::::0;:29:::1;::::0;9836:11;9819:16:::1;:29::i;:::-;9804:12;:44:::0;-1:-1:-1;;;;;9858:19:0;;::::1;9880:1;9858:19:::0;;;:9:::1;:19;::::0;;;;:23;;;9891:5;:36:::1;::::0;:5:::1;9910:3:::0;9915:11;9891:18:::1;:36::i;:::-;9971:3;-1:-1:-1::0;;;;;9942:46:0::1;9961:8;-1:-1:-1::0;;;;;9942:46:0::1;;9976:11;9942:46;;;;548:25:9::0;;536:2;521:18;;402:177;9942:46:0::1;;;;;;;;9270:725;;9186:809:::0;;:::o;10001:396::-;2195:8;;-1:-1:-1;;;;;2195:8:0;2207:10;2195:22;2187:72;;;;-1:-1:-1;;;2187:72:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;10154:17:0;::::1;10146:34;;;;-1:-1:-1::0;;;10146:34:0::1;;;;;;7684:2:9::0;7666:21;;;7723:1;7703:18;;;7696:29;-1:-1:-1;;;7756:2:9;7741:18;;7734:34;7800:2;7785:18;;7482:327;10146:34:0::1;10270:5;::::0;-1:-1:-1;;;;;10270:5:0;;::::1;10243:33:::0;;::::1;::::0;10235:51:::1;;;::::0;-1:-1:-1;;;10235:51:0;;8016:2:9;10235:51:0::1;::::0;::::1;7998:21:9::0;8055:1;8035:18;;;8028:29;-1:-1:-1;;;8073:18:9;;;8066:35;8118:18;;10235:51:0::1;7814:328:9::0;10235:51:0::1;10331:5;::::0;-1:-1:-1;;;;;10331:5:0;;::::1;10304:33:::0;;::::1;::::0;10296:51:::1;;;::::0;-1:-1:-1;;;10296:51:0;;8349:2:9;10296:51:0::1;::::0;::::1;8331:21:9::0;8388:1;8368:18;;;8361:29;-1:-1:-1;;;8406:18:9;;;8399:35;8451:18;;10296:51:0::1;8147:328:9::0;10296:51:0::1;10357:33;-1:-1:-1::0;;;;;10357:19:0;::::1;10377:3:::0;10382:7;10357:19:::1;:33::i;:::-;10001:396:::0;;;:::o;4355:210::-;2195:8;;4431:4;;-1:-1:-1;;;;;2195:8:0;2207:10;2195:22;2187:72;;;;-1:-1:-1;;;2187:72:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4456:19:0;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;4455:20;4447:54;;;::::0;-1:-1:-1;;;4447:54:0;;8682:2:9;4447:54:0::1;::::0;::::1;8664:21:9::0;8721:2;8701:18;;;8694:30;-1:-1:-1;;;8740:18:9;;;8733:51;8801:18;;4447:54:0::1;8480:345:9::0;4447:54:0::1;-1:-1:-1::0;;;;;;4511:19:0::1;;::::0;;;:9:::1;:19;::::0;;;;:26;;-1:-1:-1;;4511:26:0::1;4533:4;4511:26:::0;;::::1;::::0;;;4533:4;4355:210::o;4116:140::-;2195:8;;-1:-1:-1;;;;;2195:8:0;2207:10;2195:22;2187:72;;;;-1:-1:-1;;;2187:72:0;;;;;;;:::i;:::-;4207:5:::1;4199:4;:13;;4178:51;;;::::0;-1:-1:-1;;;4178:51:0;;9032:2:9;4178:51:0::1;::::0;::::1;9014:21:9::0;9071:2;9051:18;;;9044:30;-1:-1:-1;;;9090:18:9;;;9083:42;9142:18;;4178:51:0::1;8830:336:9::0;4178:51:0::1;4239:3;:10:::0;4116:140::o;4571:211::-;2195:8;;4650:4;;-1:-1:-1;;;;;2195:8:0;2207:10;2195:22;2187:72;;;;-1:-1:-1;;;2187:72:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;4674:19:0;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;4666:51;;;::::0;-1:-1:-1;;;4666:51:0;;9373:2:9;4666:51:0::1;::::0;::::1;9355:21:9::0;9412:2;9392:18;;;9385:30;-1:-1:-1;;;9431:18:9;;;9424:49;9490:18;;4666:51:0::1;9171:343:9::0;4666:51:0::1;-1:-1:-1::0;;;;;;4727:19:0::1;4749:5;4727:19:::0;;;:9:::1;:19;::::0;;;;:27;;-1:-1:-1;;4727:27:0::1;::::0;;-1:-1:-1;;4571:211:0:o;5924:89::-;5990:8;;:16;;;-1:-1:-1;;;5990:16:0;;;;5964:7;;-1:-1:-1;;;;;5990:8:0;;:14;;:16;;;;;;;;;;;;;;:8;:16;;;;;;;;;;;;;;8472:708;246:12:6;215:4;238:21;;;:7;:21;;;;;;;;260:9;238:32;;;;;;;;;;455:29;447:80;;;;-1:-1:-1;;;447:80:6;;;;;;;:::i;:::-;375:12;344:4;367:21;;;:7;:21;;;;;;;;389:10;367:33;;;;;;;;;;545:29;537:80;;;;-1:-1:-1;;;537:80:6;;;;;;;:::i;:::-;636:12;628:21;;;;:7;:21;;;;;;;;650:9;628:32;;;;;;;;:39;;663:4;-1:-1:-1;;628:39:6;;;;;;;;699:10;677:33;;;;;;;:40;;;;;;;;;2195:8:0::1;::::0;-1:-1:-1;;;;;2195:8:0::1;:22;2187:72;;;;-1:-1:-1::0;;;2187:72:0::1;;;;;;;:::i;:::-;8579:1:::2;8570:6;:10;8562:51;;;::::0;-1:-1:-1;;;8562:51:0;;9721:2:9;8562:51:0::2;::::0;::::2;9703:21:9::0;9760:2;9740:18;;;9733:30;9799;9779:18;;;9772:58;9847:18;;8562:51:0::2;9519:352:9::0;8562:51:0::2;8647:1;8631:13;411:12:1::0;;;341:89;8631:13:0::2;:17;8623:78;;;::::0;-1:-1:-1;;;8623:78:0;;10078:2:9;8623:78:0::2;::::0;::::2;10060:21:9::0;10117:2;10097:18;;;10090:30;10156:34;10136:18;;;10129:62;-1:-1:-1;;;10207:18:9;;;10200:46;10263:19;;8623:78:0::2;9876:412:9::0;8623:78:0::2;8749:15;8767:19;:17;:19::i;:::-;:34;;;8749:52;;8811:15;8829:48;8841:35;8862:13;411:12:1::0;;;341:89;8862:13:0::2;8841:16;:6:::0;8852:4:::2;8841:10;:16::i;:35::-;8829:7:::0;;:11:::2;:48::i;:::-;8927:88;::::0;;::::2;::::0;::::2;::::0;;8952:12:::2;8927:88:::0;;::::2;::::0;::::2;::::0;;;;;;;;;9025:16:::2;:34:::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;9025:34:0;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;;9070:5:::2;::::0;8927:88;;-1:-1:-1;8927:88:0;9070:57:::2;::::0;-1:-1:-1;;;;;9070:5:0::2;9093:10;9113:4;8927:88:::0;9070:22:::2;:57::i;:::-;9142:31;::::0;548:25:9;;;9154:10:0::2;::::0;9142:31:::2;::::0;536:2:9;521:18;9142:31:0::2;;;;;;;8552:628;;;8472:708:::0;:::o;6768:544::-;246:12:6;215:4;238:21;;;:7;:21;;;;;;;;260:9;238:32;;;;;;;;;;455:29;447:80;;;;-1:-1:-1;;;447:80:6;;;;;;;:::i;:::-;375:12;344:4;367:21;;;:7;:21;;;;;;;;389:10;367:33;;;;;;;;;;545:29;537:80;;;;-1:-1:-1;;;537:80:6;;;;;;;:::i;:::-;636:12;628:21;;;;:7;:21;;;;;;;;650:9;628:32;;;;;;;;:39;;663:4;-1:-1:-1;;628:39:6;;;;;;;;699:10;677:33;;;;;;;:40;;;;;;;;;2467:20:0;;2463:235:::1;;-1:-1:-1::0;;;;;2528:15:0;::::1;2503:22;2528:15:::0;;;:7:::1;:15;::::0;;;;;;;;2503:40;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;;::::0;;;;;;;;2577:14:::1;2536:6:::0;2577::::1;:14::i;:::-;2557:17;::::0;::::1;:34:::0;2630:21:::1;:19;:21::i;:::-;2605:46:::0;;-1:-1:-1;;;;;2665:15:0;::::1;2605:22;2665:15:::0;;;:7:::1;:15;::::0;;;;;;;;:22;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;2463:235:::1;6872:30:::2;6891:10;6872:18;:30::i;:::-;6871:31;6863:53;;;;-1:-1:-1::0;;;6863:53:0::2;;;;;;;:::i;:::-;6943:1;6934:6;:10;6926:48;;;::::0;-1:-1:-1;;;6926:48:0;;10495:2:9;6926:48:0::2;::::0;::::2;10477:21:9::0;10534:2;10514:18;;;10507:30;10573:27;10553:18;;;10546:55;10618:18;;6926:48:0::2;10293:349:9::0;6926:48:0::2;6988:3;::::0;:7;6984:173:::2;;7011:8;7022:26;7042:5;7022:15;7033:3;;7022:6;:10;;:15;;;;:::i;:26::-;7011:37:::0;-1:-1:-1;7071:15:0::2;:6:::0;7011:37;7071:10:::2;:15::i;:::-;7135:5;::::0;::::2;7100::::0;7062:24;;-1:-1:-1;7100:46:0::2;::::0;-1:-1:-1;;;;;7100:5:0;;::::2;::::0;7123:10:::2;::::0;7135:5:::2;7142:3:::0;7100:22:::2;:46::i;:::-;6997:160;6984:173;7166:19;7178:6;7166:11;:19::i;:::-;7233:8;;;;;;;;;-1:-1:-1::0;;;;;7233:8:0::2;-1:-1:-1::0;;;;;7233:14:0::2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7203:10;7195:19;::::0;;;:7:::2;:19;::::0;;;;;;:35:::2;;:54:::0;;;;7279:26;;::::2;::::0;::::2;::::0;7298:6;548:25:9;;536:2;521:18;;402:177;3647:99:0;2195:8;;-1:-1:-1;;;;;2195:8:0;2207:10;2195:22;2187:72;;;;-1:-1:-1;;;2187:72:0;;;;;;;:::i;:::-;3719:8:::1;:20:::0;;-1:-1:-1;;;;;;3719:20:0::1;-1:-1:-1::0;;;;;3719:20:0;;;::::1;::::0;;;::::1;::::0;;3647:99::o;7873:593::-;7916:10;2467:20;;2463:235;;-1:-1:-1;;;;;2528:15:0;;2503:22;2528:15;;;:7;:15;;;;;;;;;2503:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:14;2536:6;2577;:14::i;:::-;2557:17;;;:34;2630:21;:19;:21::i;:::-;2605:46;;-1:-1:-1;;;;;2665:15:0;;2605:22;2665:15;;;:7;:15;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;;2463:235;7947:30:::1;7966:10;7947:18;:30::i;:::-;7946:31;7938:53;;;;-1:-1:-1::0;;;7938:53:0::1;;;;;;;:::i;:::-;8026:10;8001:14;8018:19:::0;;;:7:::1;:19;::::0;;;;:32:::1;;::::0;8064:10;;8060:400:::1;;8161:8;;;;;;;;;-1:-1:-1::0;;;;;8161:8:0::1;-1:-1:-1::0;;;;;8161:14:0::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8138:18;::::0;8106:10:::1;8098:19;::::0;;;:7:::1;:19;::::0;;;;:35:::1;;::::0;:59:::1;::::0;:39:::1;:59::i;:::-;:79;;8090:125;;;::::0;-1:-1:-1;;;8090:125:0;;10849:2:9;8090:125:0::1;::::0;::::1;10831:21:9::0;10888:2;10868:18;;;10861:30;10927:34;10907:18;;;10900:62;-1:-1:-1;;;10978:18:9;;;10971:31;11019:19;;8090:125:0::1;10647:397:9::0;8090:125:0::1;8267:8;;;;;;;;;-1:-1:-1::0;;;;;8267:8:0::1;-1:-1:-1::0;;;;;8267:14:0::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8237:10;8229:19;::::0;;;:7:::1;:19;::::0;;;;:35:::1;::::0;::::1;:54:::0;;;;8312:32:::1;::::0;;::::1;:36:::0;;;;8362:5:::1;::::0;:38:::1;::::0;-1:-1:-1;;;;;8362:5:0;;::::1;::::0;8393:6;8362:18:::1;:38::i;:::-;8419:30;::::0;548:25:9;;;8430:10:0::1;::::0;8419:30:::1;::::0;536:2:9;521:18;8419:30:0::1;402:177:9::0;8060:400:0::1;7928:538;7873:593:::0;:::o;1408:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1408:43:0;:::o;6019:107::-;6094:8;;:25;;;-1:-1:-1;;;6094:25:0;;;;6068:7;;-1:-1:-1;;;;;6094:8:0;;:23;;:25;;;;;;;;;;;;;;:8;:25;;;;;;;;;;;;;;4792:116;-1:-1:-1;;;;;4882:19:0;4859:4;4882:19;;;:9;:19;;;;;;;;;4792:116::o;7794:73::-;7848:10;493:7:1;519:18;;;:9;:18;;;;;;7829:31:0;;7318:470;:::i;7829:31::-;7794:73::o;4262:87::-;2195:8;;-1:-1:-1;;;;;2195:8:0;2207:10;2195:22;2187:72;;;;-1:-1:-1;;;2187:72:0;;;;;;;:::i;:::-;4328:5:::1;:14:::0;;-1:-1:-1;;;;;;4328:14:0::1;-1:-1:-1::0;;;;;4328:14:0;;;::::1;::::0;;;::::1;::::0;;4262:87::o;5119:141::-;5171:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;5171:24:0;5214:16;5231:21;:19;:21::i;:::-;5214:39;;;;;;;;:::i;:::-;;;;;;;;;;;5207:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5119:141;:::o;5407:164::-;5473:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;5473:24:0;5516:16;5533:30;5556:6;-1:-1:-1;;;;;5361:15:0;5335:7;5361:15;;;:7;:15;;;;;:33;;5266:135;5533:30;5516:48;;;;;;;;:::i;:::-;;;;;;;;;;;5509:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5407:164;;;:::o;3050:96:5:-;3108:7;3134:5;3138:1;3134;:5;:::i;:::-;3127:12;3050:96;-1:-1:-1;;;3050:96:5:o;3393:::-;3451:7;3477:5;3481:1;3477;:5;:::i;3778:96::-;3836:7;3862:5;3866:1;3862;:5;:::i;2683:96::-;2741:7;2767:5;2771:1;2767;:5;:::i;792:361:1:-;883:10;851:19;873:21;;;:9;:21;;;;;;912;;;;904:88;;;;-1:-1:-1;;;904:88:1;;12173:2:9;904:88:1;;;12155:21:9;12212:2;12192:18;;;12185:30;12251:34;12231:18;;;12224:62;-1:-1:-1;;;12302:18:9;;;12295:52;12364:19;;904:88:1;11971:418:9;904:88:1;1017:12;;:24;;1034:6;1017:16;:24::i;:::-;1002:12;:39;1075:23;:11;1091:6;1075:15;:23::i;:::-;1061:10;1051:21;;;;:9;:21;;;;;:47;;;;1108:5;;:38;;-1:-1:-1;;;;;1108:5:1;;;;1139:6;652:175:8;761:58;;-1:-1:-1;;;;;12586:32:9;;761:58:8;;;12568:51:9;12635:18;;;12628:34;;;734:86:8;;754:5;;-1:-1:-1;;;784:23:8;12541:18:9;;761:58:8;;;;-1:-1:-1;;761:58:8;;;;;;;;;;;;;;-1:-1:-1;;;;;761:58:8;-1:-1:-1;;;;;;761:58:8;;;;;;;;;;734:19;:86::i;833:203::-;960:68;;-1:-1:-1;;;;;12931:15:9;;;960:68:8;;;12913:34:9;12983:15;;12963:18;;;12956:43;13015:18;;;13008:34;;;933:96:8;;953:5;;-1:-1:-1;;;983:27:8;12848:18:9;;960:68:8;12673:375:9;933:96:8;833:203;;;;:::o;550:236:1:-;621:12;;:24;;638:6;621:16;:24::i;:::-;606:12;:39;689:10;679:21;;;;:9;:21;;;;;;:33;;705:6;679:25;:33::i;:::-;665:10;655:21;;;;:9;:21;;;;;:57;;;;722:5;;:57;;-1:-1:-1;;;;;722:5:1;;;;765:4;772:6;722:22;:57::i;:::-;550:236;:::o;3000:706:8:-;3419:23;3445:69;3473:4;3445:69;;;;;;;;;;;;;;;;;3453:5;-1:-1:-1;;;;;3445:27:8;;;:69;;;;;:::i;:::-;3528:17;;3419:95;;-1:-1:-1;3528:21:8;3524:176;;3623:10;3612:30;;;;;;;;;;;;:::i;:::-;3604:85;;;;-1:-1:-1;;;3604:85:8;;13537:2:9;3604:85:8;;;13519:21:9;13576:2;13556:18;;;13549:30;13615:34;13595:18;;;13588:62;-1:-1:-1;;;13666:18:9;;;13659:40;13716:19;;3604:85:8;13335:406:9;4041:223:2;4174:12;4205:52;4227:6;4235:4;4241:1;4244:12;4174;5379;5393:23;5420:6;-1:-1:-1;;;;;5420:11:2;5439:5;5446:4;5420:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5378:73;;;;5468:69;5495:6;5503:7;5512:10;5524:12;5468:26;:69::i;:::-;5461:76;5098:446;-1:-1:-1;;;;;;;5098:446:2:o;7604:628::-;7784:12;7812:7;7808:418;;;7839:10;:17;7860:1;7839:22;7835:286;;-1:-1:-1;;;;;1634:19:2;;;8046:60;;;;-1:-1:-1;;;8046:60:2;;14897:2:9;8046:60:2;;;14879:21:9;14936:2;14916:18;;;14909:30;14975:31;14955:18;;;14948:59;15024:18;;8046:60:2;14695:353:9;8046:60:2;-1:-1:-1;8141:10:2;8134:17;;7808:418;8182:33;8190:10;8202:12;8913:17;;:21;8909:379;;9141:10;9135:17;9197:15;9184:10;9180:2;9176:19;9169:44;8909:379;9264:12;9257:20;;-1:-1:-1;;;9257:20:2;;;;;;;;:::i;14:131:9:-;-1:-1:-1;;;;;89:31:9;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;1308:180::-;1367:6;1420:2;1408:9;1399:7;1395:23;1391:32;1388:52;;;1436:1;1433;1426:12;1388:52;-1:-1:-1;1459:23:9;;1308:180;-1:-1:-1;1308:180:9:o;1493:248::-;1561:6;1569;1622:2;1610:9;1601:7;1597:23;1593:32;1590:52;;;1638:1;1635;1628:12;1590:52;-1:-1:-1;;1661:23:9;;;1731:2;1716:18;;;1703:32;;-1:-1:-1;1493:248:9:o;1746:788::-;1889:6;1897;1905;1913;1921;1974:3;1962:9;1953:7;1949:23;1945:33;1942:53;;;1991:1;1988;1981:12;1942:53;2030:9;2017:23;2049:31;2074:5;2049:31;:::i;:::-;2099:5;-1:-1:-1;2156:2:9;2141:18;;2128:32;2169:33;2128:32;2169:33;:::i;:::-;2221:7;-1:-1:-1;2280:2:9;2265:18;;2252:32;2293:33;2252:32;2293:33;:::i;:::-;2345:7;-1:-1:-1;2399:2:9;2384:18;;2371:32;;-1:-1:-1;2455:3:9;2440:19;;2427:33;2469;2427;2469;:::i;:::-;2521:7;2511:17;;;1746:788;;;;;;;;:::o;2539:388::-;2607:6;2615;2668:2;2656:9;2647:7;2643:23;2639:32;2636:52;;;2684:1;2681;2674:12;2636:52;2723:9;2710:23;2742:31;2767:5;2742:31;:::i;:::-;2792:5;-1:-1:-1;2849:2:9;2834:18;;2821:32;2862:33;2821:32;2862:33;:::i;:::-;2914:7;2904:17;;;2539:388;;;;;:::o;2932:471::-;3024:6;3032;3040;3093:2;3081:9;3072:7;3068:23;3064:32;3061:52;;;3109:1;3106;3099:12;3061:52;3148:9;3135:23;3167:31;3192:5;3167:31;:::i;:::-;3217:5;-1:-1:-1;3269:2:9;3254:18;;3241:32;;-1:-1:-1;3325:2:9;3310:18;;3297:32;3338:33;3297:32;3338:33;:::i;:::-;3390:7;3380:17;;;2932:471;;;;;:::o;3857:184::-;3927:6;3980:2;3968:9;3959:7;3955:23;3951:32;3948:52;;;3996:1;3993;3986:12;3948:52;-1:-1:-1;4019:16:9;;3857:184;-1:-1:-1;3857:184:9:o;4046:402::-;4248:2;4230:21;;;4287:2;4267:18;;;4260:30;4326:34;4321:2;4306:18;;4299:62;-1:-1:-1;;;4392:2:9;4377:18;;4370:36;4438:3;4423:19;;4046:402::o;4858:332::-;5060:2;5042:21;;;5099:1;5079:18;;;5072:29;-1:-1:-1;;;5132:2:9;5117:18;;5110:39;5181:2;5166:18;;4858:332::o;5956:401::-;6158:2;6140:21;;;6197:2;6177:18;;;6170:30;6236:34;6231:2;6216:18;;6209:62;-1:-1:-1;;;6302:2:9;6287:18;;6280:35;6347:3;6332:19;;5956:401::o;11049:127::-;11110:10;11105:3;11101:20;11098:1;11091:31;11141:4;11138:1;11131:15;11165:4;11162:1;11155:15;11181:127;11242:10;11237:3;11233:20;11230:1;11223:31;11273:4;11270:1;11263:15;11297:4;11294:1;11287:15;11313:125;11353:4;11381:1;11378;11375:8;11372:34;;;11386:18;;:::i;:::-;-1:-1:-1;11423:9:9;;11313:125::o;11443:168::-;11483:7;11549:1;11545;11541:6;11537:14;11534:1;11531:21;11526:1;11519:9;11512:17;11508:45;11505:71;;;11556:18;;:::i;:::-;-1:-1:-1;11596:9:9;;11443:168::o;11616:217::-;11656:1;11682;11672:132;;11726:10;11721:3;11717:20;11714:1;11707:31;11761:4;11758:1;11751:15;11789:4;11786:1;11779:15;11672:132;-1:-1:-1;11818:9:9;;11616:217::o;11838:128::-;11878:3;11909:1;11905:6;11902:1;11899:13;11896:39;;;11915:18;;:::i;:::-;-1:-1:-1;11951:9:9;;11838:128::o;13053:277::-;13120:6;13173:2;13161:9;13152:7;13148:23;13144:32;13141:52;;;13189:1;13186;13179:12;13141:52;13221:9;13215:16;13274:5;13267:13;13260:21;13253:5;13250:32;13240:60;;13296:1;13293;13286:12;14153:258;14225:1;14235:113;14249:6;14246:1;14243:13;14235:113;;;14325:11;;;14319:18;14306:11;;;14299:39;14271:2;14264:10;14235:113;;;14366:6;14363:1;14360:13;14357:48;;;-1:-1:-1;;14401:1:9;14383:16;;14376:27;14153:258::o;14416:274::-;14545:3;14583:6;14577:13;14599:53;14645:6;14640:3;14633:4;14625:6;14621:17;14599:53;:::i;:::-;14668:16;;;;;14416:274;-1:-1:-1;;14416:274:9:o;15053:383::-;15202:2;15191:9;15184:21;15165:4;15234:6;15228:13;15277:6;15272:2;15261:9;15257:18;15250:34;15293:66;15352:6;15347:2;15336:9;15332:18;15327:2;15319:6;15315:15;15293:66;:::i;:::-;15420:2;15399:15;-1:-1:-1;;15395:29:9;15380:45;;;;15427:2;15376:54;;15053:383;-1:-1:-1;;15053:383:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1899000",
								"executionCost": "26229",
								"totalCost": "1925229"
							},
							"external": {
								"addAddressBlacklist(address)": "29173",
								"allocateSeigniorage(uint256)": "infinite",
								"balanceOf(address)": "2632",
								"blacklist(address)": "2635",
								"blacklistFundWithdraw(address,address)": "infinite",
								"boardroomHistory(uint256)": "8947",
								"canClaimReward(address)": "infinite",
								"canWithdraw(address)": "infinite",
								"claimReward()": "infinite",
								"earned(address)": "infinite",
								"epoch()": "infinite",
								"exit()": "infinite",
								"fee()": "2328",
								"feeTo()": "2406",
								"getLastSnapshotIndexOf(address)": "2565",
								"getTokenPrice()": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"initialize(address,address,address,uint256,address)": "infinite",
								"initialized()": "2395",
								"isAddressBlacklist(address)": "2688",
								"latestSnapshotIndex()": "2509",
								"members(address)": "6834",
								"nextEpochPoint()": "infinite",
								"operator()": "2448",
								"removeAddressBlacklist(address)": "29115",
								"rewardLockupEpochs()": "2375",
								"rewardPerShare()": "11284",
								"setFee(uint256)": "24558",
								"setFeeTo(address)": "26793",
								"setLockUp(uint256,uint256)": "46727",
								"setOperator(address)": "26750",
								"share()": "2470",
								"stake(uint256)": "infinite",
								"token()": "2469",
								"totalSupply()": "2371",
								"treasury()": "2383",
								"withdraw(uint256)": "infinite",
								"withdrawLockupEpochs()": "2418"
							},
							"internal": {
								"getLastSnapshotOf(address)": "infinite",
								"getLatestSnapshot()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 633,
									"end": 10399,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1197,
									"end": 1228,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1197,
									"end": 1228,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1197,
									"end": 1228,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1197,
									"end": 1228,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1197,
									"end": 1228,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1197,
									"end": 1228,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 10399,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c3f8abeb878c7f7eae12fafc8fc1f0908ee71fe498c6e898c6049d4440ee5ed64736f6c634300080d0033",
									".code": [
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "B3AB15FB"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "DDCA3F43"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "DDCA3F43"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "E9FAD8EE"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "F46901ED"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "F9F92BE4"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "B3AB15FB"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "B88A802F"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "C58E3843"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "C5967C26"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "D256D48A"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "714B4658"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "714B4658"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "97FFE1D7"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "A8D5FD65"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "69FE0E2D"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "6CEE85C2"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "530B97A4"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "530B97A4"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "53C03829"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "54575AF4"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "5DB76731"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "2FFAAA09"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "3F9E3F04"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "446A2EC8"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "4B94F50E"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "8AE4B0C"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "8AE4B0C"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "158EF93E"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "19262D30"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "1E85CD65"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "8CC262"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "17E7E58"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "22BA18D"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "46335D0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 10399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 748,
											"end": 780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 748,
											"end": 780,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 730,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 718,
											"end": 720,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 584,
											"end": 787,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1499,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1499,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1499,
											"end": 1532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1532,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 957,
											"end": 971,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 950,
											"end": 972,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 932,
											"end": 973,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 792,
											"end": 979,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1211,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1211,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1244,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1288,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1270,
											"end": 1288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1297,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1159,
											"end": 1177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1357,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 984,
											"end": 1303,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1228,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 411,
											"end": 423,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 411,
											"end": 423,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1458,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1458,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1458,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1458,
											"end": 1493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1493,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6132,
											"end": 6237,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6132,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6132,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6132,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6132,
											"end": 6237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1177,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1285,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 436,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 436,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 493,
											"end": 500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 436,
											"end": 544,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5368,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6013,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5924,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5924,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5924,
											"end": 6013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6019,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6019,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6019,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6019,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6019,
											"end": 6126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1539,
											"end": 1557,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1539,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1539,
											"end": 1557,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1539,
											"end": 1557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1557,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7867,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7794,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7794,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7794,
											"end": 7867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1254,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6451,
											"end": 6458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6470,
											"end": 6487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6490,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6470,
											"end": 6524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6534,
											"end": 6551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6572,
											"end": 6578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6554,
											"end": 6579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6554,
											"end": 6579,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6554,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6554,
											"end": 6594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6674,
											"end": 6702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6612,
											"end": 6703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6612,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6634,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6634,
											"end": 6643,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 6594,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6634,
											"end": 6658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6634,
											"end": 6658,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6634,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 493,
											"end": 500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 6612,
											"end": 6659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6612,
											"end": 6659,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6612,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6612,
											"end": 6669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6612,
											"end": 6669,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6612,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6612,
											"end": 6703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6612,
											"end": 6703,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6612,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6703,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6710,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5903,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5895,
											"end": 5903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "900CF0CF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5895,
											"end": 5903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5909,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 5895,
											"end": 5909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5903,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 5895,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5851,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5867,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5836,
											"end": 5867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5836,
											"end": 5891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5836,
											"end": 5891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5836,
											"end": 5891,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5836,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5911,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5911,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5836,
											"end": 5911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 5918,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5577,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5729,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5721,
											"end": 5729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "900CF0CF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5721,
											"end": 5729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5735,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 5721,
											"end": 5735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5729,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5721,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5696,
											"end": 5716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5691,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5660,
											"end": 5691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5660,
											"end": 5717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5660,
											"end": 5717,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 258,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 245,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 260,
											"end": 269,
											"name": "ORIGIN",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 238,
											"end": 270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 455,
											"end": 484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 447,
											"end": 527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 375,
											"end": 387,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 344,
											"end": 348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 389,
											"end": 399,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 537,
											"end": 617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 636,
											"end": 648,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 650,
											"end": 659,
											"name": "ORIGIN",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 663,
											"end": 667,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 709,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 519,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2350,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4637,
											"end": 4658,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4667,
											"end": 4697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4767,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A20546865206D656D62657220646F6573206E6F742065"
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4706,
											"end": 4768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4784,
											"end": 4802,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4784,
											"end": 4802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4811,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4847,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4828,
											"end": 4847,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 4453,
											"end": 4853,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2317,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7407,
											"end": 7417,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2536,
											"end": 2542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2630,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 7457,
											"end": 7467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 7429,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7500,
											"end": 7506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 7510,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5409,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5505,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A2043616E6E6F74207769746864726177203000000000"
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5195,
											"end": 5547,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7492,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7626,
											"end": 7640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7621,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7601,
											"end": 7621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7569,
											"end": 7579,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7568,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7596,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7561,
											"end": 7596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 7561,
											"end": 7622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 7561,
											"end": 7622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7561,
											"end": 7622,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 7561,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7642,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5756,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5736,
											"end": 5757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5793,
											"end": 5795,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5796,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5866,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A207374696C6C20696E207769746864726177206C6F63"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5867,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B757"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5945,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5926,
											"end": 5945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5552,
											"end": 5951,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 7553,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7692,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7692,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7692,
											"end": 7705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7692,
											"end": 7705,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7692,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7715,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7715,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7715,
											"end": 7737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7715,
											"end": 7737,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7715,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7762,
											"end": 7772,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "PUSH",
											"source": 0,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3915,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3871,
											"end": 3946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3946,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3919,
											"end": 3940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3946,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3871,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6566,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6546,
											"end": 6567,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6603,
											"end": 6605,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6576,
											"end": 6606,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6676,
											"name": "PUSH",
											"source": 9,
											"value": "5F77697468647261774C6F636B757045706F6368733A206F7574206F66207261"
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6719,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6736,
											"end": 6755,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6736,
											"end": 6755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6362,
											"end": 6761,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3863,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4009,
											"end": 4053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4053,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4081,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4063,
											"end": 4103,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 4110,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5092,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 5076,
											"end": 5106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 5076,
											"end": 5106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5106,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 5076,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5069,
											"end": 5106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5069,
											"end": 5106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4998,
											"end": 5113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6325,
											"end": 6332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6351,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6351,
											"end": 6370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6370,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6351,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6351,
											"end": 6385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6351,
											"end": 6385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6351,
											"end": 6385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6278,
											"end": 6392,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6132,
											"end": 6237,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6132,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6214,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6206,
											"end": 6214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "25CA7A87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6180,
											"end": 6187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6187,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6206,
											"end": 6214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "PUSH",
											"source": 0,
											"value": "4B94F50E"
										},
										{
											"begin": 6206,
											"end": 6228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6214,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6206,
											"end": 6230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6970,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6950,
											"end": 6971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7007,
											"end": 7009,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6980,
											"end": 7010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7046,
											"end": 7078,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A20616C726561647920696E697469616C697A65640000"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7079,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6766,
											"end": 7120,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2757,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3059,
											"end": 3073,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3097,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3115,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3127,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3140,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3162,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3171,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3262,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3328,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0"
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1"
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3312,
											"end": 3350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3381,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3361,
											"end": 3385,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3385,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3385,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 3446,
											"end": 3468,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3468,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3468,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": 3533,
											"end": 3551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3582,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3561,
											"end": 3582,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "25FF68DD81B34665B5BA7E553EE5511BF6812E12ADB4A7E2C0D9E26B3099CE79"
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3634,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3049,
											"end": 3641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 3641,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 9307,
											"end": 9315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 9288,
											"end": 9316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9288,
											"end": 9316,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 9288,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7327,
											"end": 7329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7309,
											"end": 7330,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7368,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 7346,
											"end": 7364,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7346,
											"end": 7364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7369,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7405,
											"end": 7435,
											"name": "PUSH",
											"source": 9,
											"value": "61646472657373206E6F7420696E2074686520626C61636B6C69737400000000"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7385,
											"end": 7403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7378,
											"end": 7436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7453,
											"end": 7471,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7453,
											"end": 7471,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7125,
											"end": 7477,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 9280,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9359,
											"end": 9378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9390,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9418,
											"end": 9433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5409,
											"end": 5439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5505,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A2043616E6E6F74207769746864726177203000000000"
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5195,
											"end": 5547,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 9410,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9523,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9493,
											"end": 9523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 9533,
											"end": 9795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9599,
											"end": 9607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9599,
											"end": 9613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9613,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 9599,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9570,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9596,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9563,
											"end": 9596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9615,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9615,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9615,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9644,
											"end": 9674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9644,
											"end": 9674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9644,
											"end": 9674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9644,
											"end": 9674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9644,
											"end": 9678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9644,
											"end": 9678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9644,
											"end": 9678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9644,
											"end": 9678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9697,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9692,
											"end": 9697,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 9692,
											"end": 9723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9711,
											"end": 9714,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9716,
											"end": 9722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 9692,
											"end": 9723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9692,
											"end": 9723,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 9692,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9772,
											"end": 9775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9762,
											"end": 9770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "PUSH",
											"source": 0,
											"value": "715576A45BD0EA6CA90A2F53C258FE52BDD30E6061046CE86CA3FA7E9F5A91BE"
										},
										{
											"begin": 9777,
											"end": 9783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 402,
											"end": 579,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9742,
											"end": 9784,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9795,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 9533,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9831,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9819,
											"end": 9831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 9819,
											"end": 9848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9836,
											"end": 9847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9819,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9819,
											"end": 9848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9819,
											"end": 9848,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 9819,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9804,
											"end": 9816,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9804,
											"end": 9848,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9867,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 9891,
											"end": 9927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9910,
											"end": 9913,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9915,
											"end": 9926,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 9891,
											"end": 9927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9891,
											"end": 9927,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 9891,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9971,
											"end": 9974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9961,
											"end": 9969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "PUSH",
											"source": 0,
											"value": "345A298B5B7318863D2A616F67AE5329DEB5255F9F90B5EBC73EE5DDCD81B180"
										},
										{
											"begin": 9976,
											"end": 9987,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 402,
											"end": 579,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9988,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9270,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9270,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9995,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10154,
											"end": 10171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10154,
											"end": 10171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7666,
											"end": 7687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7666,
											"end": 7687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7666,
											"end": 7687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7724,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7696,
											"end": 7725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7734,
											"end": 7768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7800,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7785,
											"end": 7803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7482,
											"end": 7809,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 10146,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10270,
											"end": 10275,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10270,
											"end": 10275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10270,
											"end": 10275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10270,
											"end": 10275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10270,
											"end": 10275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10243,
											"end": 10276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10243,
											"end": 10276,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10243,
											"end": 10276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10243,
											"end": 10276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8016,
											"end": 8018,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7998,
											"end": 8019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8056,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8028,
											"end": 8057,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8091,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8073,
											"end": 8091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8091,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8101,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7814,
											"end": 8142,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 10235,
											"end": 10286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10331,
											"end": 10336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10304,
											"end": 10337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10304,
											"end": 10337,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10304,
											"end": 10337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10304,
											"end": 10337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8349,
											"end": 8351,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8368,
											"end": 8386,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8368,
											"end": 8386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8368,
											"end": 8386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8361,
											"end": 8390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7368617265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8406,
											"end": 8424,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8406,
											"end": 8424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8406,
											"end": 8424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8399,
											"end": 8434,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8147,
											"end": 8475,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 10296,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10357,
											"end": 10390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10357,
											"end": 10376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10357,
											"end": 10376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10377,
											"end": 10380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10357,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 10357,
											"end": 10390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10357,
											"end": 10390,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 10357,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10001,
											"end": 10397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4465,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4456,
											"end": 4475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8682,
											"end": 8684,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8664,
											"end": 8685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8721,
											"end": 8723,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 8701,
											"end": 8719,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8701,
											"end": 8719,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8719,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8694,
											"end": 8724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1859191C995CDCC8185B1C9958591E481859191959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8740,
											"end": 8758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8480,
											"end": 8825,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 4447,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4537,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4565,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4212,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 4199,
											"end": 4203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4212,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9035,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9071,
											"end": 9073,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9051,
											"end": 9069,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9051,
											"end": 9069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9051,
											"end": 9069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9074,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F7574206F662072616E6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9083,
											"end": 9125,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8830,
											"end": 9166,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 4178,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4242,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4116,
											"end": 4256,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4650,
											"end": 4654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9373,
											"end": 9375,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9355,
											"end": 9376,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9414,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9392,
											"end": 9410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9415,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1859191C995CDCC81B9BDD08195E1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9431,
											"end": 9449,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9431,
											"end": 9449,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9424,
											"end": 9473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9508,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9490,
											"end": 9508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 9171,
											"end": 9514,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 4666,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4749,
											"end": 4754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4736,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 4754,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4782,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5924,
											"end": 6013,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5924,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 5998,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5990,
											"end": 5998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "900CF0CF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5964,
											"end": 5971,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5990,
											"end": 5998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 5998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6004,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 5990,
											"end": 6004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 5998,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 258,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 245,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 260,
											"end": 269,
											"name": "ORIGIN",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 238,
											"end": 270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 455,
											"end": 484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 447,
											"end": 527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 375,
											"end": 387,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 344,
											"end": 348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 389,
											"end": 399,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 537,
											"end": 617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 636,
											"end": 648,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 650,
											"end": 659,
											"name": "ORIGIN",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 663,
											"end": 667,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 709,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8570,
											"end": 8576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8580,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9721,
											"end": 9723,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9703,
											"end": 9724,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9762,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9733,
											"end": 9763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9799,
											"end": 9829,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A2043616E6E6F7420616C6C6F63617465203000000000"
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9847,
											"end": 9865,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 9519,
											"end": 9871,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 8562,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 411,
											"end": 423,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 411,
											"end": 423,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8631,
											"end": 8644,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 8631,
											"end": 8644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8648,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10078,
											"end": 10080,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10060,
											"end": 10081,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10117,
											"end": 10119,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 10097,
											"end": 10115,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10097,
											"end": 10115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10097,
											"end": 10115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10090,
											"end": 10120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10156,
											"end": 10190,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A2043616E6E6F7420616C6C6F63617465207768656E20"
										},
										{
											"begin": 10136,
											"end": 10154,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10136,
											"end": 10154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10136,
											"end": 10154,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10129,
											"end": 10191,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F74616C537570706C79206973203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 10225,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10207,
											"end": 10225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10207,
											"end": 10225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10200,
											"end": 10246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 9876,
											"end": 10288,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 8623,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 8767,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8767,
											"end": 8786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8786,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 8767,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8767,
											"end": 8801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8811,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 8841,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 8862,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 411,
											"end": 423,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 411,
											"end": 423,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8875,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 8862,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8841,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8841,
											"end": 8847,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8852,
											"end": 8856,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8841,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 8841,
											"end": 8857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8841,
											"end": 8876,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 8841,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8829,
											"end": 8836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8829,
											"end": 8836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8829,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 8829,
											"end": 8877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8829,
											"end": 8877,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 8829,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8964,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B0"
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "PUSH",
											"source": 0,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7B1"
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9070,
											"end": 9075,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9070,
											"end": 9075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9070,
											"end": 9127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 9070,
											"end": 9127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9070,
											"end": 9075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9093,
											"end": 9103,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9113,
											"end": 9117,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9070,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 9070,
											"end": 9127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9070,
											"end": 9127,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 9070,
											"end": 9127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9164,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9154,
											"end": 9164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "PUSH",
											"source": 0,
											"value": "AC24935FD910BC682B5CCB1A07B718CADF8CF2F6D1404C4F3DDC3662DAE40E29"
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9173,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 8552,
											"end": 9180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8552,
											"end": 9180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8552,
											"end": 9180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6768,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 258,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 245,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 238,
											"end": 259,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 260,
											"end": 269,
											"name": "ORIGIN",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 238,
											"end": 270,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 238,
											"end": 270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 455,
											"end": 484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 447,
											"end": 527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 447,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 447,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 375,
											"end": 387,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 344,
											"end": 348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 367,
											"end": 388,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 389,
											"end": 399,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 367,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 537,
											"end": 617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 537,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 537,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 636,
											"end": 648,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 628,
											"end": 649,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 650,
											"end": 659,
											"name": "ORIGIN",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 660,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 663,
											"end": 667,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 628,
											"end": 667,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 699,
											"end": 709,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 677,
											"end": 710,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 677,
											"end": 717,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 2536,
											"end": 2542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 2630,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 6891,
											"end": 6901,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 6872,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6871,
											"end": 6902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 6863,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6943,
											"end": 6944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6944,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10495,
											"end": 10497,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10498,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10534,
											"end": 10536,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 10514,
											"end": 10532,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10514,
											"end": 10532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10514,
											"end": 10532,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10573,
											"end": 10600,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A2043616E6E6F74207374616B65203000000000000000"
										},
										{
											"begin": 10553,
											"end": 10571,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10553,
											"end": 10571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10553,
											"end": 10571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10546,
											"end": 10601,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10293,
											"end": 10642,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6926,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6988,
											"end": 6991,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 6988,
											"end": 6991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6988,
											"end": 6995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6984,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 6984,
											"end": 7157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 7042,
											"end": 7047,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 7022,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 7033,
											"end": 7036,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 7033,
											"end": 7036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7028,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 7022,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7022,
											"end": 7037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7071,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 7071,
											"end": 7077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7071,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7071,
											"end": 7086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7071,
											"end": 7086,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 7071,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7135,
											"end": 7140,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 7135,
											"end": 7140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7135,
											"end": 7140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7062,
											"end": 7086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7062,
											"end": 7086,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7100,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 7100,
											"end": 7146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7100,
											"end": 7105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7100,
											"end": 7105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7100,
											"end": 7105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7100,
											"end": 7105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7135,
											"end": 7140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7142,
											"end": 7145,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7100,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 7100,
											"end": 7146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7100,
											"end": 7146,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 7100,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6997,
											"end": 7157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6984,
											"end": 7157,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 6984,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 7178,
											"end": 7184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 7166,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7233,
											"end": 7241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7233,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 7233,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7213,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7202,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7230,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7195,
											"end": 7230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7249,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7305,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 7279,
											"end": 7305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7279,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7279,
											"end": 7305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7298,
											"end": 7304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 402,
											"end": 579,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3739,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 2536,
											"end": 2542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 2577,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 2630,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 2630,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2680,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 2463,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 7966,
											"end": 7976,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7947,
											"end": 7977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7947,
											"end": 7977,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 7947,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 7938,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8026,
											"end": 8036,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8001,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8025,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8018,
											"end": 8050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8064,
											"end": 8074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8064,
											"end": 8074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 8060,
											"end": 8460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 8161,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8156,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8138,
											"end": 8156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8116,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8105,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8098,
											"end": 8133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 8098,
											"end": 8157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 8098,
											"end": 8157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8098,
											"end": 8157,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 8098,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8177,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10849,
											"end": 10851,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10831,
											"end": 10852,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10861,
											"end": 10891,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10927,
											"end": 10961,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A207374696C6C20696E20726577617264206C6F636B75"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10900,
											"end": 10962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10978,
											"end": 10996,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10978,
											"end": 10996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10978,
											"end": 10996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10971,
											"end": 11002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11019,
											"end": 11038,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11019,
											"end": 11038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10647,
											"end": 11044,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 8090,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8267,
											"end": 8275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8267,
											"end": 8281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8281,
											"name": "PUSH",
											"source": 0,
											"value": "900CF0CF"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 8267,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8237,
											"end": 8247,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8264,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8229,
											"end": 8264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8283,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8283,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8283,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8440,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "PUSH",
											"source": 0,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8419,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 402,
											"end": 579,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8060,
											"end": 8460,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 8060,
											"end": 8460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7928,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7873,
											"end": 8466,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1451,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6019,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6019,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6102,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6094,
											"end": 6102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62CB3E13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6117,
											"name": "PUSH",
											"source": 0,
											"value": "C5967C26"
										},
										{
											"begin": 6094,
											"end": 6117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6102,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4908,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7794,
											"end": 7867,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7794,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7858,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 493,
											"end": 500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 7829,
											"end": 7860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7318,
											"end": 7788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7829,
											"end": 7860,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 7829,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7794,
											"end": 7867,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2195,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2195,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 2187,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4342,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4262,
											"end": 4349,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5119,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5119,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 5171,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5230,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5231,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 5231,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5231,
											"end": 5252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5252,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 5231,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5260,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5407,
											"end": 5571,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5407,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5473,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5473,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 5473,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5533,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5368,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5361,
											"end": 5394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5266,
											"end": 5401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 5533,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5516,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5571,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3108,
											"end": 3115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3139,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 3481,
											"end": 3482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3778,
											"end": 3874,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3778,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3863,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2683,
											"end": 2779,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2683,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 893,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 851,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 873,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 912,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 912,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 912,
											"end": 933,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 912,
											"end": 933,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12155,
											"end": 12176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12212,
											"end": 12214,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12185,
											"end": 12215,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12251,
											"end": 12285,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A20776974686472617720726571756573742067726561"
										},
										{
											"begin": 12231,
											"end": 12249,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12231,
											"end": 12249,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12231,
											"end": 12249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D195C881D1A185B881CDD185AD95908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12302,
											"end": 12320,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12302,
											"end": 12320,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12295,
											"end": 12347,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12364,
											"end": 12383,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12364,
											"end": 12383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 904,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 11971,
											"end": 12389,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 904,
											"end": 992,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1002,
											"end": 1041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 1075,
											"end": 1086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1071,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1098,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 1108,
											"end": 1146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 652,
											"end": 827,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 652,
											"end": 827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12618,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12586,
											"end": 12618,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12568,
											"end": 12619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12635,
											"end": 12653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12628,
											"end": 12662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12628,
											"end": 12662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12628,
											"end": 12662,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 734,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 754,
											"end": 759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12541,
											"end": 12559,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12541,
											"end": 12559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 761,
											"end": 819,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 734,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12931,
											"end": 12946,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12931,
											"end": 12946,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12931,
											"end": 12946,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12983,
											"end": 12998,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12983,
											"end": 12998,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12956,
											"end": 12999,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13008,
											"end": 13042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 958,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 953,
											"end": 958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 983,
											"end": 1010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12848,
											"end": 12866,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12848,
											"end": 12866,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 12673,
											"end": 13048,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 621,
											"end": 633,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 621,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 645,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 689,
											"end": 699,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 679,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 679,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 679,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 679,
											"end": 712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 705,
											"end": 711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 679,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 679,
											"end": 712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 712,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 679,
											"end": 712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 655,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 655,
											"end": 712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 655,
											"end": 712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 712,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 722,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 722,
											"end": 779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 769,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 772,
											"end": 778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 722,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 722,
											"end": 779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 722,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 722,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3000,
											"end": 3706,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 3000,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3458,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3528,
											"end": 3549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3524,
											"end": 3700,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13537,
											"end": 13539,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13519,
											"end": 13540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13578,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13549,
											"end": 13579,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13615,
											"end": 13649,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 13595,
											"end": 13613,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13595,
											"end": 13613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13595,
											"end": 13613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13588,
											"end": 13650,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13666,
											"end": 13684,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13666,
											"end": 13684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13666,
											"end": 13684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13659,
											"end": 13699,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13716,
											"end": 13735,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 13716,
											"end": 13735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 13335,
											"end": 13741,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "tag",
											"source": 2,
											"value": "478"
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4174,
											"end": 4186,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4239,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4241,
											"end": 4242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4256,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4174,
											"end": 4186,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5379,
											"end": 5391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5416,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5426,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5420,
											"end": 5431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5439,
											"end": 5444,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "492"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "493"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "492"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "496"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "496"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "495"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5512,
											"end": 5522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5536,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "498"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "tag",
											"source": 2,
											"value": "497"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5461,
											"end": 5537,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7604,
											"end": 8232,
											"name": "tag",
											"source": 2,
											"value": "498"
										},
										{
											"begin": 7604,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7860,
											"end": 7861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 7835,
											"end": 8121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14897,
											"end": 14899,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14879,
											"end": 14900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14936,
											"end": 14938,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14916,
											"end": 14934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14909,
											"end": 14939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 14955,
											"end": 14973,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14955,
											"end": 14973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14955,
											"end": 14973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14948,
											"end": 15007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 14695,
											"end": 15048,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "tag",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8141,
											"end": 8151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8134,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8134,
											"end": 8151,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "tag",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 8190,
											"end": 8200,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8214,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "512"
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9141,
											"end": 9151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9135,
											"end": 9152,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9184,
											"end": 9194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9176,
											"end": 9195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9213,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "tag",
											"source": 2,
											"value": "512"
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9264,
											"end": 9276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "515"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1488,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1308,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1418,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1423,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 1388,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1482,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1459,
											"end": 1482,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1488,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1488,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1493,
											"end": 1741,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1493,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1567,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1622,
											"end": 1624,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1619,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1608,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1597,
											"end": 1620,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1625,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1640,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 1590,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1684,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1684,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1741,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1903,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1977,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1978,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 1942,
											"end": 1995,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 1993,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1995,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 1942,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2017,
											"end": 2040,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 2049,
											"end": 2080,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2049,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 2049,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2156,
											"end": 2158,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2160,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 2128,
											"end": 2160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 2169,
											"end": 2202,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2169,
											"end": 2202,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 2169,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2228,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2252,
											"end": 2284,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 2252,
											"end": 2284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 2293,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2352,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2401,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2384,
											"end": 2402,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2403,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2403,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2460,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 2427,
											"end": 2460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 2469,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2534,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2539,
											"end": 2927,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2539,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2654,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2666,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2671,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2636,
											"end": 2688,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2636,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 2636,
											"end": 2688,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2682,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 2686,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2636,
											"end": 2688,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 2636,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2733,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2849,
											"end": 2851,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2853,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 2821,
											"end": 2853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 2862,
											"end": 2895,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2862,
											"end": 2895,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 2862,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2927,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2927,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2927,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2932,
											"end": 3403,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2932,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3095,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3072,
											"end": 3079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3091,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3064,
											"end": 3096,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3111,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 3061,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3158,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3269,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3272,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3329,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 3297,
											"end": 3329,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3397,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3397,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 3403,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 3403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 3403,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 3403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 3403,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 3403,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3857,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3977,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3966,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3955,
											"end": 3978,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 3983,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 4000,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 3948,
											"end": 4000,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 3998,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 4000,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 3948,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4035,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4035,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3857,
											"end": 4041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3857,
											"end": 4041,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4046,
											"end": 4448,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4046,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4287,
											"end": 4289,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4360,
											"name": "PUSH",
											"source": 9,
											"value": "436F6E747261637447756172643A206F6E6520626C6F636B2C206F6E65206675"
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4406,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4441,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4423,
											"end": 4442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4046,
											"end": 4448,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4858,
											"end": 5190,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4858,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5062,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5042,
											"end": 5063,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5063,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5042,
											"end": 5063,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5072,
											"end": 5101,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "189B1858DADB1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5117,
											"end": 5135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5117,
											"end": 5135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5110,
											"end": 5149,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4858,
											"end": 5190,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5956,
											"end": 6357,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 5956,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6199,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6170,
											"end": 6200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6270,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A2063616C6C6572206973206E6F7420746865206F7065"
										},
										{
											"begin": 6231,
											"end": 6233,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3930BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6302,
											"end": 6304,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6287,
											"end": 6305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6287,
											"end": 6305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6280,
											"end": 6315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6347,
											"end": 6350,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6332,
											"end": 6351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5956,
											"end": 6357,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11049,
											"end": 11176,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 11049,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11120,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 11105,
											"end": 11108,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11101,
											"end": 11121,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11098,
											"end": 11099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11091,
											"end": 11122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 11138,
											"end": 11139,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11131,
											"end": 11146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11162,
											"end": 11163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11155,
											"end": 11170,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11308,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 11181,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11252,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 11237,
											"end": 11240,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11233,
											"end": 11253,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11230,
											"end": 11231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11277,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11270,
											"end": 11271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11263,
											"end": 11278,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11301,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11294,
											"end": 11295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11302,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11313,
											"end": 11438,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 11313,
											"end": 11438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11353,
											"end": 11357,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11381,
											"end": 11382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11378,
											"end": 11379,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11375,
											"end": 11383,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 11372,
											"end": 11406,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11423,
											"end": 11432,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11423,
											"end": 11432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11313,
											"end": 11438,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11443,
											"end": 11611,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 11443,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11483,
											"end": 11490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11549,
											"end": 11550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11545,
											"end": 11546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11541,
											"end": 11547,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11537,
											"end": 11551,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11552,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11526,
											"end": 11527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11519,
											"end": 11528,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11512,
											"end": 11529,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11553,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11505,
											"end": 11576,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11505,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 11505,
											"end": 11576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11596,
											"end": 11605,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11596,
											"end": 11605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11443,
											"end": 11611,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11616,
											"end": 11833,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 11616,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11656,
											"end": 11657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11682,
											"end": 11683,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 11672,
											"end": 11804,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11726,
											"end": 11736,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 11721,
											"end": 11724,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11717,
											"end": 11737,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11707,
											"end": 11738,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11761,
											"end": 11765,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11758,
											"end": 11759,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11751,
											"end": 11766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11789,
											"end": 11793,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11779,
											"end": 11794,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11672,
											"end": 11804,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 11672,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11818,
											"end": 11827,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11818,
											"end": 11827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11616,
											"end": 11833,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11838,
											"end": 11966,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 11838,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11878,
											"end": 11881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11909,
											"end": 11910,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11905,
											"end": 11911,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11899,
											"end": 11912,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11896,
											"end": 11935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11896,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 11896,
											"end": 11935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11838,
											"end": 11966,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13053,
											"end": 13330,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 13053,
											"end": 13330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13120,
											"end": 13126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13173,
											"end": 13175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13161,
											"end": 13170,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13152,
											"end": 13159,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13148,
											"end": 13171,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13144,
											"end": 13176,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13193,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 13141,
											"end": 13193,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13189,
											"end": 13190,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13186,
											"end": 13187,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13179,
											"end": 13191,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13193,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 13141,
											"end": 13193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13221,
											"end": 13230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13215,
											"end": 13231,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13274,
											"end": 13279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13267,
											"end": 13280,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13253,
											"end": 13258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13250,
											"end": 13282,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 13240,
											"end": 13300,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13296,
											"end": 13297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13293,
											"end": 13294,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13286,
											"end": 13298,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14411,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 14153,
											"end": 14411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14249,
											"end": 14255,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14246,
											"end": 14247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14243,
											"end": 14256,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14319,
											"end": 14337,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14299,
											"end": 14338,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14271,
											"end": 14273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14264,
											"end": 14274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 14235,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14366,
											"end": 14372,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14363,
											"end": 14364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14357,
											"end": 14405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14357,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 14357,
											"end": 14405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14401,
											"end": 14402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 14399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14383,
											"end": 14399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14376,
											"end": 14403,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14153,
											"end": 14411,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14416,
											"end": 14690,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 14416,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14583,
											"end": 14589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14577,
											"end": 14590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 14645,
											"end": 14651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14640,
											"end": 14643,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14633,
											"end": 14637,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14625,
											"end": 14631,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14621,
											"end": 14638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 14599,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14416,
											"end": 14690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14416,
											"end": 14690,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15053,
											"end": 15436,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 15053,
											"end": 15436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15202,
											"end": 15204,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15191,
											"end": 15200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15184,
											"end": 15205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15165,
											"end": 15169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15234,
											"end": 15240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15228,
											"end": 15241,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15277,
											"end": 15283,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15272,
											"end": 15274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15261,
											"end": 15270,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15257,
											"end": 15275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15250,
											"end": 15284,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15293,
											"end": 15359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 15352,
											"end": 15358,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15347,
											"end": 15349,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15336,
											"end": 15345,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15332,
											"end": 15350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15327,
											"end": 15329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15319,
											"end": 15325,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15315,
											"end": 15330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15293,
											"end": 15359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 15293,
											"end": 15359,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15293,
											"end": 15359,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 15293,
											"end": 15359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15420,
											"end": 15422,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 15399,
											"end": 15414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15395,
											"end": 15424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15380,
											"end": 15425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15380,
											"end": 15425,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15380,
											"end": 15425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15380,
											"end": 15425,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15427,
											"end": 15429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15376,
											"end": 15430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15376,
											"end": 15430,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15053,
											"end": 15436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15053,
											"end": 15436,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addAddressBlacklist(address)": "5db76731",
							"allocateSeigniorage(uint256)": "97ffe1d7",
							"balanceOf(address)": "70a08231",
							"blacklist(address)": "f9f92be4",
							"blacklistFundWithdraw(address,address)": "53c03829",
							"boardroomHistory(uint256)": "c58e3843",
							"canClaimReward(address)": "046335d0",
							"canWithdraw(address)": "19262d30",
							"claimReward()": "b88a802f",
							"earned(address)": "008cc262",
							"epoch()": "900cf0cf",
							"exit()": "e9fad8ee",
							"fee()": "ddca3f43",
							"feeTo()": "017e7e58",
							"getLastSnapshotIndexOf(address)": "714b4658",
							"getTokenPrice()": "4b94f50e",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"initialize(address,address,address,uint256,address)": "530b97a4",
							"initialized()": "158ef93e",
							"isAddressBlacklist(address)": "d256d48a",
							"latestSnapshotIndex()": "3f9e3f04",
							"members(address)": "08ae4b0c",
							"nextEpochPoint()": "c5967c26",
							"operator()": "570ca735",
							"removeAddressBlacklist(address)": "6cee85c2",
							"rewardLockupEpochs()": "022ba18d",
							"rewardPerShare()": "446a2ec8",
							"setFee(uint256)": "69fe0e2d",
							"setFeeTo(address)": "f46901ed",
							"setLockUp(uint256,uint256)": "2ffaaa09",
							"setOperator(address)": "b3ab15fb",
							"share()": "a8d5fd65",
							"stake(uint256)": "a694fc3a",
							"token()": "fc0c546a",
							"totalSupply()": "18160ddd",
							"treasury()": "61d027b3",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawLockupEpochs()": "1e85cd65"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"BlacklistRewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BlacklistWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"at\",\"type\":\"uint256\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAddressBlacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"allocateSeigniorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"blacklistFundWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"boardroomHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"canClaimReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"getLastSnapshotIndexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_share\",\"type\":\"address\"},{\"internalType\":\"contract ITreasury\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAddressBlacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestSnapshotIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastSnapshotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"epochTimerStart\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextEpochPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAddressBlacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardLockupEpochs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawLockupEpochs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardLockupEpochs\",\"type\":\"uint256\"}],\"name\":\"setLockUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"share\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLockupEpochs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":\"Boardroom\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol\":{\"keccak256\":\"0xde9b1004927aa52579eb223c2cd978a7fa4c7b8b3df60685636f23b40cb78d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3caa03908702550b0a7dbd0ed87d231c615f67fba250cc139fa810a5d7b6578d\",\"dweb:/ipfs/QmQNw1bWkCcCeaZm5S3zypKjWvZAbTDfL4m1HfFwbV6ocC\"]},\"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":{\"keccak256\":\"0xb973a553ddb6f647886505e62f76364798b5f293f60e6df471db2b55b928c285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21cada1d547e9631db1eed6bb813f41b3285e57219a3c636df5e5af83a1e9a13\",\"dweb:/ipfs/QmUeB7esyoRs52uVJ4qoVp2vNfjGCEDm1oQounppAbXxL5\"]},\"brownie_projects/bebu_finance/contracts/utils/Address.sol\":{\"keccak256\":\"0x2254ff0365cbc4f80af2433d10890e0d4816c14f38a6e9e0c746f861ad434f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17ecd670c7f9522306389b638a01d0b0e93156ec0e9c2cbe798b091e89474a32\",\"dweb:/ipfs/QmUzZpE98hpS8J4KtqcLxxTzdrP2rKeUWssF5GJA1e3dYw\"]},\"brownie_projects/bebu_finance/contracts/utils/interfaces/IBasisAsset.sol\":{\"keccak256\":\"0x1c4f534f233e5e3aa23d6b5e355d0f13b4935fe56cad587150d4a391489b54b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddef78442dd176100a3a8fc3b6ae70c1d1370cecc7d1103781dad6084b027540\",\"dweb:/ipfs/QmPg5m9y1tNV6CHzDC4kzsdAucjFQHwAXh6Wyo8TghmD6L\"]},\"brownie_projects/bebu_finance/contracts/utils/interfaces/ITreasury.sol\":{\"keccak256\":\"0x2d545e7abe91449babe85d90c66aa680933ae6a8468b4195af9761095a3b8821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fce1a27bb48808ec1cebcc96c28e79cafcdde4f8f5ca901f31a66cda35727e\",\"dweb:/ipfs/QmPhSVHD8TTiNV1JKmTYWYVHtbs5Xo1bxKfh9xwZmbA4EC\"]},\"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]},\"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":{\"keccak256\":\"0x5f20bc62c01fee18fd86df3cbcc26657977b1cc81734acd2b488f73960b04510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77104a5f9bb014698fabe3988d6632c048906cd378ef41dbff6d31be32cae24b\",\"dweb:/ipfs/QmTakFPyaDEgxjaaCkrPhqD7oQQo5Y39xMxPevMkRdkaPg\"]},\"brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]},\"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":{\"keccak256\":\"0x593692219f7f58fc3dd89dc0271eaf2b459fd7515bbf53dcdb799bcce79c97b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dcb333da0bda5db19dacbc438f214d8e8408c210605baba683ce4af33ba525d\",\"dweb:/ipfs/QmRjDL9cN4qKGozcoN34EscZZesPqsa9E5qggHRihUZxkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1061,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "share",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)2083"
							},
							{
								"astId": 1063,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1067,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1938,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "_status",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 37,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "operator",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 40,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "initialized",
								"offset": 20,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 43,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "token",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)2083"
							},
							{
								"astId": 46,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "treasury",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(ITreasury)1618"
							},
							{
								"astId": 50,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "blacklist",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 55,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "members",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(Memberseat)28_storage)"
							},
							{
								"astId": 59,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "boardroomHistory",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_struct(BoardroomSnapshot)35_storage)dyn_storage"
							},
							{
								"astId": 61,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "withdrawLockupEpochs",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 63,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "rewardLockupEpochs",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 65,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "fee",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 67,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
								"label": "feeTo",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(BoardroomSnapshot)35_storage)dyn_storage": {
								"base": "t_struct(BoardroomSnapshot)35_storage",
								"encoding": "dynamic_array",
								"label": "struct Boardroom.BoardroomSnapshot[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)2083": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ITreasury)1618": {
								"encoding": "inplace",
								"label": "contract ITreasury",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Memberseat)28_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Boardroom.Memberseat)",
								"numberOfBytes": "32",
								"value": "t_struct(Memberseat)28_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(BoardroomSnapshot)35_storage": {
								"encoding": "inplace",
								"label": "struct Boardroom.BoardroomSnapshot",
								"members": [
									{
										"astId": 30,
										"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
										"label": "time",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 32,
										"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
										"label": "rewardReceived",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 34,
										"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
										"label": "rewardPerShare",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Memberseat)28_storage": {
								"encoding": "inplace",
								"label": "struct Boardroom.Memberseat",
								"members": [
									{
										"astId": 23,
										"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
										"label": "lastSnapshotIndex",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 25,
										"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
										"label": "rewardEarned",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 27,
										"contract": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol:Boardroom",
										"label": "epochTimerStart",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol": {
				"ShareWrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "share",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":134:1155  contract ShareWrapper {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":134:1155  contract ShareWrapper {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa8d5fd65\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":341:430  function totalSupply() public view returns (uint256) {... */\n    tag_3:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":411:423  _totalSupply */\n      sload(0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":341:430  function totalSupply() public view returns (uint256) {... */\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":341:430  function totalSupply() public view returns (uint256) {... */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":792:1153  function withdraw(uint256 amount) public virtual {... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":436:544  function balanceOf(address account) public view returns (uint256) {... */\n    tag_5:\n      tag_8\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":493:500  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:528  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":519:537  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":436:544  function balanceOf(address account) public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":550:786  function stake(uint256 amount) public virtual {... */\n    tag_6:\n      tag_12\n      tag_22\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":227:246  IERC20 public share */\n    tag_7:\n      sload(0x00)\n      tag_24\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_24:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":851:883   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":833:884   */\n      dup2\n      mstore\n        /* \"#utility.yul\":821:823   */\n      0x20\n        /* \"#utility.yul\":806:824   */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":227:246  IERC20 public share */\n      tag_10\n        /* \"#utility.yul\":672:890   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":792:1153  function withdraw(uint256 amount) public virtual {... */\n    tag_15:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":883:893  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":851:870  uint256 memberShare */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":873:894  _balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":873:882  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":873:894  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":912:933  memberShare >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":904:992  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1097:1099   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":904:992  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1079:1100   */\n      mstore\n        /* \"#utility.yul\":1136:1138   */\n      0x36\n        /* \"#utility.yul\":1116:1134   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1109:1139   */\n      mstore\n        /* \"#utility.yul\":1175:1209   */\n      0x426f617264726f6f6d3a20776974686472617720726571756573742067726561\n        /* \"#utility.yul\":1155:1173   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1148:1210   */\n      mstore\n      shl(0x52, 0x1d195c881d1a185b881cdd185ad95908185b5bdd5b9d)\n        /* \"#utility.yul\":1226:1244   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1219:1271   */\n      mstore\n        /* \"#utility.yul\":1288:1307   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":904:992  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1017:1029  _totalSupply */\n      sload(0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1017:1041  _totalSupply.sub(amount) */\n      tag_33\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1034:1040  amount */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1017:1033  _totalSupply.sub */\n      tag_34\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1017:1041  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_33:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1002:1014  _totalSupply */\n      0x01\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1002:1041  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1075:1098  memberShare.sub(amount) */\n      tag_35\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1075:1086  memberShare */\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1091:1097  amount */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1075:1090  memberShare.sub */\n      tag_34\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1075:1098  memberShare.sub(amount) */\n      jump\t// in\n    tag_35:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1061:1071  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1051:1072  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1051:1060  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1051:1072  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1051:1098  _balances[msg.sender] = memberShare.sub(amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1108:1113  share */\n      swap1\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1108:1146  share.safeTransfer(msg.sender, amount) */\n      tag_36\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1108:1113  share */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1139:1145  amount */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1108:1126  share.safeTransfer */\n      tag_37\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":1108:1146  share.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_36:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":841:1153  {... */\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":792:1153  function withdraw(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":550:786  function stake(uint256 amount) public virtual {... */\n    tag_23:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":621:633  _totalSupply */\n      sload(0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":621:645  _totalSupply.add(amount) */\n      tag_40\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":638:644  amount */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":621:637  _totalSupply.add */\n      tag_41\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":621:645  _totalSupply.add(amount) */\n      jump\t// in\n    tag_40:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":606:618  _totalSupply */\n      0x01\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":606:645  _totalSupply = _totalSupply.add(amount) */\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":689:699  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:700  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:688  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:700  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:712  _balances[msg.sender].add(amount) */\n      tag_42\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":705:711  amount */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:704  _balances[msg.sender].add */\n      tag_41\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":679:712  _balances[msg.sender].add(amount) */\n      jump\t// in\n    tag_42:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":665:675  msg.sender */\n      caller\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":655:676  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":655:664  _balances */\n      0x02\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":655:676  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":655:712  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:727  share */\n      swap1\n      sload\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:779  share.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_43\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:727  share */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":765:769  this */\n      address\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":772:778  amount */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:744  share.safeTransferFrom */\n      tag_44\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":722:779  share.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_43:\n        /* \"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":550:786  function stake(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3050:3146  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_34:\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3108:3115  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3134:3139  a - b */\n      tag_46\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3138:3139  b */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3134:3135  a */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3134:3139  a - b */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3127:3139  return a - b */\n      swap4\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":3050:3146  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":652:827  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_37:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1772:1804   */\n      dup4\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1754:1805   */\n      mstore\n        /* \"#utility.yul\":1821:1839   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":1814:1848   */\n      dup3\n      swap1\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":734:820  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_49\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":754:759  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":784:807  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":1727:1745   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_50:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":734:753  _callOptionalReturn */\n      tag_52\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":734:820  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_49:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":652:827  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2683:2779  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_41:\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2741:2748  uint256 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2767:2772  a + b */\n      tag_46\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2771:2772  b */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2767:2768  a */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":2767:2772  a + b */\n      tag_55\n      jump\t// in\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":833:1036  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_44:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2250:2265   */\n      dup1\n      dup6\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2232:2266   */\n      mstore\n        /* \"#utility.yul\":2302:2317   */\n      dup4\n      and\n        /* \"#utility.yul\":2282:2300   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2275:2318   */\n      mstore\n        /* \"#utility.yul\":2334:2352   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":2327:2361   */\n      dup3\n      swap1\n      mstore\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":933:1029  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_57\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":953:958  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":983:1010  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":2167:2185   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_50\n        /* \"#utility.yul\":1992:2367   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":933:1029  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_57:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":833:1036  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3000:3706  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_52:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3419:3442  bytes memory returndata */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_61\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3473:3477  data */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3453:3458  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3445:3472  address(token).functionCall */\n      and\n      tag_62\n      swap1\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3528:3545  returndata.length */\n      dup1\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3419:3514  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3528:3549  returndata.length > 0 */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3524:3700  if (returndata.length > 0) {... */\n      tag_49\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3623:3633  returndata */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3612:3642  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2856:2858   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2838:2859   */\n      mstore\n        /* \"#utility.yul\":2895:2897   */\n      0x2a\n        /* \"#utility.yul\":2875:2893   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2868:2898   */\n      mstore\n        /* \"#utility.yul\":2934:2968   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":2914:2932   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2907:2969   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":2985:3003   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2978:3018   */\n      mstore\n        /* \"#utility.yul\":3035:3054   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_31\n        /* \"#utility.yul\":2654:3060   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4041:4264  function functionCall(... */\n    tag_62:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4174:4186  bytes memory */\n      0x60\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4205:4257  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_70\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4227:4233  target */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4235:4239  data */\n      dup5\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4241:4242  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4244:4256  errorMessage */\n      dup6\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4205:4226  functionCallWithValue */\n      tag_71\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4205:4257  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_70:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4198:4257  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":4041:4264  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5098:5544  function functionCallWithValue(... */\n    tag_71:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5263:5275  bytes memory */\n      0x60\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5320:5325  value */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5295:5316  address(this).balance */\n      selfbalance\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5295:5325  address(this).balance >= value */\n      lt\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5287:5368  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3267:3269   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5287:5368  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3249:3270   */\n      mstore\n        /* \"#utility.yul\":3306:3308   */\n      0x26\n        /* \"#utility.yul\":3286:3304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3279:3309   */\n      mstore\n        /* \"#utility.yul\":3345:3379   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":3325:3343   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3318:3380   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":3396:3414   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3389:3425   */\n      mstore\n        /* \"#utility.yul\":3442:3461   */\n      0x84\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5287:5368  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_31\n        /* \"#utility.yul\":3065:3467   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5287:5368  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_73:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5379:5391  bool success */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5393:5416  bytes memory returndata */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5420:5426  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5420:5431  target.call */\n      and\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5439:5444  value */\n      dup6\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5446:5450  data */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5420:5451  target.call{value: value}(data) */\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_80\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_79)\n    tag_80:\n      0x60\n      swap2\n      pop\n    tag_79:\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5378:5451  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5468:5537  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_81\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5495:5501  target */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5503:5510  success */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5512:5522  returndata */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5524:5536  errorMessage */\n      dup8\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5468:5494  verifyCallResultFromTarget */\n      tag_82\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5468:5537  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_81:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5461:5537  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":5098:5544  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7604:8232  function verifyCallResultFromTarget(... */\n    tag_82:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7784:7796  bytes memory */\n      0x60\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7812:7819  success */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7808:8226  if (success) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7839:7849  returndata */\n      dup3\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7839:7856  returndata.length */\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7860:7861  0 */\n      0x00\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7839:7861  returndata.length == 0 */\n      sub\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7835:8121  if (returndata.length == 0) {... */\n      tag_88\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":1634:1653  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4198:4219   */\n      mstore\n        /* \"#utility.yul\":4255:4257   */\n      0x1d\n        /* \"#utility.yul\":4235:4253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4228:4258   */\n      mstore\n        /* \"#utility.yul\":4294:4325   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":4274:4292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4267:4326   */\n      mstore\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      tag_31\n        /* \"#utility.yul\":4014:4367   */\n      jump\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n    tag_88:\n      pop\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8141:8151  returndata */\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8134:8151  return returndata */\n      jump(tag_70)\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":7808:8226  if (success) {... */\n    tag_84:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8182:8215  _revert(returndata, errorMessage) */\n      tag_70\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8190:8200  returndata */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8202:8214  errorMessage */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8913:8930  returndata.length */\n      dup2\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8913:8934  returndata.length > 0 */\n      iszero\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8909:9288  if (returndata.length > 0) {... */\n      tag_96\n      jumpi\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9141:9151  returndata */\n      dup2\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9135:9152  mload(returndata) */\n      mload\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9197:9212  returndata_size */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9184:9194  returndata */\n      dup4\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9180:9182  32 */\n      0x20\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9176:9195  add(32, returndata) */\n      add\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9169:9213  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":8909:9288  if (returndata.length > 0) {... */\n    tag_96:\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9264:9276  errorMessage */\n      dup1\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":9257:9277  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n        /* \"#utility.yul\":196:376   */\n    tag_14:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_105:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:667   */\n    tag_18:\n        /* \"#utility.yul\":440:446   */\n      0x00\n        /* \"#utility.yul\":493:495   */\n      0x20\n        /* \"#utility.yul\":481:490   */\n      dup3\n        /* \"#utility.yul\":472:479   */\n      dup5\n        /* \"#utility.yul\":468:491   */\n      sub\n        /* \"#utility.yul\":464:496   */\n      slt\n        /* \"#utility.yul\":461:513   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":509:510   */\n      0x00\n        /* \"#utility.yul\":506:507   */\n      dup1\n        /* \"#utility.yul\":499:511   */\n      revert\n        /* \"#utility.yul\":461:513   */\n    tag_107:\n        /* \"#utility.yul\":535:558   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":587:618   */\n      dup2\n      and\n        /* \"#utility.yul\":577:619   */\n      dup2\n      eq\n        /* \"#utility.yul\":567:637   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":633:634   */\n      0x00\n        /* \"#utility.yul\":630:631   */\n      dup1\n        /* \"#utility.yul\":623:635   */\n      revert\n        /* \"#utility.yul\":1318:1445   */\n    tag_100:\n        /* \"#utility.yul\":1379:1389   */\n      0x4e487b71\n        /* \"#utility.yul\":1374:1377   */\n      0xe0\n        /* \"#utility.yul\":1370:1390   */\n      shl\n        /* \"#utility.yul\":1367:1368   */\n      0x00\n        /* \"#utility.yul\":1360:1391   */\n      mstore\n        /* \"#utility.yul\":1410:1414   */\n      0x11\n        /* \"#utility.yul\":1407:1408   */\n      0x04\n        /* \"#utility.yul\":1400:1415   */\n      mstore\n        /* \"#utility.yul\":1434:1438   */\n      0x24\n        /* \"#utility.yul\":1431:1432   */\n      0x00\n        /* \"#utility.yul\":1424:1439   */\n      revert\n        /* \"#utility.yul\":1450:1575   */\n    tag_47:\n        /* \"#utility.yul\":1490:1494   */\n      0x00\n        /* \"#utility.yul\":1518:1519   */\n      dup3\n        /* \"#utility.yul\":1515:1516   */\n      dup3\n        /* \"#utility.yul\":1512:1520   */\n      lt\n        /* \"#utility.yul\":1509:1543   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1523:1541   */\n      tag_114\n      tag_100\n      jump\t// in\n    tag_114:\n      pop\n        /* \"#utility.yul\":1560:1569   */\n      sub\n      swap1\n        /* \"#utility.yul\":1450:1575   */\n      jump\t// out\n        /* \"#utility.yul\":1859:1987   */\n    tag_55:\n        /* \"#utility.yul\":1899:1902   */\n      0x00\n        /* \"#utility.yul\":1930:1931   */\n      dup3\n        /* \"#utility.yul\":1926:1932   */\n      not\n        /* \"#utility.yul\":1923:1924   */\n      dup3\n        /* \"#utility.yul\":1920:1933   */\n      gt\n        /* \"#utility.yul\":1917:1956   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":1936:1954   */\n      tag_118\n      tag_100\n      jump\t// in\n    tag_118:\n      pop\n        /* \"#utility.yul\":1972:1981   */\n      add\n      swap1\n        /* \"#utility.yul\":1859:1987   */\n      jump\t// out\n        /* \"#utility.yul\":2372:2649   */\n    tag_65:\n        /* \"#utility.yul\":2439:2445   */\n      0x00\n        /* \"#utility.yul\":2492:2494   */\n      0x20\n        /* \"#utility.yul\":2480:2489   */\n      dup3\n        /* \"#utility.yul\":2471:2478   */\n      dup5\n        /* \"#utility.yul\":2467:2490   */\n      sub\n        /* \"#utility.yul\":2463:2495   */\n      slt\n        /* \"#utility.yul\":2460:2512   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":2508:2509   */\n      0x00\n        /* \"#utility.yul\":2505:2506   */\n      dup1\n        /* \"#utility.yul\":2498:2510   */\n      revert\n        /* \"#utility.yul\":2460:2512   */\n    tag_121:\n        /* \"#utility.yul\":2540:2549   */\n      dup2\n        /* \"#utility.yul\":2534:2550   */\n      mload\n        /* \"#utility.yul\":2593:2598   */\n      dup1\n        /* \"#utility.yul\":2586:2599   */\n      iszero\n        /* \"#utility.yul\":2579:2600   */\n      iszero\n        /* \"#utility.yul\":2572:2577   */\n      dup2\n        /* \"#utility.yul\":2569:2601   */\n      eq\n        /* \"#utility.yul\":2559:2619   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":2615:2616   */\n      0x00\n        /* \"#utility.yul\":2612:2613   */\n      dup1\n        /* \"#utility.yul\":2605:2617   */\n      revert\n        /* \"#utility.yul\":3472:3730   */\n    tag_101:\n        /* \"#utility.yul\":3544:3545   */\n      0x00\n        /* \"#utility.yul\":3554:3667   */\n    tag_126:\n        /* \"#utility.yul\":3568:3574   */\n      dup4\n        /* \"#utility.yul\":3565:3566   */\n      dup2\n        /* \"#utility.yul\":3562:3575   */\n      lt\n        /* \"#utility.yul\":3554:3667   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":3644:3655   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3638:3656   */\n      mload\n        /* \"#utility.yul\":3625:3636   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3618:3657   */\n      mstore\n        /* \"#utility.yul\":3590:3592   */\n      0x20\n        /* \"#utility.yul\":3583:3593   */\n      add\n        /* \"#utility.yul\":3554:3667   */\n      jump(tag_126)\n    tag_128:\n        /* \"#utility.yul\":3685:3691   */\n      dup4\n        /* \"#utility.yul\":3682:3683   */\n      dup2\n        /* \"#utility.yul\":3679:3692   */\n      gt\n        /* \"#utility.yul\":3676:3724   */\n      iszero\n      tag_57\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":3720:3721   */\n      0x00\n        /* \"#utility.yul\":3702:3718   */\n      swap2\n      add\n        /* \"#utility.yul\":3695:3722   */\n      mstore\n        /* \"#utility.yul\":3472:3730   */\n      jump\t// out\n        /* \"#utility.yul\":3735:4009   */\n    tag_77:\n        /* \"#utility.yul\":3864:3867   */\n      0x00\n        /* \"#utility.yul\":3902:3908   */\n      dup3\n        /* \"#utility.yul\":3896:3909   */\n      mload\n        /* \"#utility.yul\":3918:3971   */\n      tag_131\n        /* \"#utility.yul\":3964:3970   */\n      dup2\n        /* \"#utility.yul\":3959:3962   */\n      dup5\n        /* \"#utility.yul\":3952:3956   */\n      0x20\n        /* \"#utility.yul\":3944:3950   */\n      dup8\n        /* \"#utility.yul\":3940:3957   */\n      add\n        /* \"#utility.yul\":3918:3971   */\n      tag_101\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3987:4003   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3735:4009   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4372:4755   */\n    tag_99:\n        /* \"#utility.yul\":4521:4523   */\n      0x20\n        /* \"#utility.yul\":4510:4519   */\n      dup2\n        /* \"#utility.yul\":4503:4524   */\n      mstore\n        /* \"#utility.yul\":4484:4488   */\n      0x00\n        /* \"#utility.yul\":4553:4559   */\n      dup3\n        /* \"#utility.yul\":4547:4560   */\n      mload\n        /* \"#utility.yul\":4596:4602   */\n      dup1\n        /* \"#utility.yul\":4591:4593   */\n      0x20\n        /* \"#utility.yul\":4580:4589   */\n      dup5\n        /* \"#utility.yul\":4576:4594   */\n      add\n        /* \"#utility.yul\":4569:4603   */\n      mstore\n        /* \"#utility.yul\":4612:4678   */\n      tag_134\n        /* \"#utility.yul\":4671:4677   */\n      dup2\n        /* \"#utility.yul\":4666:4668   */\n      0x40\n        /* \"#utility.yul\":4655:4664   */\n      dup6\n        /* \"#utility.yul\":4651:4669   */\n      add\n        /* \"#utility.yul\":4646:4648   */\n      0x20\n        /* \"#utility.yul\":4638:4644   */\n      dup8\n        /* \"#utility.yul\":4634:4649   */\n      add\n        /* \"#utility.yul\":4612:4678   */\n      tag_101\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4739:4741   */\n      0x1f\n        /* \"#utility.yul\":4718:4733   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4714:4743   */\n      and\n        /* \"#utility.yul\":4699:4744   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4746:4748   */\n      0x40\n        /* \"#utility.yul\":4695:4749   */\n      add\n      swap3\n        /* \"#utility.yul\":4372:4755   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d8ce2afce8a828840f2e6a30a3fd06da8a9819ec83c1932d65ff488e3371b83864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610696806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318160ddd1461005c5780632e1a7d4d1461007357806370a0823114610088578063a694fc3a146100b1578063a8d5fd65146100c4575b600080fd5b6001545b6040519081526020015b60405180910390f35b61008661008136600461053c565b6100ef565b005b610060610096366004610555565b6001600160a01b031660009081526002602052604090205490565b6100866100bf36600461053c565b6101bc565b6000546100d7906001600160a01b031681565b6040516001600160a01b03909116815260200161006a565b33600090815260026020526040902054818110156101735760405162461bcd60e51b815260206004820152603660248201527f426f617264726f6f6d3a207769746864726177207265717565737420677265616044820152751d195c881d1a185b881cdd185ad95908185b5bdd5b9d60521b60648201526084015b60405180910390fd5b6001546101809083610215565b60015561018d8183610215565b3360008181526002602052604081209290925590546101b8916001600160a01b039091169084610228565b5050565b6001546101c99082610290565b600155336000908152600260205260409020546101e69082610290565b336000818152600260205260408120929092559054610212916001600160a01b0390911690308461029c565b50565b60006102218284610594565b9392505050565b6040516001600160a01b03831660248201526044810182905261028b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102da565b505050565b600061022182846105ab565b6040516001600160a01b03808516602483015283166044820152606481018290526102d49085906323b872dd60e01b90608401610254565b50505050565b600061032f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ac9092919063ffffffff16565b80519091501561028b578080602001905181019061034d91906105c3565b61028b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161016a565b60606103bb84846000856103c3565b949350505050565b6060824710156104245760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161016a565b600080866001600160a01b031685876040516104409190610611565b60006040518083038185875af1925050503d806000811461047d576040519150601f19603f3d011682016040523d82523d6000602084013e610482565b606091505b50915091506104938783838761049e565b979650505050505050565b6060831561050d578251600003610506576001600160a01b0385163b6105065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161016a565b50816103bb565b6103bb83838151156105225781518083602001fd5b8060405162461bcd60e51b815260040161016a919061062d565b60006020828403121561054e57600080fd5b5035919050565b60006020828403121561056757600080fd5b81356001600160a01b038116811461022157600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156105a6576105a661057e565b500390565b600082198211156105be576105be61057e565b500190565b6000602082840312156105d557600080fd5b8151801515811461022157600080fd5b60005b838110156106005781810151838201526020016105e8565b838111156102d45750506000910152565b600082516106238184602087016105e5565b9190910192915050565b602081526000825180602084015261064c8160408501602087016105e5565b601f01601f1916919091016040019291505056fea2646970667358221220d8ce2afce8a828840f2e6a30a3fd06da8a9819ec83c1932d65ff488e3371b83864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x696 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xA8D5FD65 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0x81 CALLDATASIZE PUSH1 0x4 PUSH2 0x53C JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0x555 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x86 PUSH2 0xBF CALLDATASIZE PUSH1 0x4 PUSH2 0x53C JUMP JUMPDEST PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20776974686472617720726571756573742067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D195C881D1A185B881CDD185AD95908185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x180 SWAP1 DUP4 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x18D DUP2 DUP4 PUSH2 0x215 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x1B8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0x228 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1C9 SWAP1 DUP3 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E6 SWAP1 DUP3 PUSH2 0x290 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x212 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP5 PUSH2 0x29C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221 DUP3 DUP5 PUSH2 0x594 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x28B SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221 DUP3 DUP5 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2D4 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x254 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x28B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3BB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3C3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x482 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x493 DUP8 DUP4 DUP4 DUP8 PUSH2 0x49E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x50D JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x506 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x16A JUMP JUMPDEST POP DUP2 PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x3BB DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x522 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5A6 JUMPI PUSH2 0x5A6 PUSH2 0x57E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x5BE PUSH2 0x57E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x600 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5E8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2D4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x623 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x64C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xCE 0x2A 0xFC 0xE8 0xA8 0x28 DUP5 0xF 0x2E PUSH11 0x30A3FD06DA8A9819EC83C1 SWAP4 0x2D PUSH6 0xFF488E3371B8 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "134:1021:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_2307": {
									"entryPoint": 730,
									"id": 2307,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_1500": {
									"entryPoint": null,
									"id": 1500,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1794": {
									"entryPoint": 656,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1087": {
									"entryPoint": null,
									"id": 1087,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_1325": {
									"entryPoint": 963,
									"id": 1325,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1261": {
									"entryPoint": 940,
									"id": 1261,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_1189": {
									"entryPoint": null,
									"id": 1189,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2141": {
									"entryPoint": 668,
									"id": 2141,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_2115": {
									"entryPoint": 552,
									"id": 2115,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@share_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1125": {
									"entryPoint": 444,
									"id": 1125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_1809": {
									"entryPoint": 533,
									"id": 1809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_1075": {
									"entryPoint": null,
									"id": 1075,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_1456": {
									"entryPoint": 1182,
									"id": 1456,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_1170": {
									"entryPoint": 239,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$2083__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4757:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:9",
														"type": ""
													}
												],
												"src": "14:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:9"
															},
															"nodeType": "YulIf",
															"src": "276:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:9",
														"type": ""
													}
												],
												"src": "196:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "451:216:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "497:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "509:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "499:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "499:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "499:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "472:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "481:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "468:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "493:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:32:9"
															},
															"nodeType": "YulIf",
															"src": "461:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "522:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "548:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "535:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "526:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "621:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "630:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "633:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "580:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "591:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "606:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "611:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "602:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "602:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "615:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "598:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "598:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "587:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "587:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "577:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:50:9"
															},
															"nodeType": "YulIf",
															"src": "567:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "646:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "656:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "417:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "428:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "440:6:9",
														"type": ""
													}
												],
												"src": "381:286:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "788:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "798:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "810:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "821:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "806:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "798:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "840:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "855:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "871:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "876:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "867:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "867:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "880:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "863:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "863:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "851:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "851:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "833:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$2083__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "757:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "768:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "779:4:9",
														"type": ""
													}
												],
												"src": "672:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1069:244:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1086:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1079:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1120:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1131:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1116:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1136:2:9",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1109:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1159:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1170:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1155:18:9"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a20776974686472617720726571756573742067726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1175:34:9",
																		"type": "",
																		"value": "Boardroom: withdraw request grea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1148:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:18:9"
																	},
																	{
																		"hexValue": "746572207468616e207374616b656420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1246:24:9",
																		"type": "",
																		"value": "ter than staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1219:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1219:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1219:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1280:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1292:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1288:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1288:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1280:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1046:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1060:4:9",
														"type": ""
													}
												],
												"src": "895:418:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1350:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1367:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1374:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1379:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1370:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1360:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1407:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1410:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1400:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1400:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1424:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1424:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1318:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1499:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1521:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1523:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1523:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1523:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1515:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1518:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1512:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:8:9"
															},
															"nodeType": "YulIf",
															"src": "1509:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1552:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1564:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1567:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1560:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1552:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1481:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1484:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1490:4:9",
														"type": ""
													}
												],
												"src": "1450:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1731:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1742:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1719:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1797:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1788:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1788:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1801:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1784:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1784:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1772:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1772:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1754:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1825:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1836:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1821:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1821:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1841:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1814:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1670:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1681:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1689:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1700:4:9",
														"type": ""
													}
												],
												"src": "1580:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1907:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1934:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1936:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1936:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1936:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1923:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1930:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1926:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1926:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1920:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:13:9"
															},
															"nodeType": "YulIf",
															"src": "1917:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1965:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1976:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1979:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1972:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1965:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1890:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1893:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1899:3:9",
														"type": ""
													}
												],
												"src": "1859:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2149:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2159:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2171:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2167:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2159:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2194:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2212:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2217:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2208:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2208:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2221:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2204:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2198:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2239:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2254:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2262:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2250:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2250:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2232:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2286:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2297:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2282:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2306:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2314:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2302:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2275:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2275:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2338:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2349:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2334:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2354:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2327:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2327:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2102:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2113:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2121:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2129:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2140:4:9",
														"type": ""
													}
												],
												"src": "1992:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2450:199:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2496:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2505:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2508:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2498:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2498:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2498:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2471:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2467:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2467:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2492:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2463:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:32:9"
															},
															"nodeType": "YulIf",
															"src": "2460:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2521:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2540:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2534:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2525:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2603:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2612:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2615:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2605:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2605:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2605:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2572:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2593:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2586:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2586:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2579:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2579:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2569:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:40:9"
															},
															"nodeType": "YulIf",
															"src": "2559:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2638:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2628:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2416:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2427:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2439:6:9",
														"type": ""
													}
												],
												"src": "2372:277:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2845:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2856:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2838:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2838:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2879:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2890:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2875:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2895:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2868:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2868:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2918:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2929:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2914:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2914:18:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2934:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2907:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2907:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2989:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3000:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:18:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3005:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2978:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2978:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2978:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3027:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3039:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3050:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3035:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3035:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3027:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2805:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2819:4:9",
														"type": ""
													}
												],
												"src": "2654:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3239:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3256:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3267:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3249:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3249:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3249:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3290:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3301:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3306:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3279:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3329:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:18:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3345:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3400:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3411:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3396:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3396:18:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3416:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3434:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3446:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3442:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3442:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3434:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3216:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3230:4:9",
														"type": ""
													}
												],
												"src": "3065:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3525:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3535:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3544:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3539:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3604:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3629:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3634:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3625:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3625:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3648:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3653:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3644:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3644:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3638:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3638:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3618:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3618:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3618:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3565:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3568:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3562:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3576:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3578:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3587:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3590:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3583:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3583:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3578:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3558:3:9",
																"statements": []
															},
															"src": "3554:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3693:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3706:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3711:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3702:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3702:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3720:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3695:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3695:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3695:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3682:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3685:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3679:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:13:9"
															},
															"nodeType": "YulIf",
															"src": "3676:48:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3503:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3508:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3513:6:9",
														"type": ""
													}
												],
												"src": "3472:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3872:137:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3882:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3902:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3896:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3896:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3886:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3944:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3940:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3959:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3964:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3918:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3918:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3980:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3991:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3996:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3987:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3980:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3848:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3853:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3864:3:9",
														"type": ""
													}
												],
												"src": "3735:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4188:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4205:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4198:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4198:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4239:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4250:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4235:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4255:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4228:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4228:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4228:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4278:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4289:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4274:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4294:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4267:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4335:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4347:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4358:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4343:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4335:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4165:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4179:4:9",
														"type": ""
													}
												],
												"src": "4014:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:262:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4510:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4521:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4503:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4503:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4503:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4533:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4553:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4547:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4537:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4580:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4591:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4576:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4576:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4596:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4569:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4569:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4569:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4638:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4646:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4634:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4655:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4666:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4651:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4651:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4671:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4612:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4612:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4687:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4703:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4722:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4730:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4718:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4718:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4739:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4735:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4735:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4714:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4714:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4699:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4699:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4746:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4695:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4687:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4462:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4473:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4484:4:9",
														"type": ""
													}
												],
												"src": "4372:383:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2083__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Boardroom: withdraw request grea\")\n        mstore(add(headStart, 96), \"ter than staked amount\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806318160ddd1461005c5780632e1a7d4d1461007357806370a0823114610088578063a694fc3a146100b1578063a8d5fd65146100c4575b600080fd5b6001545b6040519081526020015b60405180910390f35b61008661008136600461053c565b6100ef565b005b610060610096366004610555565b6001600160a01b031660009081526002602052604090205490565b6100866100bf36600461053c565b6101bc565b6000546100d7906001600160a01b031681565b6040516001600160a01b03909116815260200161006a565b33600090815260026020526040902054818110156101735760405162461bcd60e51b815260206004820152603660248201527f426f617264726f6f6d3a207769746864726177207265717565737420677265616044820152751d195c881d1a185b881cdd185ad95908185b5bdd5b9d60521b60648201526084015b60405180910390fd5b6001546101809083610215565b60015561018d8183610215565b3360008181526002602052604081209290925590546101b8916001600160a01b039091169084610228565b5050565b6001546101c99082610290565b600155336000908152600260205260409020546101e69082610290565b336000818152600260205260408120929092559054610212916001600160a01b0390911690308461029c565b50565b60006102218284610594565b9392505050565b6040516001600160a01b03831660248201526044810182905261028b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102da565b505050565b600061022182846105ab565b6040516001600160a01b03808516602483015283166044820152606481018290526102d49085906323b872dd60e01b90608401610254565b50505050565b600061032f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103ac9092919063ffffffff16565b80519091501561028b578080602001905181019061034d91906105c3565b61028b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161016a565b60606103bb84846000856103c3565b949350505050565b6060824710156104245760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161016a565b600080866001600160a01b031685876040516104409190610611565b60006040518083038185875af1925050503d806000811461047d576040519150601f19603f3d011682016040523d82523d6000602084013e610482565b606091505b50915091506104938783838761049e565b979650505050505050565b6060831561050d578251600003610506576001600160a01b0385163b6105065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161016a565b50816103bb565b6103bb83838151156105225781518083602001fd5b8060405162461bcd60e51b815260040161016a919061062d565b60006020828403121561054e57600080fd5b5035919050565b60006020828403121561056757600080fd5b81356001600160a01b038116811461022157600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156105a6576105a661057e565b500390565b600082198211156105be576105be61057e565b500190565b6000602082840312156105d557600080fd5b8151801515811461022157600080fd5b60005b838110156106005781810151838201526020016105e8565b838111156102d45750506000910152565b600082516106238184602087016105e5565b9190910192915050565b602081526000825180602084015261064c8160408501602087016105e5565b601f01601f1916919091016040019291505056fea2646970667358221220d8ce2afce8a828840f2e6a30a3fd06da8a9819ec83c1932d65ff488e3371b83864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xA8D5FD65 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0x81 CALLDATASIZE PUSH1 0x4 PUSH2 0x53C JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0x555 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x86 PUSH2 0xBF CALLDATASIZE PUSH1 0x4 PUSH2 0x53C JUMP JUMPDEST PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20776974686472617720726571756573742067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D195C881D1A185B881CDD185AD95908185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x180 SWAP1 DUP4 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH2 0x18D DUP2 DUP4 PUSH2 0x215 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x1B8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0x228 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1C9 SWAP1 DUP3 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1E6 SWAP1 DUP3 PUSH2 0x290 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x212 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP5 PUSH2 0x29C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221 DUP3 DUP5 PUSH2 0x594 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x28B SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221 DUP3 DUP5 PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2D4 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x254 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x28B JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3BB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3C3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x482 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x493 DUP8 DUP4 DUP4 DUP8 PUSH2 0x49E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x50D JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x506 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x16A JUMP JUMPDEST POP DUP2 PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x3BB DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x522 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5A6 JUMPI PUSH2 0x5A6 PUSH2 0x57E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x5BE PUSH2 0x57E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x600 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5E8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2D4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x623 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x64C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xCE 0x2A 0xFC 0xE8 0xA8 0x28 DUP5 0xF 0x2E PUSH11 0x30A3FD06DA8A9819EC83C1 SWAP4 0x2D PUSH6 0xFF488E3371B8 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "134:1021:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;341:89;411:12;;341:89;;;160:25:9;;;148:2;133:18;341:89:1;;;;;;;;792:361;;;;;;:::i;:::-;;:::i;:::-;;436:108;;;;;;:::i;:::-;-1:-1:-1;;;;;519:18:1;493:7;519:18;;;:9;:18;;;;;;;436:108;550:236;;;;;;:::i;:::-;;:::i;227:19::-;;;;;-1:-1:-1;;;;;227:19:1;;;;;;-1:-1:-1;;;;;851:32:9;;;833:51;;821:2;806:18;227:19:1;672:218:9;792:361:1;883:10;851:19;873:21;;;:9;:21;;;;;;912;;;;904:88;;;;-1:-1:-1;;;904:88:1;;1097:2:9;904:88:1;;;1079:21:9;1136:2;1116:18;;;1109:30;1175:34;1155:18;;;1148:62;-1:-1:-1;;;1226:18:9;;;1219:52;1288:19;;904:88:1;;;;;;;;;1017:12;;:24;;1034:6;1017:16;:24::i;:::-;1002:12;:39;1075:23;:11;1091:6;1075:15;:23::i;:::-;1061:10;1051:21;;;;:9;:21;;;;;:47;;;;1108:5;;:38;;-1:-1:-1;;;;;1108:5:1;;;;1139:6;1108:18;:38::i;:::-;841:312;792:361;:::o;550:236::-;621:12;;:24;;638:6;621:16;:24::i;:::-;606:12;:39;689:10;679:21;;;;:9;:21;;;;;;:33;;705:6;679:25;:33::i;:::-;665:10;655:21;;;;:9;:21;;;;;:57;;;;722:5;;:57;;-1:-1:-1;;;;;722:5:1;;;;765:4;772:6;722:22;:57::i;:::-;550:236;:::o;3050:96:5:-;3108:7;3134:5;3138:1;3134;:5;:::i;:::-;3127:12;3050:96;-1:-1:-1;;;3050:96:5:o;652:175:8:-;761:58;;-1:-1:-1;;;;;1772:32:9;;761:58:8;;;1754:51:9;1821:18;;;1814:34;;;734:86:8;;754:5;;-1:-1:-1;;;784:23:8;1727:18:9;;761:58:8;;;;-1:-1:-1;;761:58:8;;;;;;;;;;;;;;-1:-1:-1;;;;;761:58:8;-1:-1:-1;;;;;;761:58:8;;;;;;;;;;734:19;:86::i;:::-;652:175;;;:::o;2683:96:5:-;2741:7;2767:5;2771:1;2767;:5;:::i;833:203:8:-;960:68;;-1:-1:-1;;;;;2250:15:9;;;960:68:8;;;2232:34:9;2302:15;;2282:18;;;2275:43;2334:18;;;2327:34;;;933:96:8;;953:5;;-1:-1:-1;;;983:27:8;2167:18:9;;960:68:8;1992:375:9;933:96:8;833:203;;;;:::o;3000:706::-;3419:23;3445:69;3473:4;3445:69;;;;;;;;;;;;;;;;;3453:5;-1:-1:-1;;;;;3445:27:8;;;:69;;;;;:::i;:::-;3528:17;;3419:95;;-1:-1:-1;3528:21:8;3524:176;;3623:10;3612:30;;;;;;;;;;;;:::i;:::-;3604:85;;;;-1:-1:-1;;;3604:85:8;;2856:2:9;3604:85:8;;;2838:21:9;2895:2;2875:18;;;2868:30;2934:34;2914:18;;;2907:62;-1:-1:-1;;;2985:18:9;;;2978:40;3035:19;;3604:85:8;2654:406:9;4041:223:2;4174:12;4205:52;4227:6;4235:4;4241:1;4244:12;4205:21;:52::i;:::-;4198:59;4041:223;-1:-1:-1;;;;4041:223:2:o;5098:446::-;5263:12;5320:5;5295:21;:30;;5287:81;;;;-1:-1:-1;;;5287:81:2;;3267:2:9;5287:81:2;;;3249:21:9;3306:2;3286:18;;;3279:30;3345:34;3325:18;;;3318:62;-1:-1:-1;;;3396:18:9;;;3389:36;3442:19;;5287:81:2;3065:402:9;5287:81:2;5379:12;5393:23;5420:6;-1:-1:-1;;;;;5420:11:2;5439:5;5446:4;5420:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5378:73;;;;5468:69;5495:6;5503:7;5512:10;5524:12;5468:26;:69::i;:::-;5461:76;5098:446;-1:-1:-1;;;;;;;5098:446:2:o;7604:628::-;7784:12;7812:7;7808:418;;;7839:10;:17;7860:1;7839:22;7835:286;;-1:-1:-1;;;;;1634:19:2;;;8046:60;;;;-1:-1:-1;;;8046:60:2;;4216:2:9;8046:60:2;;;4198:21:9;4255:2;4235:18;;;4228:30;4294:31;4274:18;;;4267:59;4343:18;;8046:60:2;4014:353:9;8046:60:2;-1:-1:-1;8141:10:2;8134:17;;7808:418;8182:33;8190:10;8202:12;8913:17;;:21;8909:379;;9141:10;9135:17;9197:15;9184:10;9180:2;9176:19;9169:44;8909:379;9264:12;9257:20;;-1:-1:-1;;;9257:20:2;;;;;;;;:::i;196:180:9:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:9;;196:180;-1:-1:-1;196:180:9:o;381:286::-;440:6;493:2;481:9;472:7;468:23;464:32;461:52;;;509:1;506;499:12;461:52;535:23;;-1:-1:-1;;;;;587:31:9;;577:42;;567:70;;633:1;630;623:12;1318:127;1379:10;1374:3;1370:20;1367:1;1360:31;1410:4;1407:1;1400:15;1434:4;1431:1;1424:15;1450:125;1490:4;1518:1;1515;1512:8;1509:34;;;1523:18;;:::i;:::-;-1:-1:-1;1560:9:9;;1450:125::o;1859:128::-;1899:3;1930:1;1926:6;1923:1;1920:13;1917:39;;;1936:18;;:::i;:::-;-1:-1:-1;1972:9:9;;1859:128::o;2372:277::-;2439:6;2492:2;2480:9;2471:7;2467:23;2463:32;2460:52;;;2508:1;2505;2498:12;2460:52;2540:9;2534:16;2593:5;2586:13;2579:21;2572:5;2569:32;2559:60;;2615:1;2612;2605:12;3472:258;3544:1;3554:113;3568:6;3565:1;3562:13;3554:113;;;3644:11;;;3638:18;3625:11;;;3618:39;3590:2;3583:10;3554:113;;;3685:6;3682:1;3679:13;3676:48;;;-1:-1:-1;;3720:1:9;3702:16;;3695:27;3472:258::o;3735:274::-;3864:3;3902:6;3896:13;3918:53;3964:6;3959:3;3952:4;3944:6;3940:17;3918:53;:::i;:::-;3987:16;;;;;3735:274;-1:-1:-1;;3735:274:9:o;4372:383::-;4521:2;4510:9;4503:21;4484:4;4553:6;4547:13;4596:6;4591:2;4580:9;4576:18;4569:34;4612:66;4671:6;4666:2;4655:9;4651:18;4646:2;4638:6;4634:15;4612:66;:::i;:::-;4739:2;4718:15;-1:-1:-1;;4714:29:9;4699:45;;;;4746:2;4695:54;;4372:383;-1:-1:-1;;4372:383:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "337200",
								"executionCost": "374",
								"totalCost": "337574"
							},
							"external": {
								"balanceOf(address)": "2513",
								"share()": "2403",
								"stake(uint256)": "infinite",
								"totalSupply()": "2248",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 1155,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d8ce2afce8a828840f2e6a30a3fd06da8a9819ec83c1932d65ff488e3371b83864736f6c634300080d0033",
									".code": [
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "A694FC3A"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "A8D5FD65"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 1155,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 411,
											"end": 423,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 411,
											"end": 423,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 341,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 430,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 341,
											"end": 430,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 436,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 436,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 436,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 436,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 493,
											"end": 500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 519,
											"end": 537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 436,
											"end": 544,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 550,
											"end": 786,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 851,
											"end": 883,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 833,
											"end": 884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 833,
											"end": 884,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 821,
											"end": 823,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 806,
											"end": 824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 672,
											"end": 890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 893,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 851,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 873,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 873,
											"end": 894,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 912,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 912,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 912,
											"end": 933,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 912,
											"end": 933,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1099,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1136,
											"end": 1138,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1209,
											"name": "PUSH",
											"source": 9,
											"value": "426F617264726F6F6D3A20776974686472617720726571756573742067726561"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D195C881D1A185B881CDD185AD95908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1288,
											"end": 1307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 904,
											"end": 992,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 904,
											"end": 992,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 904,
											"end": 992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1017,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1002,
											"end": 1041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1075,
											"end": 1086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1071,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1072,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1098,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1108,
											"end": 1146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1108,
											"end": 1146,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1108,
											"end": 1146,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1108,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 1153,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 550,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 621,
											"end": 633,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 621,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 621,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 645,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 689,
											"end": 699,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 679,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 679,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 679,
											"end": 700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 679,
											"end": 700,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 679,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 679,
											"end": 712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 705,
											"end": 711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 679,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 679,
											"end": 712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 712,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 679,
											"end": 712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 655,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 655,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 676,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 655,
											"end": 712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 655,
											"end": 712,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 655,
											"end": 712,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 722,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 722,
											"end": 779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 722,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 765,
											"end": 769,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 772,
											"end": 778,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 722,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 722,
											"end": 779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 722,
											"end": 779,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 722,
											"end": 779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3108,
											"end": 3115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3139,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 652,
											"end": 827,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 652,
											"end": 827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1804,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1804,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1754,
											"end": 1805,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1848,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1848,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1848,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 734,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 754,
											"end": 759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 754,
											"end": 759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 761,
											"end": 819,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 734,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 652,
											"end": 827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 652,
											"end": 827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 652,
											"end": 827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 652,
											"end": 827,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2683,
											"end": 2779,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2683,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2250,
											"end": 2265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2265,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2265,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2317,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2317,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 958,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 953,
											"end": 958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 983,
											"end": 1010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1992,
											"end": 2367,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3000,
											"end": 3706,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 3000,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3458,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3528,
											"end": 3549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3524,
											"end": 3700,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3633,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2897,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2898,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2968,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 2969,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2978,
											"end": 3018,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2654,
											"end": 3060,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4174,
											"end": 4186,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4235,
											"end": 4239,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4241,
											"end": 4242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4256,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4257,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5263,
											"end": 5275,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5320,
											"end": 5325,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3270,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3308,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3286,
											"end": 3304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3309,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3379,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 3325,
											"end": 3343,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3325,
											"end": 3343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3425,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3461,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3442,
											"end": 3461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3065,
											"end": 3467,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5379,
											"end": 5391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5416,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5426,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5420,
											"end": 5431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5439,
											"end": 5444,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5512,
											"end": 5522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5536,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5461,
											"end": 5537,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7604,
											"end": 8232,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 7604,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7860,
											"end": 7861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7835,
											"end": 8121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 4235,
											"end": 4253,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4235,
											"end": 4253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 4258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4325,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4267,
											"end": 4326,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4014,
											"end": 4367,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8141,
											"end": 8151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8134,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8134,
											"end": 8151,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8190,
											"end": 8200,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8214,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9141,
											"end": 9151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9135,
											"end": 9152,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9184,
											"end": 9194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9176,
											"end": 9195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9169,
											"end": 9213,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9264,
											"end": 9276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 667,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 381,
											"end": 667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 440,
											"end": 446,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 495,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 481,
											"end": 490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 472,
											"end": 479,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 468,
											"end": 491,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 464,
											"end": 496,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 461,
											"end": 513,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 461,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 509,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 499,
											"end": 511,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 461,
											"end": 513,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 535,
											"end": 558,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 587,
											"end": 618,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 587,
											"end": 618,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 577,
											"end": 619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 577,
											"end": 619,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 567,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 567,
											"end": 637,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 633,
											"end": 634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 623,
											"end": 635,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1445,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1318,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1374,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1370,
											"end": 1390,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1391,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1415,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1434,
											"end": 1438,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1439,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1575,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1450,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1520,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1575,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1859,
											"end": 1987,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1859,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 1981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1981,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1987,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2372,
											"end": 2649,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2372,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2490,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2512,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2460,
											"end": 2512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2510,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2512,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2460,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2534,
											"end": 2550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2593,
											"end": 2598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2586,
											"end": 2599,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2579,
											"end": 2600,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2559,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2559,
											"end": 2619,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3730,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3472,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3544,
											"end": 3545,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3574,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3566,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3636,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3636,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3592,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3593,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3554,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3692,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3724,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3676,
											"end": 3724,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3695,
											"end": 3722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3730,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3735,
											"end": 4009,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3735,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3864,
											"end": 3867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3908,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 3909,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3962,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3956,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 3957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3918,
											"end": 3971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3971,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3918,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4003,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4003,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3735,
											"end": 4009,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 4009,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4372,
											"end": 4755,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4372,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4510,
											"end": 4519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4553,
											"end": 4559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4560,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4602,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4569,
											"end": 4603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4671,
											"end": 4677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4664,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4634,
											"end": 4649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 4612,
											"end": 4678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4678,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4612,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4741,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4718,
											"end": 4733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4714,
											"end": 4743,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4699,
											"end": 4744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4699,
											"end": 4744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4699,
											"end": 4744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4699,
											"end": 4744,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4748,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4695,
											"end": 4749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4695,
											"end": 4749,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4372,
											"end": 4755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4372,
											"end": 4755,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"share()": "a8d5fd65",
							"stake(uint256)": "a694fc3a",
							"totalSupply()": "18160ddd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"share\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":\"ShareWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol\":{\"keccak256\":\"0xb973a553ddb6f647886505e62f76364798b5f293f60e6df471db2b55b928c285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21cada1d547e9631db1eed6bb813f41b3285e57219a3c636df5e5af83a1e9a13\",\"dweb:/ipfs/QmUeB7esyoRs52uVJ4qoVp2vNfjGCEDm1oQounppAbXxL5\"]},\"brownie_projects/bebu_finance/contracts/utils/Address.sol\":{\"keccak256\":\"0x2254ff0365cbc4f80af2433d10890e0d4816c14f38a6e9e0c746f861ad434f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17ecd670c7f9522306389b638a01d0b0e93156ec0e9c2cbe798b091e89474a32\",\"dweb:/ipfs/QmUzZpE98hpS8J4KtqcLxxTzdrP2rKeUWssF5GJA1e3dYw\"]},\"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]},\"brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]},\"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":{\"keccak256\":\"0x593692219f7f58fc3dd89dc0271eaf2b459fd7515bbf53dcdb799bcce79c97b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dcb333da0bda5db19dacbc438f214d8e8408c210605baba683ce4af33ba525d\",\"dweb:/ipfs/QmRjDL9cN4qKGozcoN34EscZZesPqsa9E5qggHRihUZxkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1061,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol:ShareWrapper",
								"label": "share",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)2083"
							},
							{
								"astId": 1063,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol:ShareWrapper",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1067,
								"contract": "brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol:ShareWrapper",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)2083": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/bebu_finance/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":126:9296  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/bebu_finance/contracts/utils/Address.sol\":126:9296  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220686d5b750f0f6a9e8944ae5fe60f12f1e5983a3e049fecc54b06d22dbbcddb8b64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220686d5b750f0f6a9e8944ae5fe60f12f1e5983a3e049fecc54b06d22dbbcddb8b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x6D5B750F0F6A9E8944 0xAE 0x5F 0xE6 0xF SLT CALL 0xE5 SWAP9 GASPRICE RETURNDATACOPY DIV SWAP16 0xEC 0xC5 0x4B MOD 0xD2 0x2D 0xBB 0xCD 0xDB DUP12 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "126:9170:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:9170:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220686d5b750f0f6a9e8944ae5fe60f12f1e5983a3e049fecc54b06d22dbbcddb8b64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x6D5B750F0F6A9E8944 0xAE 0x5F 0xE6 0xF SLT CALL 0xE5 SWAP9 GASPRICE RETURNDATACOPY DIV SWAP16 0xEC 0xC5 0x4B MOD 0xD2 0x2D 0xBB 0xCD 0xDB DUP12 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "126:9170:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220686d5b750f0f6a9e8944ae5fe60f12f1e5983a3e049fecc54b06d22dbbcddb8b64736f6c634300080d0033",
									".code": [
										{
											"begin": 126,
											"end": 9296,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/utils/Address.sol\":{\"keccak256\":\"0x2254ff0365cbc4f80af2433d10890e0d4816c14f38a6e9e0c746f861ad434f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17ecd670c7f9522306389b638a01d0b0e93156ec0e9c2cbe798b091e89474a32\",\"dweb:/ipfs/QmUzZpE98hpS8J4KtqcLxxTzdrP2rKeUWssF5GJA1e3dYw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/bebu_finance/contracts/utils/interfaces/IBasisAsset.sol": {
				"IBasisAsset": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"isOperator()": "4456eda2",
							"mint(address,uint256)": "40c10f19",
							"operator()": "570ca735",
							"transferOperator(address)": "29605e77"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/utils/interfaces/IBasisAsset.sol\":\"IBasisAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/utils/interfaces/IBasisAsset.sol\":{\"keccak256\":\"0x1c4f534f233e5e3aa23d6b5e355d0f13b4935fe56cad587150d4a391489b54b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddef78442dd176100a3a8fc3b6ae70c1d1370cecc7d1103781dad6084b027540\",\"dweb:/ipfs/QmPg5m9y1tNV6CHzDC4kzsdAucjFQHwAXh6Wyo8TghmD6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/bebu_finance/contracts/utils/interfaces/ITreasury.sol": {
				"ITreasury": {
					"abi": [
						{
							"inputs": [],
							"name": "allocateSeigniorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRealtimeTokenIndexPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "share",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "boardroom",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start_time",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextEpochPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebase",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialEpochTokenIndexPrice",
									"type": "uint256"
								}
							],
							"name": "setInitialPrice",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allocateSeigniorage()": "5b756179",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"epoch()": "900cf0cf",
							"getRealtimeTokenIndexPrice()": "38140892",
							"getTokenPrice()": "4b94f50e",
							"initialize(address,address,address,address,uint256)": "f7013ef6",
							"isOperator()": "4456eda2",
							"nextEpochPoint()": "c5967c26",
							"operator()": "570ca735",
							"rebase()": "af14052c",
							"setInitialPrice(uint256)": "9f4ba0ee",
							"transferOperator(address)": "29605e77"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"allocateSeigniorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRealtimeTokenIndexPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"share\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"boardroom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start_time\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextEpochPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebase\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialEpochTokenIndexPrice\",\"type\":\"uint256\"}],\"name\":\"setInitialPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/utils/interfaces/ITreasury.sol\":\"ITreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/utils/interfaces/ITreasury.sol\":{\"keccak256\":\"0x2d545e7abe91449babe85d90c66aa680933ae6a8468b4195af9761095a3b8821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fce1a27bb48808ec1cebcc96c28e79cafcdde4f8f5ca901f31a66cda35727e\",\"dweb:/ipfs/QmPhSVHD8TTiNV1JKmTYWYVHtbs5Xo1bxKfh9xwZmbA4EC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":409:6710  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":409:6710  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d6a778f4bf8e6a8f98caaf85f98359ae04ff12a9397f2adae281557dc97afd164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d6a778f4bf8e6a8f98caaf85f98359ae04ff12a9397f2adae281557dc97afd164736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D PUSH11 0x778F4BF8E6A8F98CAAF85F SWAP9 CALLDATALOAD SWAP11 0xE0 0x4F CALL 0x2A SWAP4 SWAP8 CALLCODE 0xAD 0xAE 0x28 ISZERO JUMPI 0xDC SWAP8 0xAF 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "409:6301:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;409:6301:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d6a778f4bf8e6a8f98caaf85f98359ae04ff12a9397f2adae281557dc97afd164736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D PUSH11 0x778F4BF8E6A8F98CAAF85F SWAP9 CALLDATALOAD SWAP11 0xE0 0x4F CALL 0x2A SWAP4 SWAP8 CALLCODE 0xAD 0xAE 0x28 ISZERO JUMPI 0xDC SWAP8 0xAF 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "409:6301:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d6a778f4bf8e6a8f98caaf85f98359ae04ff12a9397f2adae281557dc97afd164736f6c634300080d0033",
									".code": [
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol": {
				"ContractGuard": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":58:738  contract ContractGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":58:738  contract ContractGuard {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e31dd70d1ec67914d786c4ee877dc91df065619736af4d0a3398f12fe29719e264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e31dd70d1ec67914d786c4ee877dc91df065619736af4d0a3398f12fe29719e264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SAR 0xD7 0xD 0x1E 0xC6 PUSH26 0x14D786C4EE877DC91DF065619736AF4D0A3398F12FE29719E264 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "58:680:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e31dd70d1ec67914d786c4ee877dc91df065619736af4d0a3398f12fe29719e264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 SAR 0xD7 0xD 0x1E 0xC6 PUSH26 0x14D786C4EE877DC91DF065619736AF4D0A3398F12FE29719E264 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "58:680:6:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"checkSameOriginReentranted()": "infinite",
								"checkSameSenderReentranted()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 738,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 58,
									"end": 738,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 738,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e31dd70d1ec67914d786c4ee877dc91df065619736af4d0a3398f12fe29719e264736f6c634300080d0033",
									".code": [
										{
											"begin": 58,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 58,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 738,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 58,
											"end": 738,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":\"ContractGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol\":{\"keccak256\":\"0x5f20bc62c01fee18fd86df3cbcc26657977b1cc81734acd2b488f73960b04510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77104a5f9bb014698fabe3988d6632c048906cd378ef41dbff6d31be32cae24b\",\"dweb:/ipfs/QmTakFPyaDEgxjaaCkrPhqD7oQQo5Y39xMxPevMkRdkaPg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1938,
								"contract": "brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol:ContractGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":596:3708  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":596:3708  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052fdb9827ce35e83c587a028bf8be80daa7d12690b2a6b5333b51b7e0f5235ee64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052fdb9827ce35e83c587a028bf8be80daa7d12690b2a6b5333b51b7e0f5235ee64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE REVERT 0xB9 DUP3 PUSH29 0xE35E83C587A028BF8BE80DAA7D12690B2A6B5333B51B7E0F5235EE6473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "596:3112:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;596:3112:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052fdb9827ce35e83c587a028bf8be80daa7d12690b2a6b5333b51b7e0f5235ee64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE REVERT 0xB9 DUP3 PUSH29 0xE35E83C587A028BF8BE80DAA7D12690B2A6B5333B51B7E0F5235EE6473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "596:3112:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052fdb9827ce35e83c587a028bf8be80daa7d12690b2a6b5333b51b7e0f5235ee64736f6c634300080d0033",
									".code": [
										{
											"begin": 596,
											"end": 3708,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/bebu_finance/contracts/utils/Address.sol\":{\"keccak256\":\"0x2254ff0365cbc4f80af2433d10890e0d4816c14f38a6e9e0c746f861ad434f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17ecd670c7f9522306389b638a01d0b0e93156ec0e9c2cbe798b091e89474a32\",\"dweb:/ipfs/QmUzZpE98hpS8J4KtqcLxxTzdrP2rKeUWssF5GJA1e3dYw\"]},\"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]},\"brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]},\"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol\":{\"keccak256\":\"0x593692219f7f58fc3dd89dc0271eaf2b459fd7515bbf53dcdb799bcce79c97b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dcb333da0bda5db19dacbc438f214d8e8408c210605baba683ce4af33ba525d\",\"dweb:/ipfs/QmRjDL9cN4qKGozcoN34EscZZesPqsa9E5qggHRihUZxkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/Boardroom/Boardroom.sol",
					"exportedSymbols": {
						"Address": [
							1501
						],
						"Boardroom": [
							1047
						],
						"ContractGuard": [
							2005
						],
						"IBasisAsset": [
							1540
						],
						"IERC20": [
							2083
						],
						"ITreasury": [
							1618
						],
						"SafeERC20": [
							2308
						],
						"SafeMath": [
							1930
						],
						"ShareWrapper": [
							1171
						]
					},
					"id": 1048,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol",
							"file": "../utils/token/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 2084,
							"src": "58:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol",
							"file": "../utils/token/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 2309,
							"src": "94:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol",
							"file": "../utils/security/ContractGuard.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 2006,
							"src": "134:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/interfaces/IBasisAsset.sol",
							"file": "../utils/interfaces/IBasisAsset.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 1541,
							"src": "180:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/interfaces/ITreasury.sol",
							"file": "../utils/interfaces/ITreasury.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 1619,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol",
							"file": "./ShareWrapper.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 1172,
							"src": "270:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "ShareWrapper",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1171,
										"src": "655:12:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "655:12:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "ContractGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2005,
										"src": "669:13:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "669:13:0"
								}
							],
							"canonicalName": "Boardroom",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1047,
							"linearizedBaseContracts": [
								1047,
								2005,
								1171
							],
							"name": "Boardroom",
							"nameLocation": "642:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 15,
									"libraryName": {
										"id": 12,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2308,
										"src": "695:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "689:27:0",
									"typeName": {
										"id": 14,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 13,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2083,
											"src": "709:6:0"
										},
										"referencedDeclaration": 2083,
										"src": "709:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2083",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 18,
									"libraryName": {
										"id": 16,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1501,
										"src": "727:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "721:26:0",
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "739:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 21,
									"libraryName": {
										"id": 19,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1930,
										"src": "758:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "752:27:0",
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "771:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Boardroom.Memberseat",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "lastSnapshotIndex",
											"nameLocation": "870:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "862:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "862:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "rewardEarned",
											"nameLocation": "905:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "897:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 24,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "897:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "epochTimerStart",
											"nameLocation": "935:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "927:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "927:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Memberseat",
									"nameLocation": "841:10:0",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "834:123:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Boardroom.BoardroomSnapshot",
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "1006:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "998:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "998:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "rewardReceived",
											"nameLocation": "1028:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1020:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1020:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "rewardPerShare",
											"nameLocation": "1060:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1052:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1052:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BoardroomSnapshot",
									"nameLocation": "970:17:0",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "963:118:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 37,
									"mutability": "mutable",
									"name": "operator",
									"nameLocation": "1169:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1154:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1154:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 40,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "1209:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1197:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 38,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1197:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1223:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 43,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1249:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1235:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2083",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 42,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 41,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2083,
											"src": "1235:6:0"
										},
										"referencedDeclaration": 2083,
										"src": "1235:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2083",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 46,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "1277:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1260:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITreasury_$1618",
										"typeString": "contract ITreasury"
									},
									"typeName": {
										"id": 45,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 44,
											"name": "ITreasury",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1618,
											"src": "1260:9:0"
										},
										"referencedDeclaration": 1618,
										"src": "1260:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITreasury_$1618",
											"typeString": "contract ITreasury"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9f92be4",
									"id": 50,
									"mutability": "mutable",
									"name": "blacklist",
									"nameLocation": "1341:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1309:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 49,
										"keyType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1317:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1309:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 48,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1328:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08ae4b0c",
									"id": 55,
									"mutability": "mutable",
									"name": "members",
									"nameLocation": "1395:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1357:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
										"typeString": "mapping(address => struct Boardroom.Memberseat)"
									},
									"typeName": {
										"id": 54,
										"keyType": {
											"id": 51,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1365:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1357:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
											"typeString": "mapping(address => struct Boardroom.Memberseat)"
										},
										"valueType": {
											"id": 53,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 52,
												"name": "Memberseat",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "1376:10:0"
											},
											"referencedDeclaration": 28,
											"src": "1376:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Memberseat_$28_storage_ptr",
												"typeString": "struct Boardroom.Memberseat"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c58e3843",
									"id": 59,
									"mutability": "mutable",
									"name": "boardroomHistory",
									"nameLocation": "1435:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1408:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage",
										"typeString": "struct Boardroom.BoardroomSnapshot[]"
									},
									"typeName": {
										"baseType": {
											"id": 57,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 56,
												"name": "BoardroomSnapshot",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 35,
												"src": "1408:17:0"
											},
											"referencedDeclaration": 35,
											"src": "1408:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_storage_ptr",
												"typeString": "struct Boardroom.BoardroomSnapshot"
											}
										},
										"id": 58,
										"nodeType": "ArrayTypeName",
										"src": "1408:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage_ptr",
											"typeString": "struct Boardroom.BoardroomSnapshot[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e85cd65",
									"id": 61,
									"mutability": "mutable",
									"name": "withdrawLockupEpochs",
									"nameLocation": "1473:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1458:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1458:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "022ba18d",
									"id": 63,
									"mutability": "mutable",
									"name": "rewardLockupEpochs",
									"nameLocation": "1514:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1499:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 62,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1499:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 65,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "1554:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1539:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 64,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1539:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "017e7e58",
									"id": 67,
									"mutability": "mutable",
									"name": "feeTo",
									"nameLocation": "1578:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1047,
									"src": "1563:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 66,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1563:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79",
									"id": 73,
									"name": "Initialized",
									"nameLocation": "1636:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "executor",
												"nameLocation": "1664:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1648:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": false,
												"mutability": "mutable",
												"name": "at",
												"nameLocation": "1682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:38:0"
									},
									"src": "1630:56:0"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 79,
									"name": "Staked",
									"nameLocation": "1697:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1704:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1734:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1726:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:38:0"
									},
									"src": "1691:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 85,
									"name": "Withdrawn",
									"nameLocation": "1753:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1763:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1793:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1785:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:38:0"
									},
									"src": "1747:54:0"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 91,
									"name": "RewardPaid",
									"nameLocation": "1812:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "1823:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "1845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:38:0"
									},
									"src": "1806:55:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ac24935fd910bc682b5ccb1a07b718cadf8cf2f6d1404c4f3ddc3662dae40e29",
									"id": 97,
									"name": "RewardAdded",
									"nameLocation": "1872:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1900:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1884:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1914:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1906:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1883:38:0"
									},
									"src": "1866:56:0"
								},
								{
									"anonymous": false,
									"eventSelector": "715576a45bd0ea6ca90a2f53c258fe52bdd30e6061046ce86ca3fa7e9f5a91be",
									"id": 105,
									"name": "BlacklistRewardPaid",
									"nameLocation": "1933:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1969:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1953:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1991:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1975:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "2003:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "1995:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:58:0"
									},
									"src": "1927:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "345a298b5b7318863d2a616f67ae5329deb5255f9f90b5ebc73ee5ddcd81b180",
									"id": 113,
									"name": "BlacklistWithdrawn",
									"nameLocation": "2022:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2057:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2041:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2079:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2063:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2091:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2083:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:58:0"
									},
									"src": "2016:83:0"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2177:100:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "2195:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 117,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2207:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2207:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2195:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae60855e4e87ed1ffda84d3fe0c226ee07dbacf982ce825bf7a5b22ad061ca7f",
																"typeString": "literal_string \"Boardroom: caller is not the operator\""
															},
															"value": "Boardroom: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae60855e4e87ed1ffda84d3fe0c226ee07dbacf982ce825bf7a5b22ad061ca7f",
																"typeString": "literal_string \"Boardroom: caller is not the operator\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2187:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2187:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "2187:72:0"
											},
											{
												"id": 123,
												"nodeType": "PlaceholderStatement",
												"src": "2269:1:0"
											}
										]
									},
									"id": 125,
									"name": "onlyOperator",
									"nameLocation": "2162:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2174:2:0"
									},
									"src": "2153:124:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "2307:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 129,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2335:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2335:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 128,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "2325:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2325:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2349:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2325:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a20546865206d656d62657220646f6573206e6f74206578697374",
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2352:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e424ad945b7dda92060782b6e1cfcfb7f80755c4a78721a549519ee83c1316a",
																"typeString": "literal_string \"Boardroom: The member does not exist\""
															},
															"value": "Boardroom: The member does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e424ad945b7dda92060782b6e1cfcfb7f80755c4a78721a549519ee83c1316a",
																"typeString": "literal_string \"Boardroom: The member does not exist\""
															}
														],
														"id": 127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2317:74:0"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2401:1:0"
											}
										]
									},
									"id": 139,
									"name": "memberExists",
									"nameLocation": "2292:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2304:2:0"
									},
									"src": "2283:126:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2453:262:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 143,
														"name": "member",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "2467:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2485:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 144,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2477:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2477:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2467:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 178,
												"nodeType": "IfStatement",
												"src": "2463:235:0",
												"trueBody": {
													"id": 177,
													"nodeType": "Block",
													"src": "2489:209:0",
													"statements": [
														{
															"assignments": [
																151
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 151,
																	"mutability": "mutable",
																	"name": "seat",
																	"nameLocation": "2521:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 177,
																	"src": "2503:22:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Memberseat_$28_memory_ptr",
																		"typeString": "struct Boardroom.Memberseat"
																	},
																	"typeName": {
																		"id": 150,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 149,
																			"name": "Memberseat",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 28,
																			"src": "2503:10:0"
																		},
																		"referencedDeclaration": 28,
																		"src": "2503:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Memberseat_$28_storage_ptr",
																			"typeString": "struct Boardroom.Memberseat"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 155,
															"initialValue": {
																"baseExpression": {
																	"id": 152,
																	"name": "members",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "2528:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																		"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																	}
																},
																"id": 154,
																"indexExpression": {
																	"id": 153,
																	"name": "member",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "2536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2528:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																	"typeString": "struct Boardroom.Memberseat storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2503:40:0"
														},
														{
															"expression": {
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 156,
																		"name": "seat",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2557:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Memberseat_$28_memory_ptr",
																			"typeString": "struct Boardroom.Memberseat memory"
																		}
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardEarned",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "2557:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 160,
																			"name": "member",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 141,
																			"src": "2584:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 159,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "2577:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2577:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2557:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 163,
															"nodeType": "ExpressionStatement",
															"src": "2557:34:0"
														},
														{
															"expression": {
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 164,
																		"name": "seat",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2605:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Memberseat_$28_memory_ptr",
																			"typeString": "struct Boardroom.Memberseat memory"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastSnapshotIndex",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 23,
																	"src": "2605:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 167,
																		"name": "latestSnapshotIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "2630:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2630:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2605:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 170,
															"nodeType": "ExpressionStatement",
															"src": "2605:46:0"
														},
														{
															"expression": {
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 171,
																		"name": "members",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 55,
																		"src": "2665:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																			"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																		}
																	},
																	"id": 173,
																	"indexExpression": {
																		"id": 172,
																		"name": "member",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "2673:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2665:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																		"typeString": "struct Boardroom.Memberseat storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 174,
																	"name": "seat",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "2683:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Memberseat_$28_memory_ptr",
																		"typeString": "struct Boardroom.Memberseat memory"
																	}
																},
																"src": "2665:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																	"typeString": "struct Boardroom.Memberseat storage ref"
																}
															},
															"id": 176,
															"nodeType": "ExpressionStatement",
															"src": "2665:22:0"
														}
													]
												}
											},
											{
												"id": 179,
												"nodeType": "PlaceholderStatement",
												"src": "2707:1:0"
											}
										]
									},
									"id": 181,
									"name": "updateReward",
									"nameLocation": "2424:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "2445:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2437:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:16:0"
									},
									"src": "2415:300:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "2747:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2765:12:0",
															"subExpression": {
																"id": 184,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2766:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a20616c726561647920696e697469616c697a6564",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_645c975c9766324d9f320cf38ddaa64d8379ac561310d48e32cac093164232e3",
																"typeString": "literal_string \"Boardroom: already initialized\""
															},
															"value": "Boardroom: already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_645c975c9766324d9f320cf38ddaa64d8379ac561310d48e32cac093164232e3",
																"typeString": "literal_string \"Boardroom: already initialized\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2757:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2757:55:0"
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "2822:1:0"
											}
										]
									},
									"id": 191,
									"name": "notInitialized",
									"nameLocation": "2730:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:2:0"
									},
									"src": "2721:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "3049:592:0",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "3059:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2083",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 210,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "3067:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2083",
															"typeString": "contract IERC20"
														}
													},
													"src": "3059:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "3059:14:0"
											},
											{
												"expression": {
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 213,
														"name": "share",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "3083:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2083",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 214,
														"name": "_share",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "3091:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2083",
															"typeString": "contract IERC20"
														}
													},
													"src": "3083:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "3083:14:0"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3107:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITreasury_$1618",
															"typeString": "contract ITreasury"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3118:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITreasury_$1618",
															"typeString": "contract ITreasury"
														}
													},
													"src": "3107:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITreasury_$1618",
														"typeString": "contract ITreasury"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "3107:20:0"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3137:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 222,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "3143:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3137:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3137:10:0"
											},
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 225,
														"name": "feeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "3157:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "_feeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "3165:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3157:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "3157:14:0"
											},
											{
												"assignments": [
													231
												],
												"declarations": [
													{
														"constant": false,
														"id": 231,
														"mutability": "mutable",
														"name": "genesisSnapshot",
														"nameLocation": "3207:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "3182:40:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
															"typeString": "struct Boardroom.BoardroomSnapshot"
														},
														"typeName": {
															"id": 230,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 229,
																"name": "BoardroomSnapshot",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3182:17:0"
															},
															"referencedDeclaration": 35,
															"src": "3182:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_storage_ptr",
																"typeString": "struct Boardroom.BoardroomSnapshot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 233,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3250:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3250:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3280:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3299:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 232,
														"name": "BoardroomSnapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "3225:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_BoardroomSnapshot_$35_storage_ptr_$",
															"typeString": "type(struct Boardroom.BoardroomSnapshot storage pointer)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"time",
														"rewardReceived",
														"rewardPerShare"
													],
													"nodeType": "FunctionCall",
													"src": "3225:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
														"typeString": "struct Boardroom.BoardroomSnapshot memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3182:120:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "genesisSnapshot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "3334:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
																"typeString": "struct Boardroom.BoardroomSnapshot memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
																"typeString": "struct Boardroom.BoardroomSnapshot memory"
															}
														],
														"expression": {
															"id": 239,
															"name": "boardroomHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "3312:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage",
																"typeString": "struct Boardroom.BoardroomSnapshot storage ref[] storage ref"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3312:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage_ptr_$_t_struct$_BoardroomSnapshot_$35_storage_$returns$__$bound_to$_t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Boardroom.BoardroomSnapshot storage ref[] storage pointer,struct Boardroom.BoardroomSnapshot storage ref)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3312:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "3312:38:0"
											},
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 245,
														"name": "withdrawLockupEpochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "3361:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3384:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "3361:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "3361:24:0"
											},
											{
												"expression": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 249,
														"name": "rewardLockupEpochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "3446:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3446:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "3446:22:0"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 253,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "3533:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3547:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3533:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "3533:18:0"
											},
											{
												"expression": {
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 257,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3561:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 258,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3572:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3572:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3561:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "3561:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 263,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3609:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 265,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3621:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3621:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 262,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "3597:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "EmitStatement",
												"src": "3592:42:0"
											}
										]
									},
									"functionSelector": "530b97a4",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "notInitialized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 191,
												"src": "3034:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3034:14:0"
										}
									],
									"name": "initialize",
									"nameLocation": "2889:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2916:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "2909:6:0"
													},
													"referencedDeclaration": 2083,
													"src": "2909:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_share",
												"nameLocation": "2939:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2932:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 195,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "2932:6:0"
													},
													"referencedDeclaration": 2083,
													"src": "2932:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "2965:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2955:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ITreasury_$1618",
													"typeString": "contract ITreasury"
												},
												"typeName": {
													"id": 199,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 198,
														"name": "ITreasury",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1618,
														"src": "2955:9:0"
													},
													"referencedDeclaration": 1618,
													"src": "2955:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITreasury_$1618",
														"typeString": "contract ITreasury"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2992:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2984:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "_feeTo",
												"nameLocation": "3014:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3006:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:127:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:0:0"
									},
									"scope": 1047,
									"src": "2880:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3709:37:0",
										"statements": [
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3719:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "3730:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3719:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "3719:20:0"
											}
										]
									},
									"functionSelector": "b3ab15fb",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 275,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 274,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "3696:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3696:12:0"
										}
									],
									"name": "setOperator",
									"nameLocation": "3656:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "3676:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3668:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3667:19:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3709:0:0"
									},
									"scope": 1047,
									"src": "3647:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3853:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 292,
																	"name": "_withdrawLockupEpochs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "3871:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 293,
																	"name": "_rewardLockupEpochs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "3896:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3871:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 295,
																	"name": "_withdrawLockupEpochs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "3919:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3536",
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3944:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_56_by_1",
																		"typeString": "int_const 56"
																	},
																	"value": "56"
																},
																"src": "3919:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3871:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5f77697468647261774c6f636b757045706f6368733a206f7574206f662072616e6765",
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3948:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aae0337b4611b89fcfb85e75a72a0e57c87560b2e5302344f0dd2f0c21965c43",
																"typeString": "literal_string \"_withdrawLockupEpochs: out of range\""
															},
															"value": "_withdrawLockupEpochs: out of range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aae0337b4611b89fcfb85e75a72a0e57c87560b2e5302344f0dd2f0c21965c43",
																"typeString": "literal_string \"_withdrawLockupEpochs: out of range\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "3863:123:0"
											},
											{
												"expression": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 302,
														"name": "withdrawLockupEpochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "4009:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 303,
														"name": "_withdrawLockupEpochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "4032:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4009:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "4009:44:0"
											},
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "rewardLockupEpochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "4063:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 307,
														"name": "_rewardLockupEpochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "4084:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4063:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "4063:40:0"
											}
										]
									},
									"functionSelector": "2ffaaa09",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 288,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "3840:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3840:12:0"
										}
									],
									"name": "setLockUp",
									"nameLocation": "3761:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_withdrawLockupEpochs",
												"nameLocation": "3779:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3771:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "_rewardLockupEpochs",
												"nameLocation": "3810:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3802:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:60:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3853:0:0"
									},
									"scope": 1047,
									"src": "3752:358:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4168:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 319,
																	"name": "_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "4186:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4194:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4186:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 322,
																	"name": "_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "4199:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4207:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "4199:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4186:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f7574206f662072616e6765",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4214:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4934c70f1bf51b646cb3956d013ab2370a398e96f48ecb9a678f6b946d390d1f",
																"typeString": "literal_string \"out of range\""
															},
															"value": "out of range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4934c70f1bf51b646cb3956d013ab2370a398e96f48ecb9a678f6b946d390d1f",
																"typeString": "literal_string \"out of range\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4178:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "4178:51:0"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "4239:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "4245:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4239:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "4239:10:0"
											}
										]
									},
									"functionSelector": "69fe0e2d",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "4155:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4155:12:0"
										}
									],
									"name": "setFee",
									"nameLocation": "4125:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "4140:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4132:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4131:14:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4168:0:0"
									},
									"scope": 1047,
									"src": "4116:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4318:31:0",
										"statements": [
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "feeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "4328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "_feeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4336:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4328:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "4328:14:0"
											}
										]
									},
									"functionSelector": "f46901ed",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 339,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 338,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "4305:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4305:12:0"
										}
									],
									"name": "setFeeTo",
									"nameLocation": "4271:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "_feeTo",
												"nameLocation": "4288:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4280:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4279:16:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4318:0:0"
									},
									"scope": 1047,
									"src": "4262:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "4437:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4455:20:0",
															"subExpression": {
																"baseExpression": {
																	"id": 356,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "4456:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"id": 357,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "4466:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4456:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6164647265737320616c7265616479206164646564",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4477:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2",
																"typeString": "literal_string \"address already added\""
															},
															"value": "address already added"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3620bf434525f05b8f3e09ff34da1ed381a930e763623c8370675363f272af2",
																"typeString": "literal_string \"address already added\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4447:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "4447:54:0"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 363,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "4511:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 365,
														"indexExpression": {
															"id": 364,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "4521:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4511:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4533:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4511:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "4511:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4554:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 354,
												"id": 370,
												"nodeType": "Return",
												"src": "4547:11:0"
											}
										]
									},
									"functionSelector": "5db76731",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 351,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 350,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "4409:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4409:12:0"
										}
									],
									"name": "addAddressBlacklist",
									"nameLocation": "4364:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4392:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "4384:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:18:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "4431:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4430:6:0"
									},
									"scope": 1047,
									"src": "4355:210:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "4656:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 382,
																"name": "blacklist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "4674:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 384,
															"indexExpression": {
																"id": 383,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "4684:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4674:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206e6f742065786973746564",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4695:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbfaebaba866a120888a6744276afa2abdb96e2badf25b8c0411ea7366a527b9",
																"typeString": "literal_string \"address not existed\""
															},
															"value": "address not existed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbfaebaba866a120888a6744276afa2abdb96e2badf25b8c0411ea7366a527b9",
																"typeString": "literal_string \"address not existed\""
															}
														],
														"id": 381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4666:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4666:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "4666:51:0"
											},
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 388,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "4727:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 390,
														"indexExpression": {
															"id": 389,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "4737:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4727:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4749:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4727:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "4727:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 380,
												"id": 395,
												"nodeType": "Return",
												"src": "4764:11:0"
											}
										]
									},
									"functionSelector": "6cee85c2",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 376,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "4628:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4628:12:0"
										}
									],
									"name": "removeAddressBlacklist",
									"nameLocation": "4580:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4611:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "4603:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4602:18:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "4650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:6:0"
									},
									"scope": 1047,
									"src": "4571:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "4865:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 404,
														"name": "blacklist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "4882:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 406,
													"indexExpression": {
														"id": 405,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "4892:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4882:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 403,
												"id": 407,
												"nodeType": "Return",
												"src": "4875:26:0"
											}
										]
									},
									"functionSelector": "d256d48a",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAddressBlacklist",
									"nameLocation": "4801:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4828:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4820:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4819:18:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4859:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4858:6:0"
									},
									"scope": 1047,
									"src": "4792:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "5059:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5104:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"expression": {
																"id": 414,
																"name": "boardroomHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "5076:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage",
																	"typeString": "struct Boardroom.BoardroomSnapshot storage ref[] storage ref"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5076:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1809,
														"src": "5076:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5076:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 413,
												"id": 419,
												"nodeType": "Return",
												"src": "5069:37:0"
											}
										]
									},
									"functionSelector": "3f9e3f04",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "latestSnapshotIndex",
									"nameLocation": "5007:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5026:2:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "5050:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:9:0"
									},
									"scope": 1047,
									"src": "4998:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "5197:63:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 427,
														"name": "boardroomHistory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "5214:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage",
															"typeString": "struct Boardroom.BoardroomSnapshot storage ref[] storage ref"
														}
													},
													"id": 430,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 428,
															"name": "latestSnapshotIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "5231:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5231:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5214:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_storage",
														"typeString": "struct Boardroom.BoardroomSnapshot storage ref"
													}
												},
												"functionReturnParameters": 426,
												"id": 431,
												"nodeType": "Return",
												"src": "5207:46:0"
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestSnapshot",
									"nameLocation": "5128:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5145:2:0"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "5171:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
													"typeString": "struct Boardroom.BoardroomSnapshot"
												},
												"typeName": {
													"id": 424,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 423,
														"name": "BoardroomSnapshot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "5171:17:0"
													},
													"referencedDeclaration": 35,
													"src": "5171:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_storage_ptr",
														"typeString": "struct Boardroom.BoardroomSnapshot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5170:26:0"
									},
									"scope": 1047,
									"src": "5119:141:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "5344:57:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 440,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "5361:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
															}
														},
														"id": 442,
														"indexExpression": {
															"id": 441,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5369:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5361:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Memberseat_$28_storage",
															"typeString": "struct Boardroom.Memberseat storage ref"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lastSnapshotIndex",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 23,
													"src": "5361:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 444,
												"nodeType": "Return",
												"src": "5354:40:0"
											}
										]
									},
									"functionSelector": "714b4658",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLastSnapshotIndexOf",
									"nameLocation": "5275:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "5306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5298:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5297:16:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5335:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:9:0"
									},
									"scope": 1047,
									"src": "5266:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "5499:72:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 454,
														"name": "boardroomHistory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "5516:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage",
															"typeString": "struct Boardroom.BoardroomSnapshot storage ref[] storage ref"
														}
													},
													"id": 458,
													"indexExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "member",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "5556:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 455,
															"name": "getLastSnapshotIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "5533:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5533:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5516:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_storage",
														"typeString": "struct Boardroom.BoardroomSnapshot storage ref"
													}
												},
												"functionReturnParameters": 453,
												"id": 459,
												"nodeType": "Return",
												"src": "5509:55:0"
											}
										]
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLastSnapshotOf",
									"nameLocation": "5416:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "5442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5434:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5433:16:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5473:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
													"typeString": "struct Boardroom.BoardroomSnapshot"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "BoardroomSnapshot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "5473:17:0"
													},
													"referencedDeclaration": 35,
													"src": "5473:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_storage_ptr",
														"typeString": "struct Boardroom.BoardroomSnapshot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:26:0"
									},
									"scope": 1047,
									"src": "5407:164:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "5643:101:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 473,
																"name": "withdrawLockupEpochs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "5696:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 468,
																		"name": "members",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 55,
																		"src": "5660:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																			"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																		}
																	},
																	"id": 470,
																	"indexExpression": {
																		"id": 469,
																		"name": "member",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "5668:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5660:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																		"typeString": "struct Boardroom.Memberseat storage ref"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "epochTimerStart",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 27,
																"src": "5660:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1794,
															"src": "5660:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5660:57:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 475,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "5721:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITreasury_$1618",
																	"typeString": "contract ITreasury"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1574,
															"src": "5721:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5721:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5660:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 467,
												"id": 479,
												"nodeType": "Return",
												"src": "5653:84:0"
											}
										]
									},
									"functionSelector": "19262d30",
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canWithdraw",
									"nameLocation": "5586:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "5606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:16:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5637:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5637:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:6:0"
									},
									"scope": 1047,
									"src": "5577:167:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "5819:99:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 493,
																"name": "rewardLockupEpochs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "5872:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 488,
																		"name": "members",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 55,
																		"src": "5836:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																			"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																		}
																	},
																	"id": 490,
																	"indexExpression": {
																		"id": 489,
																		"name": "member",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5844:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5836:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																		"typeString": "struct Boardroom.Memberseat storage ref"
																	}
																},
																"id": 491,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "epochTimerStart",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 27,
																"src": "5836:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1794,
															"src": "5836:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5836:55:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 495,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "5895:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITreasury_$1618",
																	"typeString": "contract ITreasury"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1574,
															"src": "5895:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5895:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5836:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 487,
												"id": 499,
												"nodeType": "Return",
												"src": "5829:82:0"
											}
										]
									},
									"functionSelector": "046335d0",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canClaimReward",
									"nameLocation": "5759:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "5782:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5774:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5773:16:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5813:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5813:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:6:0"
									},
									"scope": 1047,
									"src": "5750:168:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "5973:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 506,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "5990:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITreasury_$1618",
																"typeString": "contract ITreasury"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "epoch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1574,
														"src": "5990:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 509,
												"nodeType": "Return",
												"src": "5983:23:0"
											}
										]
									},
									"functionSelector": "900cf0cf",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "epoch",
									"nameLocation": "5933:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5938:2:0"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5964:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5963:9:0"
									},
									"scope": 1047,
									"src": "5924:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "6077:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 516,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "6094:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITreasury_$1618",
																"typeString": "contract ITreasury"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nextEpochPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1579,
														"src": "6094:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6094:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 515,
												"id": 519,
												"nodeType": "Return",
												"src": "6087:32:0"
											}
										]
									},
									"functionSelector": "c5967c26",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextEpochPoint",
									"nameLocation": "6028:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6042:2:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "6068:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6067:9:0"
									},
									"scope": 1047,
									"src": "6019:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "6189:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 526,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "6206:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITreasury_$1618",
																"typeString": "contract ITreasury"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getTokenPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1584,
														"src": "6206:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6206:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 525,
												"id": 529,
												"nodeType": "Return",
												"src": "6199:31:0"
											}
										]
									},
									"functionSelector": "4b94f50e",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "6141:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6154:2:0"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "6180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6179:9:0"
									},
									"scope": 1047,
									"src": "6132:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "6334:58:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 536,
															"name": "getLatestSnapshot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "6351:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_BoardroomSnapshot_$35_memory_ptr_$",
																"typeString": "function () view returns (struct Boardroom.BoardroomSnapshot memory)"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6351:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
															"typeString": "struct Boardroom.BoardroomSnapshot memory"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 34,
													"src": "6351:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 539,
												"nodeType": "Return",
												"src": "6344:41:0"
											}
										]
									},
									"functionSelector": "446a2ec8",
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerShare",
									"nameLocation": "6287:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6301:2:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "6325:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:9:0"
									},
									"scope": 1047,
									"src": "6278:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "6460:250:0",
										"statements": [
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "latestRPS",
														"nameLocation": "6478:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "6470:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 550,
															"name": "getLatestSnapshot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "6490:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_BoardroomSnapshot_$35_memory_ptr_$",
																"typeString": "function () view returns (struct Boardroom.BoardroomSnapshot memory)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6490:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
															"typeString": "struct Boardroom.BoardroomSnapshot memory"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 34,
													"src": "6490:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6470:54:0"
											},
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "storedRPS",
														"nameLocation": "6542:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "6534:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 557,
																"name": "member",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "6572:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 556,
															"name": "getLastSnapshotOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "6554:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_BoardroomSnapshot_$35_memory_ptr_$",
																"typeString": "function (address) view returns (struct Boardroom.BoardroomSnapshot memory)"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6554:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
															"typeString": "struct Boardroom.BoardroomSnapshot memory"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 34,
													"src": "6554:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6534:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 574,
																	"name": "members",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "6674:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																		"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																	}
																},
																"id": 576,
																"indexExpression": {
																	"id": 575,
																	"name": "member",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "6682:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6674:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																	"typeString": "struct Boardroom.Memberseat storage ref"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardEarned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "6674:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 567,
																					"name": "storedRPS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "6648:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 565,
																					"name": "latestRPS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 549,
																					"src": "6634:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1809,
																				"src": "6634:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6634:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 562,
																					"name": "member",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 543,
																					"src": "6622:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 561,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "6612:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6612:17:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1824,
																		"src": "6612:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6612:47:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1839,
																"src": "6612:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6612:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "6612:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6612:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 579,
												"nodeType": "Return",
												"src": "6605:98:0"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "6407:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "6422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6413:16:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6451:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6450:9:0"
									},
									"scope": 1047,
									"src": "6398:312:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1125
									],
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "6853:459:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6871:31:0",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 595,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6891:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6891:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 594,
																	"name": "isAddressBlacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6872:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6872:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626c61636b6c697374",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6904:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de",
																"typeString": "literal_string \"blacklist\""
															},
															"value": "blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de",
																"typeString": "literal_string \"blacklist\""
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6863:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "6863:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "6934:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6943:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6934:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a2043616e6e6f74207374616b652030",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6946:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_754d33edb65061d6597bb25880335e98840642c1b5fdcc396ef4dcfeadfc4541",
																"typeString": "literal_string \"Boardroom: Cannot stake 0\""
															},
															"value": "Boardroom: Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_754d33edb65061d6597bb25880335e98840642c1b5fdcc396ef4dcfeadfc4541",
																"typeString": "literal_string \"Boardroom: Cannot stake 0\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6926:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "6926:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 609,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "6988:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6994:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 639,
												"nodeType": "IfStatement",
												"src": "6984:173:0",
												"trueBody": {
													"id": 638,
													"nodeType": "Block",
													"src": "6997:160:0",
													"statements": [
														{
															"assignments": [
																613
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 613,
																	"mutability": "mutable",
																	"name": "tax",
																	"nameLocation": "7016:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 638,
																	"src": "7011:8:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 612,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7011:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 621,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "3130303030",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7042:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 616,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 65,
																				"src": "7033:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 614,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "7022:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1824,
																			"src": "7022:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7022:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1839,
																	"src": "7022:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7022:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7011:37:0"
														},
														{
															"expression": {
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 622,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "7062:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 625,
																			"name": "tax",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 613,
																			"src": "7082:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 623,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 583,
																			"src": "7071:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1809,
																		"src": "7071:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7071:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7062:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 628,
															"nodeType": "ExpressionStatement",
															"src": "7062:24:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 632,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7123:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7123:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 634,
																		"name": "feeTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "7135:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 635,
																		"name": "tax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "7142:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 629,
																		"name": "share",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "7100:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2141,
																	"src": "7100:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2083_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7100:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 637,
															"nodeType": "ExpressionStatement",
															"src": "7100:46:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "7178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 640,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7166:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Boardroom_$1047_$",
																"typeString": "type(contract super Boardroom)"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stake",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1125,
														"src": "7166:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7166:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "7166:19:0"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 646,
																"name": "members",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "7195:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																	"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																}
															},
															"id": 649,
															"indexExpression": {
																"expression": {
																	"id": 647,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7203:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7203:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7195:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																"typeString": "struct Boardroom.Memberseat storage ref"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "epochTimerStart",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "7195:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 651,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "7233:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITreasury_$1618",
																	"typeString": "contract ITreasury"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "epoch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1574,
															"src": "7233:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7233:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7195:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "7195:54:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 657,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7286:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7286:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "7298:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 656,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7279:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7279:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "EmitStatement",
												"src": "7274:31:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 587,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 586,
												"name": "onlyOneBlock",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2004,
												"src": "6815:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6815:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 589,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6841:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6841:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 591,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 588,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 181,
												"src": "6828:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6828:24:0"
										}
									],
									"name": "stake",
									"nameLocation": "6777:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 585,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6806:8:0"
									},
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6791:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6783:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6782:16:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6853:0:0"
									},
									"scope": 1047,
									"src": "6768:544:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1170
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "7419:369:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7437:31:0",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 679,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7457:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7457:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 678,
																	"name": "isAddressBlacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "7438:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7438:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626c61636b6c697374",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7470:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de",
																"typeString": "literal_string \"blacklist\""
															},
															"value": "blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de",
																"typeString": "literal_string \"blacklist\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7429:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7429:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "7429:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 687,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "7500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7500:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a2043616e6e6f742077697468647261772030",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7512:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dbd8da2e347db2af1121670d00b751c9b434318480fe5bd806b0214e8af7480",
																"typeString": "literal_string \"Boardroom: Cannot withdraw 0\""
															},
															"value": "Boardroom: Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dbd8da2e347db2af1121670d00b751c9b434318480fe5bd806b0214e8af7480",
																"typeString": "literal_string \"Boardroom: Cannot withdraw 0\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7492:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "7492:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 700,
																		"name": "withdrawLockupEpochs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "7601:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 694,
																				"name": "members",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "7561:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																					"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"expression": {
																					"id": 695,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7569:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7569:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7561:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																				"typeString": "struct Boardroom.Memberseat storage ref"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "epochTimerStart",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "7561:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1794,
																	"src": "7561:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7561:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 702,
																		"name": "treasury",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "7626:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITreasury_$1618",
																			"typeString": "contract ITreasury"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "epoch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1574,
																	"src": "7626:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7626:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7561:81:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a207374696c6c20696e207769746864726177206c6f636b7570",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7644:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dee4276bb2eecf402cc50ff31bc9b887690399ff6e65cd553655d48a039a6efd",
																"typeString": "literal_string \"Boardroom: still in withdraw lockup\""
															},
															"value": "Boardroom: still in withdraw lockup"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dee4276bb2eecf402cc50ff31bc9b887690399ff6e65cd553655d48a039a6efd",
																"typeString": "literal_string \"Boardroom: still in withdraw lockup\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7553:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "7553:129:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 709,
														"name": "claimReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "7692:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7692:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "7692:13:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 715,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7730:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 712,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7715:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Boardroom_$1047_$",
																"typeString": "type(contract super Boardroom)"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1170,
														"src": "7715:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7715:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "7715:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7762:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7762:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "7774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 718,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "7752:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7752:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "EmitStatement",
												"src": "7747:34:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 669,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 668,
												"name": "onlyOneBlock",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2004,
												"src": "7368:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7368:12:0"
										},
										{
											"id": 671,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 670,
												"name": "memberExists",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 139,
												"src": "7381:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7381:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 673,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7407:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7407:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 675,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 181,
												"src": "7394:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7394:24:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "7327:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7359:8:0"
									},
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7344:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "7336:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7335:16:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7419:0:0"
									},
									"scope": 1047,
									"src": "7318:470:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "7819:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 730,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7848:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7848:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 729,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "7838:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7838:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 728,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															725
														],
														"referencedDeclaration": 725,
														"src": "7829:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7829:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "7829:31:0"
											}
										]
									},
									"functionSelector": "e9fad8ee",
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "7803:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7807:2:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7819:0:0"
									},
									"scope": 1047,
									"src": "7794:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "7928:538:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7946:31:0",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 745,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7966:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7966:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "isAddressBlacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "7947:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7947:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626c61636b6c697374",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7979:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de",
																"typeString": "literal_string \"blacklist\""
															},
															"value": "blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bee08883b637fc1c97a9d4ffd4092caec15d53ba368d5d4ea2639e1b71b577de",
																"typeString": "literal_string \"blacklist\""
															}
														],
														"id": 743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7938:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "7938:53:0"
											},
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "8009:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 813,
														"src": "8001:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 759,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 754,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "8018:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
															}
														},
														"id": 757,
														"indexExpression": {
															"expression": {
																"id": 755,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8026:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8026:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8018:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Memberseat_$28_storage",
															"typeString": "struct Boardroom.Memberseat storage ref"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardEarned",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 25,
													"src": "8018:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8001:49:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "8064:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8073:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8064:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 812,
												"nodeType": "IfStatement",
												"src": "8060:400:0",
												"trueBody": {
													"id": 811,
													"nodeType": "Block",
													"src": "8076:384:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 770,
																					"name": "rewardLockupEpochs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 63,
																					"src": "8138:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"baseExpression": {
																							"id": 764,
																							"name": "members",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 55,
																							"src": "8098:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																								"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																							}
																						},
																						"id": 767,
																						"indexExpression": {
																							"expression": {
																								"id": 765,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "8106:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 766,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "8106:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8098:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																							"typeString": "struct Boardroom.Memberseat storage ref"
																						}
																					},
																					"id": 768,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "epochTimerStart",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "8098:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1794,
																				"src": "8098:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8098:59:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 772,
																					"name": "treasury",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 46,
																					"src": "8161:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITreasury_$1618",
																						"typeString": "contract ITreasury"
																					}
																				},
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "epoch",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1574,
																				"src": "8161:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8161:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8098:79:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a207374696c6c20696e20726577617264206c6f636b7570",
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8179:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9809b15ceb77dc2632e61e2b4cab09eb411018b86c28ab4016ea119d2b609307",
																			"typeString": "literal_string \"Boardroom: still in reward lockup\""
																		},
																		"value": "Boardroom: still in reward lockup"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9809b15ceb77dc2632e61e2b4cab09eb411018b86c28ab4016ea119d2b609307",
																			"typeString": "literal_string \"Boardroom: still in reward lockup\""
																		}
																	],
																	"id": 763,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8090:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8090:125:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "8090:125:0"
														},
														{
															"expression": {
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 779,
																			"name": "members",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 55,
																			"src": "8229:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																				"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																			}
																		},
																		"id": 782,
																		"indexExpression": {
																			"expression": {
																				"id": 780,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8237:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8237:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8229:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																			"typeString": "struct Boardroom.Memberseat storage ref"
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "epochTimerStart",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 27,
																	"src": "8229:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 784,
																			"name": "treasury",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "8267:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITreasury_$1618",
																				"typeString": "contract ITreasury"
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "epoch",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1574,
																		"src": "8267:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8267:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8229:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 788,
															"nodeType": "ExpressionStatement",
															"src": "8229:54:0"
														},
														{
															"expression": {
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 789,
																			"name": "members",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 55,
																			"src": "8312:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																				"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																			}
																		},
																		"id": 792,
																		"indexExpression": {
																			"expression": {
																				"id": 790,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8320:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8320:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8312:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																			"typeString": "struct Boardroom.Memberseat storage ref"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardEarned",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "8312:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8347:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8312:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 796,
															"nodeType": "ExpressionStatement",
															"src": "8312:36:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 800,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8381:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8381:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 802,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 753,
																		"src": "8393:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 797,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "8362:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2115,
																	"src": "8362:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2083_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8362:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "8362:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 806,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8430:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8430:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 753,
																		"src": "8442:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 805,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "8419:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8419:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "EmitStatement",
															"src": "8414:35:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 739,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7916:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7916:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 738,
												"name": "updateReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 181,
												"src": "7903:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7903:24:0"
										}
									],
									"name": "claimReward",
									"nameLocation": "7882:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7893:2:0"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7928:0:0"
									},
									"scope": 1047,
									"src": "7873:593:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "8552:628:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "8570:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8579:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8570:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a2043616e6e6f7420616c6c6f636174652030",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8582:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82fe2394c65979e700253b917b585e2c156f99181a99ea593efdce474622f26c",
																"typeString": "literal_string \"Boardroom: Cannot allocate 0\""
															},
															"value": "Boardroom: Cannot allocate 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_82fe2394c65979e700253b917b585e2c156f99181a99ea593efdce474622f26c",
																"typeString": "literal_string \"Boardroom: Cannot allocate 0\""
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8562:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8562:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "8562:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 831,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "8631:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8631:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8631:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a2043616e6e6f7420616c6c6f63617465207768656e20746f74616c537570706c792069732030",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8650:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7eebd3ab7211eff05fddabca5b84eaa658cc7fb494729279632df7c3544ffe28",
																"typeString": "literal_string \"Boardroom: Cannot allocate when totalSupply is 0\""
															},
															"value": "Boardroom: Cannot allocate when totalSupply is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7eebd3ab7211eff05fddabca5b84eaa658cc7fb494729279632df7c3544ffe28",
																"typeString": "literal_string \"Boardroom: Cannot allocate when totalSupply is 0\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8623:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "8623:78:0"
											},
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "prevRPS",
														"nameLocation": "8757:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "8749:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 838,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "getLatestSnapshot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "8767:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_BoardroomSnapshot_$35_memory_ptr_$",
																"typeString": "function () view returns (struct Boardroom.BoardroomSnapshot memory)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8767:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
															"typeString": "struct Boardroom.BoardroomSnapshot memory"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 34,
													"src": "8767:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8749:52:0"
											},
											{
												"assignments": [
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "nextRPS",
														"nameLocation": "8819:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "8811:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8811:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 857,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 853,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "8862:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8862:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8852:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"id": 848,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "8841:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1824,
																		"src": "8841:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8841:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1839,
																"src": "8841:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8841:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 846,
															"name": "prevRPS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "8829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "8829:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8829:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8811:66:0"
											},
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "newSnapshot",
														"nameLocation": "8913:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "8888:36:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
															"typeString": "struct Boardroom.BoardroomSnapshot"
														},
														"typeName": {
															"id": 859,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 858,
																"name": "BoardroomSnapshot",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "8888:17:0"
															},
															"referencedDeclaration": 35,
															"src": "8888:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_storage_ptr",
																"typeString": "struct Boardroom.BoardroomSnapshot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 862,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8952:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "8952:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 864,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "8982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 865,
															"name": "nextRPS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "9006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "BoardroomSnapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "8927:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_BoardroomSnapshot_$35_storage_ptr_$",
															"typeString": "type(struct Boardroom.BoardroomSnapshot storage pointer)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"time",
														"rewardReceived",
														"rewardPerShare"
													],
													"nodeType": "FunctionCall",
													"src": "8927:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
														"typeString": "struct Boardroom.BoardroomSnapshot memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8888:127:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 871,
															"name": "newSnapshot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "9047:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
																"typeString": "struct Boardroom.BoardroomSnapshot memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_BoardroomSnapshot_$35_memory_ptr",
																"typeString": "struct Boardroom.BoardroomSnapshot memory"
															}
														],
														"expression": {
															"id": 868,
															"name": "boardroomHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "9025:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage",
																"typeString": "struct Boardroom.BoardroomSnapshot storage ref[] storage ref"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9025:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage_ptr_$_t_struct$_BoardroomSnapshot_$35_storage_$returns$__$bound_to$_t_array$_t_struct$_BoardroomSnapshot_$35_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Boardroom.BoardroomSnapshot storage ref[] storage pointer,struct Boardroom.BoardroomSnapshot storage ref)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9025:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "9025:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 877,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9093:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9093:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 881,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9113:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Boardroom_$1047",
																		"typeString": "contract Boardroom"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Boardroom_$1047",
																		"typeString": "contract Boardroom"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9105:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9105:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9105:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "9120:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 874,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "9070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2141,
														"src": "9070:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2083_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9070:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "9070:57:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 887,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9154:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9154:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "9166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 886,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "9142:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9142:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "9137:36:0"
											}
										]
									},
									"functionSelector": "97ffe1d7",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 819,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 818,
												"name": "onlyOneBlock",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2004,
												"src": "8526:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8526:12:0"
										},
										{
											"id": 821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 820,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "8539:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8539:12:0"
										}
									],
									"name": "allocateSeigniorage",
									"nameLocation": "8481:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8509:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "8501:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8500:16:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8552:0:0"
									},
									"scope": 1047,
									"src": "8472:708:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "9270:725:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 904,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "9307:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 903,
																"name": "isAddressBlacklist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "9288:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9288:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206e6f7420696e2074686520626c61636b6c697374",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9318:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f83ca082be46052f95d9ac48c312ac41c56724041f1255c6b059cce7ccba571e",
																"typeString": "literal_string \"address not in the blacklist\""
															},
															"value": "address not in the blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f83ca082be46052f95d9ac48c312ac41c56724041f1255c6b059cce7ccba571e",
																"typeString": "literal_string \"address not in the blacklist\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9280:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9280:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "9280:69:0"
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "memberShare",
														"nameLocation": "9367:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "9359:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"baseExpression": {
														"id": 911,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "9381:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 913,
													"indexExpression": {
														"id": 912,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9391:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9381:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9359:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "memberShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "9418:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9432:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9418:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a2043616e6e6f742077697468647261772030",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9435:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2dbd8da2e347db2af1121670d00b751c9b434318480fe5bd806b0214e8af7480",
																"typeString": "literal_string \"Boardroom: Cannot withdraw 0\""
															},
															"value": "Boardroom: Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2dbd8da2e347db2af1121670d00b751c9b434318480fe5bd806b0214e8af7480",
																"typeString": "literal_string \"Boardroom: Cannot withdraw 0\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9410:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "9410:56:0"
											},
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "9484:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "9476:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 928,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 924,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "9493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
															}
														},
														"id": 926,
														"indexExpression": {
															"id": 925,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9501:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9493:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Memberseat_$28_storage",
															"typeString": "struct Boardroom.Memberseat storage ref"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "rewardEarned",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 25,
													"src": "9493:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9476:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 929,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "9537:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9546:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9537:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "9533:262:0",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "9549:246:0",
													"statements": [
														{
															"expression": {
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 932,
																			"name": "members",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 55,
																			"src": "9563:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																				"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																			}
																		},
																		"id": 934,
																		"indexExpression": {
																			"id": 933,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 895,
																			"src": "9571:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9563:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																			"typeString": "struct Boardroom.Memberseat storage ref"
																		}
																	},
																	"id": 935,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "epochTimerStart",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 27,
																	"src": "9563:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 936,
																			"name": "treasury",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "9599:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITreasury_$1618",
																				"typeString": "contract ITreasury"
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "epoch",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1574,
																		"src": "9599:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9599:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9563:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 940,
															"nodeType": "ExpressionStatement",
															"src": "9563:52:0"
														},
														{
															"expression": {
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 941,
																			"name": "members",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 55,
																			"src": "9644:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Memberseat_$28_storage_$",
																				"typeString": "mapping(address => struct Boardroom.Memberseat storage ref)"
																			}
																		},
																		"id": 943,
																		"indexExpression": {
																			"id": 942,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 895,
																			"src": "9652:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9644:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Memberseat_$28_storage",
																			"typeString": "struct Boardroom.Memberseat storage ref"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardEarned",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "9644:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9677:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9644:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 947,
															"nodeType": "ExpressionStatement",
															"src": "9644:34:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 951,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "9711:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 952,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "9716:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 948,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "9692:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2115,
																	"src": "9692:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2083_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9692:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 954,
															"nodeType": "ExpressionStatement",
															"src": "9692:31:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 956,
																		"name": "_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "9762:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 957,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "9772:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 958,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "9777:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 955,
																	"name": "BlacklistRewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "9742:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9742:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 960,
															"nodeType": "EmitStatement",
															"src": "9737:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 963,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "9804:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 966,
																"name": "memberShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "9836:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 964,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "9819:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1809,
															"src": "9819:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9819:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9804:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "9804:44:0"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 970,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "9858:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 972,
														"indexExpression": {
															"id": 971,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9868:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9858:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9880:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9858:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "9858:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9910:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "memberShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9915:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 976,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "9891:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2115,
														"src": "9891:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2083_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9891:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "9891:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 984,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9961:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9971:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "memberShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9976:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 983,
														"name": "BlacklistWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "9942:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9942:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "EmitStatement",
												"src": "9937:51:0"
											}
										]
									},
									"functionSelector": "53c03829",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "9257:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9257:12:0"
										}
									],
									"name": "blacklistFundWithdraw",
									"nameLocation": "9195:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "9225:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "9217:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9243:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "9235:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9216:31:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9270:0:0"
									},
									"scope": 1047,
									"src": "9186:809:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "10136:261:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "10154:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10169:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10161:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1004,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10161:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10161:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10154:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10173:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8",
																"typeString": "literal_string \"zero\""
															},
															"value": "zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29319238daf40223d6021718c846ac2a0c0ef028ecc765972e999a8ac79662a8",
																"typeString": "literal_string \"zero\""
															}
														],
														"id": 1002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10146:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "10146:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1015,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "10251:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10243:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1013,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10243:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10243:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1019,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "10270:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10262:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1017,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10262:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10262:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10243:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10278:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
																"typeString": "literal_string \"token\""
															},
															"value": "token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
																"typeString": "literal_string \"token\""
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10235:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "10235:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1028,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "10312:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10304:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1026,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10304:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10304:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1032,
																		"name": "share",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "10331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$2083",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10323:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1030,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10323:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10323:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10304:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7368617265",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4cdc3d8a828364413eb5a76eb1fa4225d58cb47d3674544d05ebb54f20c5529",
																"typeString": "literal_string \"share\""
															},
															"value": "share"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4cdc3d8a828364413eb5a76eb1fa4225d58cb47d3674544d05ebb54f20c5529",
																"typeString": "literal_string \"share\""
															}
														],
														"id": 1025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10296:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10296:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "10296:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "10377:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "10382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1038,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "10357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2115,
														"src": "10357:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2083_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10357:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "10357:33:0"
											}
										]
									},
									"functionSelector": "54575af4",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 999,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "10123:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10123:12:0"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nameLocation": "10010:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "10055:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "10048:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 991,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "10048:6:0"
													},
													"referencedDeclaration": 2083,
													"src": "10048:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10079:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "10071:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10104:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "10096:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10038:75:0"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10136:0:0"
									},
									"scope": 1047,
									"src": "10001:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1048,
							"src": "633:9766:0",
							"usedErrors": []
						}
					],
					"src": "33:10366:0"
				},
				"id": 0
			},
			"brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/Boardroom/ShareWrapper.sol",
					"exportedSymbols": {
						"Address": [
							1501
						],
						"IERC20": [
							2083
						],
						"SafeERC20": [
							2308
						],
						"SafeMath": [
							1930
						],
						"ShareWrapper": [
							1171
						]
					},
					"id": 1172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1049,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol",
							"file": "../utils/token/IERC20.sol",
							"id": 1050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1172,
							"sourceUnit": 2084,
							"src": "58:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol",
							"file": "../utils/token/SafeERC20.sol",
							"id": 1051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1172,
							"sourceUnit": 2309,
							"src": "94:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShareWrapper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1171,
							"linearizedBaseContracts": [
								1171
							],
							"name": "ShareWrapper",
							"nameLocation": "143:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1054,
									"libraryName": {
										"id": 1052,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1930,
										"src": "168:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "162:27:1",
									"typeName": {
										"id": 1053,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "181:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1058,
									"libraryName": {
										"id": 1055,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2308,
										"src": "200:9:1"
									},
									"nodeType": "UsingForDirective",
									"src": "194:27:1",
									"typeName": {
										"id": 1057,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1056,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2083,
											"src": "214:6:1"
										},
										"referencedDeclaration": 2083,
										"src": "214:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2083",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a8d5fd65",
									"id": 1061,
									"mutability": "mutable",
									"name": "share",
									"nameLocation": "241:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1171,
									"src": "227:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2083",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1060,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1059,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2083,
											"src": "227:6:1"
										},
										"referencedDeclaration": 2083,
										"src": "227:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2083",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1063,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "270:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1171,
									"src": "253:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1062,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1067,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "325:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1171,
									"src": "288:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1066,
										"keyType": {
											"id": 1064,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "296:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "288:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1065,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "307:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "394:36:1",
										"statements": [
											{
												"expression": {
													"id": 1072,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1063,
													"src": "411:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1071,
												"id": 1073,
												"nodeType": "Return",
												"src": "404:19:1"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "350:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:2:1"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "385:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:9:1"
									},
									"scope": 1171,
									"src": "341:89:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "502:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1082,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "519:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1084,
													"indexExpression": {
														"id": 1083,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "519:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1085,
												"nodeType": "Return",
												"src": "512:25:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:1"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 1171,
									"src": "436:108:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "596:190:1",
										"statements": [
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1092,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "606:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1095,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "638:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1093,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "621:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1794,
															"src": "621:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "621:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "606:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "606:39:1"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1099,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "655:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1102,
														"indexExpression": {
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "665:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "665:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "655:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1108,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "705:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1103,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "679:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1106,
																"indexExpression": {
																	"expression": {
																		"id": 1104,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "689:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "689:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "679:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1794,
															"src": "679:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "679:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "655:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "655:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "745:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "745:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1119,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "765:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ShareWrapper_$1171",
																		"typeString": "contract ShareWrapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ShareWrapper_$1171",
																		"typeString": "contract ShareWrapper"
																	}
																],
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "757:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "757:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "757:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "772:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1112,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "722:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2141,
														"src": "722:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2083_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "722:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "722:57:1"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "559:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "573:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "565:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:16:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:0:1"
									},
									"scope": 1171,
									"src": "550:236:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "841:312:1",
										"statements": [
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "memberShare",
														"nameLocation": "859:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "851:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "851:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"initialValue": {
													"baseExpression": {
														"id": 1132,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "873:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1135,
													"indexExpression": {
														"expression": {
															"id": 1133,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "883:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "883:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "873:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "851:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1138,
																"name": "memberShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "912:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1139,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "927:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "912:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a20776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "935:56:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2",
																"typeString": "literal_string \"Boardroom: withdraw request greater than staked amount\""
															},
															"value": "Boardroom: withdraw request greater than staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2",
																"typeString": "literal_string \"Boardroom: withdraw request greater than staked amount\""
															}
														],
														"id": 1137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "904:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:88:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "904:88:1"
											},
											{
												"expression": {
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1144,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "1002:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1147,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "1034:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1145,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "1017:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1809,
															"src": "1017:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1017:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1002:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "1002:39:1"
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1151,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1051:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1154,
														"indexExpression": {
															"expression": {
																"id": 1152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1061:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1061:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1051:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1157,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "1091:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1155,
																"name": "memberShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "1075:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1809,
															"src": "1075:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1075:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1051:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "1051:47:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1127:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1127:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "1139:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1161,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "1108:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2115,
														"src": "1108:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2083_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "1108:38:1"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "801:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "818:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "810:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:16:1"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:0:1"
									},
									"scope": 1171,
									"src": "792:361:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1172,
							"src": "134:1021:1",
							"usedErrors": []
						}
					],
					"src": "33:1122:1"
				},
				"id": 1
			},
			"brownie_projects/bebu_finance/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1501
						]
					},
					"id": 1502,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1173,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1174,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1501,
							"linearizedBaseContracts": [
								1501
							],
							"name": "Address",
							"nameLocation": "134:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "1410:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1182,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "1634:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1634:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1634:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1656:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1634:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1181,
												"id": 1187,
												"nodeType": "Return",
												"src": "1627:30:2"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "148:1191:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1353:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1372:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1364:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:17:2"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1404:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1404:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:6:2"
									},
									"scope": 1501,
									"src": "1344:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "2651:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1200,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2677:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1501",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1501",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2669:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1198,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2669:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2669:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2669:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1203,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "2694:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2669:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2702:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2661:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2661:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "2661:73:2"
											},
											{
												"assignments": [
													1209,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2751:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "2746:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1208,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1216,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2794:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1210,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "2764:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2764:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1212,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "2786:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2764:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2745:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1218,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "2815:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2824:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2807:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "2807:78:2"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "1670:905:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2589:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2615:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2599:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2599:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2634:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2626:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:43:2"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2651:0:2"
									},
									"scope": 1501,
									"src": "2580:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "3723:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1234,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "3762:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "3770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3776:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3779:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1233,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1281,
															1325
														],
														"referencedDeclaration": 1325,
														"src": "3740:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3740:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1232,
												"id": 1239,
												"nodeType": "Return",
												"src": "3733:79:2"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "2898:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3643:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3664:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3656:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3672:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3672:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:35:2"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3709:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3709:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3708:14:2"
									},
									"scope": 1501,
									"src": "3634:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "4188:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1254,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "4227:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "4235:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4241:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "4244:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1253,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1281,
															1325
														],
														"referencedDeclaration": 1325,
														"src": "4205:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4205:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1252,
												"id": 1259,
												"nodeType": "Return",
												"src": "4198:59:2"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "3825:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4050:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4080:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4072:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4072:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4109:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4096:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4096:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4137:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4123:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1247,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4123:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:93:2"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4174:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4173:14:2"
									},
									"scope": 1501,
									"src": "4041:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "4739:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1274,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "4778:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "4786:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1276,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "4792:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1273,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1281,
															1325
														],
														"referencedDeclaration": 1325,
														"src": "4756:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4756:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1272,
												"id": 1279,
												"nodeType": "Return",
												"src": "4749:94:2"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "4270:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4635:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4657:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4686:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4673:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4692:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4656:50:2"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "4725:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4725:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4724:14:2"
									},
									"scope": 1501,
									"src": "4626:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "5277:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1298,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5303:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1501",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1501",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5295:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1296,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5295:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5295:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5295:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "5320:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5295:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5327:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5287:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5287:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "5287:81:2"
											},
											{
												"assignments": [
													1307,
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1307,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5384:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "5379:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1306,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5406:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "5393:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1308,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5393:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"initialValue": {
													"arguments": [
														{
															"id": 1314,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "5446:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1310,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "5420:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5420:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1312,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "5439:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5420:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5378:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1318,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "5495:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1319,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "5503:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1320,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5512:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1321,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "5524:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1317,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "5468:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1323,
												"nodeType": "Return",
												"src": "5461:76:2"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "4856:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5107:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5146:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "5138:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5138:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5175:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "5162:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5197:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "5189:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5189:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5226:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "5212:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5128:116:2"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "5263:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5263:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5262:14:2"
									},
									"scope": 1501,
									"src": "5098:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "5821:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "5857:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1337,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "5865:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5871:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1335,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1342,
															1371
														],
														"referencedDeclaration": 1371,
														"src": "5838:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5838:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1334,
												"id": 1340,
												"nodeType": "Return",
												"src": "5831:80:2"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "5550:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5730:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5757:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "5749:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5778:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "5765:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5765:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5748:35:2"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "5807:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5807:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5806:14:2"
									},
									"scope": 1501,
									"src": "5721:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "6260:168:2",
										"statements": [
											{
												"assignments": [
													1355,
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6276:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "6271:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1354,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6271:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6298:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "6285:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1356,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6285:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"arguments": [
														{
															"id": 1360,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "6330:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1358,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "6312:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6312:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6312:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6270:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1364,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "6379:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1365,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "6387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1366,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "6396:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1367,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "6408:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1363,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "6352:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6352:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1353,
												"id": 1369,
												"nodeType": "Return",
												"src": "6345:76:2"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "5924:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6111:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6147:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "6139:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6176:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "6163:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6163:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6204:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "6190:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6190:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6129:93:2"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "6246:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6246:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6245:14:2"
									},
									"scope": 1501,
									"src": "6102:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "6704:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "6742:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "6750:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1381,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1388,
															1417
														],
														"referencedDeclaration": 1417,
														"src": "6721:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1380,
												"id": 1386,
												"nodeType": "Return",
												"src": "6714:84:2"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "6434:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6645:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "6637:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6666:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "6653:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:35:2"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "6690:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6690:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:14:2"
									},
									"scope": 1501,
									"src": "6607:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "7146:170:2",
										"statements": [
											{
												"assignments": [
													1401,
													1403
												],
												"declarations": [
													{
														"constant": false,
														"id": 1401,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7162:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1416,
														"src": "7157:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1400,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7157:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1403,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7184:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1416,
														"src": "7171:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1402,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7171:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"arguments": [
														{
															"id": 1406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "7218:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "7198:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7198:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7198:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7156:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1410,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "7267:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1411,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "7275:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1412,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "7284:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1413,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "7296:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1409,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "7240:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7240:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1399,
												"id": 1415,
												"nodeType": "Return",
												"src": "7233:76:2"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "6811:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7000:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7038:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "7030:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7030:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7067:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "7054:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7095:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "7081:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7081:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7020:93:2"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "7132:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7131:14:2"
									},
									"scope": 1501,
									"src": "6991:325:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "7798:434:2",
										"statements": [
											{
												"condition": {
													"id": 1431,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1422,
													"src": "7812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1453,
													"nodeType": "Block",
													"src": "8168:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1449,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "8190:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1450,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "8202:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1448,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "8182:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8182:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1452,
															"nodeType": "ExpressionStatement",
															"src": "8182:33:2"
														}
													]
												},
												"id": 1454,
												"nodeType": "IfStatement",
												"src": "7808:418:2",
												"trueBody": {
													"id": 1447,
													"nodeType": "Block",
													"src": "7821:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1432,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "7839:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7839:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7839:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1444,
															"nodeType": "IfStatement",
															"src": "7835:286:2",
															"trueBody": {
																"id": 1443,
																"nodeType": "Block",
																"src": "7863:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1438,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1420,
																							"src": "8065:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1437,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1189,
																						"src": "8054:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1439,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8054:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8074:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1436,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8046:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8046:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1442,
																		"nodeType": "ExpressionStatement",
																		"src": "8046:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1445,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "8141:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1430,
															"id": 1446,
															"nodeType": "Return",
															"src": "8134:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "7322:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7613:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7657:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7649:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7649:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7673:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7673:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7708:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7695:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7695:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7742:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7728:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7639:121:2"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "7784:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7784:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7783:14:2"
									},
									"scope": 1501,
									"src": "7604:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "8613:135:2",
										"statements": [
											{
												"condition": {
													"id": 1468,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1459,
													"src": "8627:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "8684:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "8706:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1474,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "8718:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1472,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "8698:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8698:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1476,
															"nodeType": "ExpressionStatement",
															"src": "8698:33:2"
														}
													]
												},
												"id": 1478,
												"nodeType": "IfStatement",
												"src": "8623:119:2",
												"trueBody": {
													"id": 1471,
													"nodeType": "Block",
													"src": "8636:42:2",
													"statements": [
														{
															"expression": {
																"id": 1469,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "8657:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1467,
															"id": 1470,
															"nodeType": "Return",
															"src": "8650:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "8238:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8462:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8493:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "8488:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8488:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8523:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "8510:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8557:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "8543:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8543:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8478:97:2"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "8599:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8599:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8598:14:2"
									},
									"scope": 1501,
									"src": "8453:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "8837:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1487,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "8913:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8913:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8933:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8913:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1497,
													"nodeType": "Block",
													"src": "9243:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1494,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1484,
																		"src": "9264:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1493,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9257:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9257:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1496,
															"nodeType": "ExpressionStatement",
															"src": "9257:20:2"
														}
													]
												},
												"id": 1498,
												"nodeType": "IfStatement",
												"src": "8909:379:2",
												"trueBody": {
													"id": 1492,
													"nodeType": "Block",
													"src": "8936:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9094:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9112:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9141:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9135:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9135:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9116:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9180:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9184:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9176:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9176:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9197:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9169:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9169:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9169:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1482,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9141:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 1482,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9184:10:2",
																	"valueSize": 1
																}
															],
															"id": 1491,
															"nodeType": "InlineAssembly",
															"src": "9085:142:2"
														}
													]
												}
											}
										]
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8763:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8784:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "8771:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8771:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8810:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "8796:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8796:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8770:53:2"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8837:0:2"
									},
									"scope": 1501,
									"src": "8754:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1502,
							"src": "126:9170:2",
							"usedErrors": []
						}
					],
					"src": "33:9263:2"
				},
				"id": 2
			},
			"brownie_projects/bebu_finance/contracts/utils/interfaces/IBasisAsset.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/utils/interfaces/IBasisAsset.sol",
					"exportedSymbols": {
						"IBasisAsset": [
							1540
						]
					},
					"id": 1541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1503,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBasisAsset",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1540,
							"linearizedBaseContracts": [
								1540
							],
							"name": "IBasisAsset",
							"nameLocation": "68:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "95:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "108:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "100:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "127:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "119:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "99:35:3"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "153:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "153:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:6:3"
									},
									"scope": 1540,
									"src": "86:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "174:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "187:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "179:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:16:3"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:0:3"
									},
									"scope": 1540,
									"src": "165:39:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 1524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "219:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "236:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "228:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "250:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "242:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:30:3"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:3"
									},
									"scope": 1540,
									"src": "210:57:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4456eda2",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "282:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:3"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "313:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "313:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:6:3"
									},
									"scope": 1540,
									"src": "273:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "570ca735",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nameLocation": "334:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:3"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "368:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:9:3"
									},
									"scope": 1540,
									"src": "325:52:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "29605e77",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOperator",
									"nameLocation": "392:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "newOperator_",
												"nameLocation": "417:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:22:3"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:0:3"
									},
									"scope": 1540,
									"src": "383:57:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1541,
							"src": "58:384:3",
							"usedErrors": []
						}
					],
					"src": "33:409:3"
				},
				"id": 3
			},
			"brownie_projects/bebu_finance/contracts/utils/interfaces/ITreasury.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/utils/interfaces/ITreasury.sol",
					"exportedSymbols": {
						"ITreasury": [
							1618
						]
					},
					"id": 1619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1542,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITreasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1618,
							"linearizedBaseContracts": [
								1618
							],
							"name": "ITreasury",
							"nameLocation": "68:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "42966c68",
									"id": 1547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "93:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "106:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "98:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "98:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "97:16:4"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "122:0:4"
									},
									"scope": 1618,
									"src": "84:39:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "138:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "155:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "147:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "169:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "161:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "146:30:4"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:0:4"
									},
									"scope": 1618,
									"src": "129:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4456eda2",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "201:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:4"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "232:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:6:4"
									},
									"scope": 1618,
									"src": "192:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "570ca735",
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nameLocation": "253:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:2:4"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "287:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:9:4"
									},
									"scope": 1618,
									"src": "244:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "29605e77",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOperator",
									"nameLocation": "311:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "newOperator_",
												"nameLocation": "336:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "328:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:22:4"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:0:4"
									},
									"scope": 1618,
									"src": "302:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "900cf0cf",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "epoch",
									"nameLocation": "374:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:2:4"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "405:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:9:4"
									},
									"scope": 1618,
									"src": "365:49:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5967c26",
									"id": 1579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nextEpochPoint",
									"nameLocation": "429:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:2:4"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "469:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "469:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:9:4"
									},
									"scope": 1618,
									"src": "420:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b94f50e",
									"id": 1584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "493:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:2:4"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "532:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:9:4"
									},
									"scope": 1618,
									"src": "484:57:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38140892",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRealtimeTokenIndexPrice",
									"nameLocation": "556:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:4"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "608:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:9:4"
									},
									"scope": 1618,
									"src": "547:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f7013ef6",
									"id": 1602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "632:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "643:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "share",
												"nameLocation": "666:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "658:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "681:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "673:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "boardroom",
												"nameLocation": "697:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "689:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "start_time",
												"nameLocation": "716:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "708:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:85:4"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:4"
									},
									"scope": 1618,
									"src": "623:114:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b756179",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allocateSeigniorage",
									"nameLocation": "752:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "782:0:4"
									},
									"scope": 1618,
									"src": "743:40:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "af14052c",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebase",
									"nameLocation": "798:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:2:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "825:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "825:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:6:4"
									},
									"scope": 1618,
									"src": "789:42:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f4ba0ee",
									"id": 1617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInitialPrice",
									"nameLocation": "846:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "_initialEpochTokenIndexPrice",
												"nameLocation": "870:28:4",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "862:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:38:4"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "918:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "918:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:6:4"
									},
									"scope": 1618,
									"src": "837:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1619,
							"src": "58:868:4",
							"usedErrors": []
						}
					],
					"src": "33:893:4"
				},
				"id": 4
			},
			"brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1930
						]
					},
					"id": 1931,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1620,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1621,
								"nodeType": "StructuredDocumentation",
								"src": "212:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1930,
							"linearizedBaseContracts": [
								1930
							],
							"name": "SafeMath",
							"nameLocation": "417:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "644:140:5",
										"statements": [
											{
												"id": 1651,
												"nodeType": "UncheckedBlock",
												"src": "654:124:5",
												"statements": [
													{
														"assignments": [
															1634
														],
														"declarations": [
															{
																"constant": false,
																"id": 1634,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "686:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 1651,
																"src": "678:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1633,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "678:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1638,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1635,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "690:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1636,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "694:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "690:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "678:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "713:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1640,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "717:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "713:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1646,
														"nodeType": "IfStatement",
														"src": "709:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "735:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1644,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "727:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1632,
															"id": 1645,
															"nodeType": "Return",
															"src": "720:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "759:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1648,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "765:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1649,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "758:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1632,
														"id": 1650,
														"nodeType": "Return",
														"src": "751:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "432:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "577:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "592:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "584:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "603:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "595:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:22:5"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "629:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "635:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "628:15:5"
									},
									"scope": 1930,
									"src": "568:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "1006:113:5",
										"statements": [
											{
												"id": 1679,
												"nodeType": "UncheckedBlock",
												"src": "1016:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1665,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "1044:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1666,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "1048:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1044:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1672,
														"nodeType": "IfStatement",
														"src": "1040:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1059:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1670,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1058:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1664,
															"id": 1671,
															"nodeType": "Return",
															"src": "1051:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1090:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1674,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1656,
																		"src": "1096:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1675,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "1100:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1096:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1677,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1089:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1664,
														"id": 1678,
														"nodeType": "Return",
														"src": "1082:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "790:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "939:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "954:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "946:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "965:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "957:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:22:5"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "991:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "991:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "997:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:15:5"
									},
									"scope": 1930,
									"src": "930:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "1343:417:5",
										"statements": [
											{
												"id": 1721,
												"nodeType": "UncheckedBlock",
												"src": "1353:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1693,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "1611:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1611:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1700,
														"nodeType": "IfStatement",
														"src": "1607:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1627:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1633:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1698,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1626:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1692,
															"id": 1699,
															"nodeType": "Return",
															"src": "1619:16:5"
														}
													},
													{
														"assignments": [
															1702
														],
														"declarations": [
															{
																"constant": false,
																"id": 1702,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1657:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 1721,
																"src": "1649:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1701,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1649:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1706,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1703,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "1661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1704,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "1665:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1661:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1649:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1707,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "1684:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1708,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "1688:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1684:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1710,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "1693:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1684:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1716,
														"nodeType": "IfStatement",
														"src": "1680:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1704:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1711:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1714,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1703:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1692,
															"id": 1715,
															"nodeType": "Return",
															"src": "1696:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1735:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1718,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "1741:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1719,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1734:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1692,
														"id": 1720,
														"nodeType": "Return",
														"src": "1727:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "1125:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1276:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1291:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1283:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1302:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1294:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:22:5"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1328:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1328:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1334:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:15:5"
									},
									"scope": 1930,
									"src": "1267:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "1985:114:5",
										"statements": [
											{
												"id": 1749,
												"nodeType": "UncheckedBlock",
												"src": "1995:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1735,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2028:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2023:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1742,
														"nodeType": "IfStatement",
														"src": "2019:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2039:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2046:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1740,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2038:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1734,
															"id": 1741,
															"nodeType": "Return",
															"src": "2031:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2070:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1744,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "2076:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1745,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "2080:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2076:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1747,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2069:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1734,
														"id": 1748,
														"nodeType": "Return",
														"src": "2062:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "1766:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1918:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1933:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1925:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1944:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1936:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:22:5"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1970:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1970:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1976:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:15:5"
									},
									"scope": 1930,
									"src": "1909:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "2334:114:5",
										"statements": [
											{
												"id": 1777,
												"nodeType": "UncheckedBlock",
												"src": "2344:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1763,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "2372:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2377:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2372:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1770,
														"nodeType": "IfStatement",
														"src": "2368:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2388:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2395:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1768,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2387:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1762,
															"id": 1769,
															"nodeType": "Return",
															"src": "2380:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2419:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1772,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "2425:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1756,
																		"src": "2429:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2425:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1775,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2418:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1762,
														"id": 1776,
														"nodeType": "Return",
														"src": "2411:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "2105:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2267:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2282:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2274:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2293:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2285:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:22:5"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2319:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2319:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2325:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:15:5"
									},
									"scope": 1930,
									"src": "2258:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "2750:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1789,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "2767:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1790,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "2771:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2767:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1792,
												"nodeType": "Return",
												"src": "2760:12:5"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "2454:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2692:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2715:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2707:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:22:5"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2741:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:9:5"
									},
									"scope": 1930,
									"src": "2683:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "3117:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "3134:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1805,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "3138:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3134:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1807,
												"nodeType": "Return",
												"src": "3127:12:5"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "2785:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3059:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3071:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3063:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3082:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3074:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3074:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:22:5"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3108:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:9:5"
									},
									"scope": 1930,
									"src": "3050:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "3460:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1819,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "3477:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1820,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "3481:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3477:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1818,
												"id": 1822,
												"nodeType": "Return",
												"src": "3470:12:5"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "3152:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3402:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3414:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "3406:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3425:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "3417:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:22:5"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "3451:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:9:5"
									},
									"scope": 1930,
									"src": "3393:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "3845:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1834,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "3862:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1835,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "3866:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3862:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1837,
												"nodeType": "Return",
												"src": "3855:12:5"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "3495:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3787:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3799:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "3791:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3810:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "3802:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:22:5"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "3836:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:9:5"
									},
									"scope": 1930,
									"src": "3778:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "4394:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1849,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1842,
														"src": "4411:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1850,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "4415:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4411:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1848,
												"id": 1852,
												"nodeType": "Return",
												"src": "4404:12:5"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "3880:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4336:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4348:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4340:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4359:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4351:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:22:5"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4385:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4385:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4384:9:5"
									},
									"scope": 1930,
									"src": "4327:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "5012:106:5",
										"statements": [
											{
												"id": 1877,
												"nodeType": "UncheckedBlock",
												"src": "5022:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1867,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "5054:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1868,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1857,
																		"src": "5059:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5054:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1870,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "5062:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1866,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5046:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5046:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1872,
														"nodeType": "ExpressionStatement",
														"src": "5046:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1873,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "5096:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1874,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "5100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5096:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1865,
														"id": 1876,
														"nodeType": "Return",
														"src": "5089:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "4429:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4896:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4917:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4909:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4936:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4928:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4928:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4961:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4947:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4947:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4899:80:5"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "5003:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5002:9:5"
									},
									"scope": 1930,
									"src": "4887:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "5727:105:5",
										"statements": [
											{
												"id": 1902,
												"nodeType": "UncheckedBlock",
												"src": "5737:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1892,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1884,
																		"src": "5769:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5773:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5769:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1895,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "5776:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1891,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5761:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5761:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1897,
														"nodeType": "ExpressionStatement",
														"src": "5761:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1898,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "5810:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1899,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "5814:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5810:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1890,
														"id": 1901,
														"nodeType": "Return",
														"src": "5803:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "5124:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5611:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5632:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "5624:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5651:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "5643:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5676:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "5662:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5662:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5614:80:5"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "5718:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5718:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5717:9:5"
									},
									"scope": 1930,
									"src": "5602:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "6603:105:5",
										"statements": [
											{
												"id": 1927,
												"nodeType": "UncheckedBlock",
												"src": "6613:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1917,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "6645:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6649:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6645:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1920,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "6652:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1916,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6637:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6637:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1922,
														"nodeType": "ExpressionStatement",
														"src": "6637:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1923,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "6686:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1924,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "6690:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6686:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1915,
														"id": 1926,
														"nodeType": "Return",
														"src": "6679:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "5838:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6487:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6508:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "6500:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6500:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6527:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "6519:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6519:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6552:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "6538:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1910,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6538:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6490:80:5"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "6594:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6593:9:5"
									},
									"scope": 1930,
									"src": "6478:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1931,
							"src": "409:6301:5",
							"usedErrors": []
						}
					],
					"src": "33:6677:5"
				},
				"id": 5
			},
			"brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/utils/security/ContractGuard.sol",
					"exportedSymbols": {
						"ContractGuard": [
							2005
						]
					},
					"id": 2006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1932,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ContractGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2005,
							"linearizedBaseContracts": [
								2005
							],
							"name": "ContractGuard",
							"nameLocation": "67:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1938,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "140:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2005,
									"src": "87:60:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 1937,
										"keyType": {
											"id": 1933,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "95:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "87:44:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueType": {
											"id": 1936,
											"keyType": {
												"id": 1934,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "114:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "106:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1935,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "125:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "221:56:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1943,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "238:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(uint256 => mapping(address => bool))"
															}
														},
														"id": 1946,
														"indexExpression": {
															"expression": {
																"id": 1944,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "246:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "246:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "238:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1949,
													"indexExpression": {
														"expression": {
															"id": 1947,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967270,
															"src": "260:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"src": "260:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "238:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1942,
												"id": 1950,
												"nodeType": "Return",
												"src": "231:39:6"
											}
										]
									},
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSameOriginReentranted",
									"nameLocation": "163:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:2:6"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "215:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1940,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "215:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:6:6"
									},
									"scope": 2005,
									"src": "154:123:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "350:57:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1957,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "367:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(uint256 => mapping(address => bool))"
															}
														},
														"id": 1960,
														"indexExpression": {
															"expression": {
																"id": 1958,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "375:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "375:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "367:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1963,
													"indexExpression": {
														"expression": {
															"id": 1961,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "389:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "389:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "367:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1956,
												"id": 1964,
												"nodeType": "Return",
												"src": "360:40:6"
											}
										]
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkSameSenderReentranted",
									"nameLocation": "292:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:6"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "344:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "344:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:6:6"
									},
									"scope": 2005,
									"src": "283:124:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "437:299:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "455:29:6",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1969,
																	"name": "checkSameOriginReentranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "456:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "456:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e652066756e6374696f6e",
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "486:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502",
																"typeString": "literal_string \"ContractGuard: one block, one function\""
															},
															"value": "ContractGuard: one block, one function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502",
																"typeString": "literal_string \"ContractGuard: one block, one function\""
															}
														],
														"id": 1968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "447:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "447:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1974,
												"nodeType": "ExpressionStatement",
												"src": "447:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "545:29:6",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1976,
																	"name": "checkSameSenderReentranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "546:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "546:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637447756172643a206f6e6520626c6f636b2c206f6e652066756e6374696f6e",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "576:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502",
																"typeString": "literal_string \"ContractGuard: one block, one function\""
															},
															"value": "ContractGuard: one block, one function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1e2c4892d0aa9f6b97d6737aa6d34bdfd0925c87b6c1a8077d7cb1ba9fb3502",
																"typeString": "literal_string \"ContractGuard: one block, one function\""
															}
														],
														"id": 1975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "537:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "537:80:6"
											},
											{
												"expression": {
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1982,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "628:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1987,
															"indexExpression": {
																"expression": {
																	"id": 1983,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "636:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "636:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "628:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1988,
														"indexExpression": {
															"expression": {
																"id": 1985,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "650:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "650:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "628:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "663:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "628:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "628:39:6"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1992,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "677:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1997,
															"indexExpression": {
																"expression": {
																	"id": 1993,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "685:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "685:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "677:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1998,
														"indexExpression": {
															"expression": {
																"id": 1995,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "699:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "699:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "677:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "713:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "677:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "677:40:6"
											},
											{
												"id": 2002,
												"nodeType": "PlaceholderStatement",
												"src": "728:1:6"
											}
										]
									},
									"id": 2004,
									"name": "onlyOneBlock",
									"nameLocation": "422:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:6"
									},
									"src": "413:323:6",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2006,
							"src": "58:680:6",
							"usedErrors": []
						}
					],
					"src": "33:705:6"
				},
				"id": 6
			},
			"brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2083
						]
					},
					"id": 2084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2007,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2008,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:7",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2083,
							"linearizedBaseContracts": [
								2083
							],
							"name": "IERC20",
							"nameLocation": "212:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:7",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:7"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "342:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:7"
									},
									"scope": 2083,
									"src": "296:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2015,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:7",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "453:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:7"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "493:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:7"
									},
									"scope": 2083,
									"src": "434:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:7",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "733:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "745:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:7"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "779:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:7"
									},
									"scope": 2083,
									"src": "715:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2042,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "1079:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "1094:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:7"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "1134:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:7"
									},
									"scope": 2083,
									"src": "1060:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:7",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "1813:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "1830:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:7"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "1864:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2049,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:7"
									},
									"scope": 2083,
									"src": "1796:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:7",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2199:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2221:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2241:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:7"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2280:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2061,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:7"
									},
									"scope": 2083,
									"src": "2168:118:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2073,
									"name": "Transfer",
									"nameLocation": "2461:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "2470:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "2492:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "2512:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:7"
									},
									"src": "2455:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2082,
									"name": "Approval",
									"nameLocation": "2692:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "2701:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "2724:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "2749:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:7"
									},
									"src": "2686:78:7"
								}
							],
							"scope": 2084,
							"src": "202:2564:7",
							"usedErrors": []
						}
					],
					"src": "106:2660:7"
				},
				"id": 7
			},
			"brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol": {
				"ast": {
					"absolutePath": "brownie_projects/bebu_finance/contracts/utils/token/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1501
						],
						"IERC20": [
							2083
						],
						"SafeERC20": [
							2308
						],
						"SafeMath": [
							1930
						]
					},
					"id": 2309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2085,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/token/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2086,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2309,
							"sourceUnit": 2084,
							"src": "58:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/math/SafeMath.sol",
							"file": "../math/SafeMath.sol",
							"id": 2087,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2309,
							"sourceUnit": 1931,
							"src": "81:30:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/bebu_finance/contracts/utils/Address.sol",
							"file": "../Address.sol",
							"id": 2088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2309,
							"sourceUnit": 1502,
							"src": "112:24:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2089,
								"nodeType": "StructuredDocumentation",
								"src": "138:457:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2308,
							"linearizedBaseContracts": [
								2308
							],
							"name": "SafeERC20",
							"nameLocation": "604:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2092,
									"libraryName": {
										"id": 2090,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1501,
										"src": "626:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "620:26:8",
									"typeName": {
										"id": 2091,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "638:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "724:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2103,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "754:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2106,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "784:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2083",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2032,
																		"src": "784:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "784:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2109,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2097,
																	"src": "809:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2110,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "813:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2104,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "761:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "761:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "761:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2102,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "734:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "734:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2113,
												"nodeType": "ExpressionStatement",
												"src": "734:86:8"
											}
										]
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "661:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "681:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "674:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2093,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "674:6:8"
													},
													"referencedDeclaration": 2083,
													"src": "674:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "696:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "688:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "700:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:41:8"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:0:8"
									},
									"scope": 2308,
									"src": "652:175:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "923:113:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2128,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "953:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2131,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "983:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2083",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2064,
																		"src": "983:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "983:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2134,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "1012:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2135,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "1018:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2136,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2124,
																	"src": "1022:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2129,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "960:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "960:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "960:68:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2127,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "933:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "933:96:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2139,
												"nodeType": "ExpressionStatement",
												"src": "933:96:8"
											}
										]
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "842:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "866:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "859:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2117,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2116,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "859:6:8"
													},
													"referencedDeclaration": 2083,
													"src": "859:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "881:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "873:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "895:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "887:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "907:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "899:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:55:8"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:0:8"
									},
									"scope": 2308,
									"src": "833:203:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2184,
										"nodeType": "Block",
										"src": "1372:497:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2153,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2149,
																			"src": "1621:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1630:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1621:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2156,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1620:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2161,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1661:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2308",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2308",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1653:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2159,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1653:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1653:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2163,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2147,
																					"src": "1668:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2157,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "1637:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2083",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2042,
																				"src": "1637:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1637:39:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1680:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1637:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2167,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1636:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1620:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1696:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1599:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1599:163:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2171,
												"nodeType": "ExpressionStatement",
												"src": "1599:163:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2173,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "1792:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2176,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2145,
																			"src": "1822:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2083",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2052,
																		"src": "1822:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1822:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2179,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2147,
																	"src": "1846:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2180,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2149,
																	"src": "1855:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2174,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1799:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1799:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1799:62:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2172,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "1772:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "1772:90:8"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "1042:249:8",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1305:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1324:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1317:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2143,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "1317:6:8"
													},
													"referencedDeclaration": 2083,
													"src": "1317:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1339:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1331:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1356:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1348:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:46:8"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:0:8"
									},
									"scope": 2308,
									"src": "1296:573:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "1961:194:8",
										"statements": [
											{
												"assignments": [
													2196
												],
												"declarations": [
													{
														"constant": false,
														"id": 2196,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1979:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2220,
														"src": "1971:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1971:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2207,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2201,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2018:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$2308",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$2308",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2010:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2199,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2010:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2010:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2203,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "2025:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2197,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "1994:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2083",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2042,
															"src": "1994:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1994:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2205,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2192,
														"src": "2036:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1994:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1971:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2209,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "2071:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2212,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2188,
																			"src": "2101:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2083",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2052,
																		"src": "2101:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2101:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2215,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "2125:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2216,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "2134:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2210,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2078:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2078:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2078:69:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2208,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "2051:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2219,
												"nodeType": "ExpressionStatement",
												"src": "2051:97:8"
											}
										]
									},
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1884:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1913:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1906:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2186,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "1906:6:8"
													},
													"referencedDeclaration": 2083,
													"src": "1906:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1928:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1920:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1945:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1937:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:46:8"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1961:0:8"
									},
									"scope": 2308,
									"src": "1875:280:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "2247:370:8",
										"statements": [
											{
												"id": 2267,
												"nodeType": "UncheckedBlock",
												"src": "2257:354:8",
												"statements": [
													{
														"assignments": [
															2232
														],
														"declarations": [
															{
																"constant": false,
																"id": 2232,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2289:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 2267,
																"src": "2281:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2231,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2281:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2241,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2237,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2328:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2308",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2308",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2235,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2239,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "2335:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2233,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "2304:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2083",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2042,
																"src": "2304:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2304:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2281:62:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2243,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2232,
																		"src": "2365:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2244,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2228,
																		"src": "2381:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2365:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2388:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2242,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2357:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2357:75:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2248,
														"nodeType": "ExpressionStatement",
														"src": "2357:75:8"
													},
													{
														"assignments": [
															2250
														],
														"declarations": [
															{
																"constant": false,
																"id": 2250,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2454:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 2267,
																"src": "2446:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2249,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2446:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2254,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2251,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2232,
																"src": "2469:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2252,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2228,
																"src": "2484:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2469:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2446:43:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2256,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2224,
																	"src": "2523:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2083",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2259,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "2553:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2083",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2052,
																				"src": "2553:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2553:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2262,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "2577:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2263,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "2586:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2257,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2530:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2530:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2530:69:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2083",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2255,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2307,
																"src": "2503:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2083_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2503:97:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2266,
														"nodeType": "ExpressionStatement",
														"src": "2503:97:8"
													}
												]
											}
										]
									},
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2170:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2199:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "2192:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2223,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2222,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "2192:6:8"
													},
													"referencedDeclaration": 2083,
													"src": "2192:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "2206:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2231:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "2223:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:46:8"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2247:0:8"
									},
									"scope": 2308,
									"src": "2161:456:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "3070:636:8",
										"statements": [
											{
												"assignments": [
													2279
												],
												"declarations": [
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3432:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2306,
														"src": "3419:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2278,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3419:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"arguments": [
														{
															"id": 2285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2275,
															"src": "3473:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3479:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2282,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "3453:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2083",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2083",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3445:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2280,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3445:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3445:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1261,
														"src": "3445:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3445:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3419:95:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2289,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "3528:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3528:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3548:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3528:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2305,
												"nodeType": "IfStatement",
												"src": "3524:176:8",
												"trueBody": {
													"id": 2304,
													"nodeType": "Block",
													"src": "3551:149:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2296,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2279,
																				"src": "3623:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3636:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2297,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3636:4:8",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3635:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2294,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3612:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3612:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3612:30:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3644:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2293,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3604:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3604:85:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2303,
															"nodeType": "ExpressionStatement",
															"src": "3604:85:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "2623:372:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3009:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3036:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "3029:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2271,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2083,
														"src": "3029:6:8"
													},
													"referencedDeclaration": 2083,
													"src": "3029:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3056:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "3043:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3043:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:33:8"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3070:0:8"
									},
									"scope": 2308,
									"src": "3000:706:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2309,
							"src": "596:3112:8",
							"usedErrors": []
						}
					],
					"src": "33:3675:8"
				},
				"id": 8
			}
		}
	}
}