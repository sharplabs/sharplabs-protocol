{
	"id": "72610c114f924b78d278dada61b0d052",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\nimport \"../utils/token/IERC20.sol\";\nimport \"../utils/token/SafeERC20.sol\";\n\ncontract ShareWrapper {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    IERC20 public share;\n\n    struct TotalSupply {\n        uint256 wait;\n        uint256 staked;\n        uint256 withdraw;\n    }\n\n    struct Balances {\n        uint256 wait;\n        uint256 staked;\n        uint256 withdraw;\n    }\n\n    mapping(address => Balances) internal _balances;\n    TotalSupply internal _totalSupply;\n\n    function totalSupply_wait() public view returns (uint256) {\n        return _totalSupply.wait;\n    }\n\n    function totalSupply_staked() public view returns (uint256) {\n        return _totalSupply.staked;\n    }\n\n    function totalSupply_withdraw() public view returns (uint256) {\n        return _totalSupply.withdraw;\n    }\n\n    function balance_Wait(address account) public view returns (uint256) {\n        return _balances[account].wait;\n    }\n\n    function balance_staked(address account) public view returns (uint256) {\n        return _balances[account].staked;\n    }\n\n    function balance_withdraw(address account) public view returns (uint256) {\n        return _balances[account].withdraw;\n    }\n\n    function stake(uint256 amount) public virtual {\n        _totalSupply.wait = _totalSupply.wait.add(amount);\n        _balances[msg.sender].wait = _balances[msg.sender].wait.add(amount);\n        share.safeTransferFrom(msg.sender, address(this), amount);\n    }\n\n    function withdraw(uint256 amount) public virtual {\n        uint256 memberShare = _balances[msg.sender].withdraw;\n        require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\");\n        _totalSupply.withdraw = _totalSupply.withdraw.sub(amount);\n        _balances[msg.sender].withdraw = memberShare.sub(amount);\n        share.safeTransfer(msg.sender, amount);\n    }\n}"
			},
			"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\nimport \"./IERC20.sol\";\nimport \"../math/SafeMath.sol\";\nimport \"../Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"brownie_projects/sharplabs/contracts/utils/token/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity 0.8.13;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"brownie_projects/sharplabs/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}"
			},
			"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol": {
				"ShareWrapper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balance_Wait",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balance_staked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balance_withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "share",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply_staked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply_wait",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply_withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":134:1917  contract ShareWrapper {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":134:1917  contract ShareWrapper {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x649e4a52\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x649e4a52\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x93ba4f66\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa8d5fd65\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xeabba145\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x1e7e936d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x40d1fb87\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x62d45f8f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":765:872  function totalSupply_withdraw() public view returns (uint256) {... */\n    tag_3:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":844:865  _totalSupply.withdraw */\n      sload(0x04)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":765:872  function totalSupply_withdraw() public view returns (uint256) {... */\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":765:872  function totalSupply_withdraw() public view returns (uint256) {... */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1518:1915  function withdraw(uint256 amount) public virtual {... */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":551:650  function totalSupply_wait() public view returns (uint256) {... */\n    tag_5:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":626:638  _totalSupply */\n      0x02\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":626:643  _totalSupply.wait */\n      sload\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":551:650  function totalSupply_wait() public view returns (uint256) {... */\n      jump(tag_13)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1126:1250  function balance_withdraw(address account) public view returns (uint256) {... */\n    tag_6:\n      tag_13\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1216:1234  _balances[account] */\n      and\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1190:1197  uint256 */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1216:1234  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1216:1225  _balances */\n      0x01\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1216:1234  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1216:1243  _balances[account].withdraw */\n      0x02\n      add\n      sload\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1126:1250  function balance_withdraw(address account) public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":656:759  function totalSupply_staked() public view returns (uint256) {... */\n    tag_7:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":733:752  _totalSupply.staked */\n      sload(0x03)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":656:759  function totalSupply_staked() public view returns (uint256) {... */\n      jump(tag_13)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":878:994  function balance_Wait(address account) public view returns (uint256) {... */\n    tag_8:\n      tag_13\n      tag_33\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":964:982  _balances[account] */\n      and\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":938:945  uint256 */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":964:982  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":964:973  _balances */\n      0x01\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":964:982  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":964:987  _balances[account].wait */\n      sload\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":878:994  function balance_Wait(address account) public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1256:1512  function stake(uint256 amount) public virtual {... */\n    tag_9:\n      tag_17\n      tag_37\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":227:246  IERC20 public share */\n    tag_10:\n      sload(0x00)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":850:882   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":832:883   */\n      dup2\n      mstore\n        /* \"#utility.yul\":820:822   */\n      0x20\n        /* \"#utility.yul\":805:823   */\n      add\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":227:246  IERC20 public share */\n      tag_15\n        /* \"#utility.yul\":672:889   */\n      jump\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1000:1120  function balance_staked(address account) public view returns (uint256) {... */\n    tag_11:\n      tag_13\n      tag_44\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1088:1106  _balances[account] */\n      and\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1062:1069  uint256 */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1088:1106  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1088:1097  _balances */\n      0x01\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1088:1106  _balances[account] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1088:1113  _balances[account].staked */\n      add\n      sload\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1000:1120  function balance_staked(address account) public view returns (uint256) {... */\n      jump\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1518:1915  function withdraw(uint256 amount) public virtual {... */\n    tag_20:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1609:1619  msg.sender */\n      caller\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1577:1596  uint256 memberShare */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1599:1620  _balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1599:1608  _balances */\n      0x01\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1599:1620  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1599:1629  _balances[msg.sender].withdraw */\n      0x02\n      add\n      sload\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1647:1668  memberShare >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1639:1727  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1096:1098   */\n      0x20\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1639:1727  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1078:1099   */\n      mstore\n        /* \"#utility.yul\":1135:1137   */\n      0x36\n        /* \"#utility.yul\":1115:1133   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1108:1138   */\n      mstore\n        /* \"#utility.yul\":1174:1208   */\n      0x426f617264726f6f6d3a20776974686472617720726571756573742067726561\n        /* \"#utility.yul\":1154:1172   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1147:1209   */\n      mstore\n      shl(0x52, 0x1d195c881d1a185b881cdd185ad95908185b5bdd5b9d)\n        /* \"#utility.yul\":1225:1243   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1218:1270   */\n      mstore\n        /* \"#utility.yul\":1287:1306   */\n      0x84\n      add\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1639:1727  require(memberShare >= amount, \"Boardroom: withdraw request greater than staked amount\") */\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1761:1782  _totalSupply.withdraw */\n      sload(0x04)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1761:1794  _totalSupply.withdraw.sub(amount) */\n      tag_52\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1787:1793  amount */\n      dup4\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1761:1786  _totalSupply.withdraw.sub */\n      tag_53\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1761:1794  _totalSupply.withdraw.sub(amount) */\n      jump\t// in\n    tag_52:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1737:1758  _totalSupply.withdraw */\n      0x04\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1737:1794  _totalSupply.withdraw = _totalSupply.withdraw.sub(amount) */\n      sstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1837:1860  memberShare.sub(amount) */\n      tag_54\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1837:1848  memberShare */\n      dup2\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1853:1859  amount */\n      dup4\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1837:1852  memberShare.sub */\n      tag_53\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1837:1860  memberShare.sub(amount) */\n      jump\t// in\n    tag_54:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1814:1824  msg.sender */\n      caller\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1804:1825  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1804:1813  _balances */\n      0x01\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1804:1825  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1804:1834  _balances[msg.sender].withdraw */\n      0x02\n      add\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1804:1860  _balances[msg.sender].withdraw = memberShare.sub(amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1870:1875  share */\n      swap1\n      sload\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1870:1908  share.safeTransfer(msg.sender, amount) */\n      tag_55\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1870:1875  share */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1901:1907  amount */\n      dup5\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1870:1888  share.safeTransfer */\n      tag_56\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1870:1908  share.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_55:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1567:1915  {... */\n      pop\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1518:1915  function withdraw(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1256:1512  function stake(uint256 amount) public virtual {... */\n    tag_38:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1332:1344  _totalSupply */\n      0x02\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1332:1349  _totalSupply.wait */\n      sload\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1332:1361  _totalSupply.wait.add(amount) */\n      tag_62\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1354:1360  amount */\n      dup3\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1332:1353  _totalSupply.wait.add */\n      tag_63\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1332:1361  _totalSupply.wait.add(amount) */\n      jump\t// in\n    tag_62:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1312:1324  _totalSupply */\n      0x02\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1312:1361  _totalSupply.wait = _totalSupply.wait.add(amount) */\n      sstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1410:1420  msg.sender */\n      caller\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1312:1329  _totalSupply.wait */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1400:1421  _balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1400:1409  _balances */\n      0x01\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1400:1421  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1400:1426  _balances[msg.sender].wait */\n      sload\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1400:1438  _balances[msg.sender].wait.add(amount) */\n      tag_64\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1431:1437  amount */\n      dup3\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1400:1430  _balances[msg.sender].wait.add */\n      tag_63\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1400:1438  _balances[msg.sender].wait.add(amount) */\n      jump\t// in\n    tag_64:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1381:1391  msg.sender */\n      caller\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1371:1392  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1371:1380  _balances */\n      0x01\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1371:1392  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1371:1438  _balances[msg.sender].wait = _balances[msg.sender].wait.add(amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1448:1453  share */\n      swap1\n      sload\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1448:1505  share.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_65\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1448:1453  share */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1491:1495  this */\n      address\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1498:1504  amount */\n      dup5\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1448:1470  share.safeTransferFrom */\n      tag_66\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1448:1505  share.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_65:\n        /* \"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":1256:1512  function stake(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":3050:3146  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_53:\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":3108:3115  uint256 */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":3134:3139  a - b */\n      tag_69\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":3138:3139  b */\n      dup3\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":3134:3135  a */\n      dup5\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":3134:3139  a - b */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":3127:3139  return a - b */\n      swap4\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":3050:3146  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":652:827  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_56:\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1771:1803   */\n      dup4\n      and\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1753:1804   */\n      mstore\n        /* \"#utility.yul\":1820:1838   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":1813:1847   */\n      dup3\n      swap1\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":734:820  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_72\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":754:759  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":784:807  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":1726:1744   */\n      0x64\n      add\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":761:819  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_73:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":734:753  _callOptionalReturn */\n      tag_75\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":734:820  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_72:\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":652:827  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":2683:2779  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_63:\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":2741:2748  uint256 */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":2767:2772  a + b */\n      tag_69\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":2771:2772  b */\n      dup3\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":2767:2768  a */\n      dup5\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":2767:2772  a + b */\n      tag_78\n      jump\t// in\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":833:1036  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_66:\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2249:2264   */\n      dup1\n      dup6\n      and\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2231:2265   */\n      mstore\n        /* \"#utility.yul\":2301:2316   */\n      dup4\n      and\n        /* \"#utility.yul\":2281:2299   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2274:2317   */\n      mstore\n        /* \"#utility.yul\":2333:2351   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":2326:2360   */\n      dup3\n      swap1\n      mstore\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":933:1029  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_80\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":953:958  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":983:1010  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":2166:2184   */\n      0x84\n      add\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":960:1028  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_73\n        /* \"#utility.yul\":1991:2366   */\n      jump\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":933:1029  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_80:\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":833:1036  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3000:3706  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_75:\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3419:3442  bytes memory returndata */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_84\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3473:3477  data */\n      dup3\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3453:3458  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3445:3472  address(token).functionCall */\n      and\n      tag_85\n      swap1\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3445:3514  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3528:3545  returndata.length */\n      dup1\n      mload\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3419:3514  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3528:3549  returndata.length > 0 */\n      iszero\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3524:3700  if (returndata.length > 0) {... */\n      tag_72\n      jumpi\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3623:3633  returndata */\n      dup1\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3612:3642  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2855:2857   */\n      0x20\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2837:2858   */\n      mstore\n        /* \"#utility.yul\":2894:2896   */\n      0x2a\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2867:2897   */\n      mstore\n        /* \"#utility.yul\":2933:2967   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":2913:2931   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2906:2968   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":2984:3002   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2977:3017   */\n      mstore\n        /* \"#utility.yul\":3034:3053   */\n      0x84\n      add\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":3604:3689  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_50\n        /* \"#utility.yul\":2653:3059   */\n      jump\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4041:4264  function functionCall(... */\n    tag_85:\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4174:4186  bytes memory */\n      0x60\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4205:4257  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_93\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4227:4233  target */\n      dup5\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4235:4239  data */\n      dup5\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4241:4242  0 */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4244:4256  errorMessage */\n      dup6\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4205:4226  functionCallWithValue */\n      tag_94\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4205:4257  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_93:\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4198:4257  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":4041:4264  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5098:5544  function functionCallWithValue(... */\n    tag_94:\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5263:5275  bytes memory */\n      0x60\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5320:5325  value */\n      dup3\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5295:5316  address(this).balance */\n      selfbalance\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5295:5325  address(this).balance >= value */\n      lt\n      iszero\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5287:5368  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3266:3268   */\n      0x20\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5287:5368  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3248:3269   */\n      mstore\n        /* \"#utility.yul\":3305:3307   */\n      0x26\n        /* \"#utility.yul\":3285:3303   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3278:3308   */\n      mstore\n        /* \"#utility.yul\":3344:3378   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":3324:3342   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3317:3379   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":3395:3413   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3388:3424   */\n      mstore\n        /* \"#utility.yul\":3441:3460   */\n      0x84\n      add\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5287:5368  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_50\n        /* \"#utility.yul\":3064:3466   */\n      jump\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5287:5368  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_96:\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5379:5391  bool success */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5393:5416  bytes memory returndata */\n      dup1\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5420:5426  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5420:5431  target.call */\n      and\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5439:5444  value */\n      dup6\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5446:5450  data */\n      dup8\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5420:5451  target.call{value: value}(data) */\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_103\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_102)\n    tag_103:\n      0x60\n      swap2\n      pop\n    tag_102:\n      pop\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5378:5451  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5468:5537  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_104\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5495:5501  target */\n      dup8\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5503:5510  success */\n      dup4\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5512:5522  returndata */\n      dup4\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5524:5536  errorMessage */\n      dup8\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5468:5494  verifyCallResultFromTarget */\n      tag_105\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5468:5537  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_104:\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5461:5537  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap8\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":5098:5544  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7604:8232  function verifyCallResultFromTarget(... */\n    tag_105:\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7784:7796  bytes memory */\n      0x60\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7812:7819  success */\n      dup4\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7808:8226  if (success) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7839:7849  returndata */\n      dup3\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7839:7856  returndata.length */\n      mload\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7860:7861  0 */\n      0x00\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7839:7861  returndata.length == 0 */\n      sub\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7835:8121  if (returndata.length == 0) {... */\n      tag_111\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":1634:1653  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4215:4217   */\n      0x20\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4197:4218   */\n      mstore\n        /* \"#utility.yul\":4254:4256   */\n      0x1d\n        /* \"#utility.yul\":4234:4252   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4227:4257   */\n      mstore\n        /* \"#utility.yul\":4293:4324   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":4273:4291   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4266:4325   */\n      mstore\n        /* \"#utility.yul\":4342:4360   */\n      0x64\n      add\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n      tag_50\n        /* \"#utility.yul\":4013:4366   */\n      jump\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8046:8106  require(isContract(target), \"Address: call to non-contract\") */\n    tag_111:\n      pop\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8141:8151  returndata */\n      dup2\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8134:8151  return returndata */\n      jump(tag_93)\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":7808:8226  if (success) {... */\n    tag_107:\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8182:8215  _revert(returndata, errorMessage) */\n      tag_93\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8190:8200  returndata */\n      dup4\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8202:8214  errorMessage */\n      dup4\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8913:8930  returndata.length */\n      dup2\n      mload\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8913:8934  returndata.length > 0 */\n      iszero\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8909:9288  if (returndata.length > 0) {... */\n      tag_119\n      jumpi\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9141:9151  returndata */\n      dup2\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9135:9152  mload(returndata) */\n      mload\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9197:9212  returndata_size */\n      dup1\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9184:9194  returndata */\n      dup4\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9180:9182  32 */\n      0x20\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9176:9195  add(32, returndata) */\n      add\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9169:9213  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":8909:9288  if (returndata.length > 0) {... */\n    tag_119:\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9264:9276  errorMessage */\n      dup1\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":9257:9277  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n        /* \"#utility.yul\":196:376   */\n    tag_19:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_128:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:667   */\n    tag_26:\n        /* \"#utility.yul\":440:446   */\n      0x00\n        /* \"#utility.yul\":493:495   */\n      0x20\n        /* \"#utility.yul\":481:490   */\n      dup3\n        /* \"#utility.yul\":472:479   */\n      dup5\n        /* \"#utility.yul\":468:491   */\n      sub\n        /* \"#utility.yul\":464:496   */\n      slt\n        /* \"#utility.yul\":461:513   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":509:510   */\n      0x00\n        /* \"#utility.yul\":506:507   */\n      dup1\n        /* \"#utility.yul\":499:511   */\n      revert\n        /* \"#utility.yul\":461:513   */\n    tag_130:\n        /* \"#utility.yul\":535:558   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":587:618   */\n      dup2\n      and\n        /* \"#utility.yul\":577:619   */\n      dup2\n      eq\n        /* \"#utility.yul\":567:637   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":633:634   */\n      0x00\n        /* \"#utility.yul\":630:631   */\n      dup1\n        /* \"#utility.yul\":623:635   */\n      revert\n        /* \"#utility.yul\":1317:1444   */\n    tag_123:\n        /* \"#utility.yul\":1378:1388   */\n      0x4e487b71\n        /* \"#utility.yul\":1373:1376   */\n      0xe0\n        /* \"#utility.yul\":1369:1389   */\n      shl\n        /* \"#utility.yul\":1366:1367   */\n      0x00\n        /* \"#utility.yul\":1359:1390   */\n      mstore\n        /* \"#utility.yul\":1409:1413   */\n      0x11\n        /* \"#utility.yul\":1406:1407   */\n      0x04\n        /* \"#utility.yul\":1399:1414   */\n      mstore\n        /* \"#utility.yul\":1433:1437   */\n      0x24\n        /* \"#utility.yul\":1430:1431   */\n      0x00\n        /* \"#utility.yul\":1423:1438   */\n      revert\n        /* \"#utility.yul\":1449:1574   */\n    tag_70:\n        /* \"#utility.yul\":1489:1493   */\n      0x00\n        /* \"#utility.yul\":1517:1518   */\n      dup3\n        /* \"#utility.yul\":1514:1515   */\n      dup3\n        /* \"#utility.yul\":1511:1519   */\n      lt\n        /* \"#utility.yul\":1508:1542   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":1522:1540   */\n      tag_137\n      tag_123\n      jump\t// in\n    tag_137:\n      pop\n        /* \"#utility.yul\":1559:1568   */\n      sub\n      swap1\n        /* \"#utility.yul\":1449:1574   */\n      jump\t// out\n        /* \"#utility.yul\":1858:1986   */\n    tag_78:\n        /* \"#utility.yul\":1898:1901   */\n      0x00\n        /* \"#utility.yul\":1929:1930   */\n      dup3\n        /* \"#utility.yul\":1925:1931   */\n      not\n        /* \"#utility.yul\":1922:1923   */\n      dup3\n        /* \"#utility.yul\":1919:1932   */\n      gt\n        /* \"#utility.yul\":1916:1955   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":1935:1953   */\n      tag_141\n      tag_123\n      jump\t// in\n    tag_141:\n      pop\n        /* \"#utility.yul\":1971:1980   */\n      add\n      swap1\n        /* \"#utility.yul\":1858:1986   */\n      jump\t// out\n        /* \"#utility.yul\":2371:2648   */\n    tag_88:\n        /* \"#utility.yul\":2438:2444   */\n      0x00\n        /* \"#utility.yul\":2491:2493   */\n      0x20\n        /* \"#utility.yul\":2479:2488   */\n      dup3\n        /* \"#utility.yul\":2470:2477   */\n      dup5\n        /* \"#utility.yul\":2466:2489   */\n      sub\n        /* \"#utility.yul\":2462:2494   */\n      slt\n        /* \"#utility.yul\":2459:2511   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2507:2508   */\n      0x00\n        /* \"#utility.yul\":2504:2505   */\n      dup1\n        /* \"#utility.yul\":2497:2509   */\n      revert\n        /* \"#utility.yul\":2459:2511   */\n    tag_144:\n        /* \"#utility.yul\":2539:2548   */\n      dup2\n        /* \"#utility.yul\":2533:2549   */\n      mload\n        /* \"#utility.yul\":2592:2597   */\n      dup1\n        /* \"#utility.yul\":2585:2598   */\n      iszero\n        /* \"#utility.yul\":2578:2599   */\n      iszero\n        /* \"#utility.yul\":2571:2576   */\n      dup2\n        /* \"#utility.yul\":2568:2600   */\n      eq\n        /* \"#utility.yul\":2558:2618   */\n      tag_69\n      jumpi\n        /* \"#utility.yul\":2614:2615   */\n      0x00\n        /* \"#utility.yul\":2611:2612   */\n      dup1\n        /* \"#utility.yul\":2604:2616   */\n      revert\n        /* \"#utility.yul\":3471:3729   */\n    tag_124:\n        /* \"#utility.yul\":3543:3544   */\n      0x00\n        /* \"#utility.yul\":3553:3666   */\n    tag_149:\n        /* \"#utility.yul\":3567:3573   */\n      dup4\n        /* \"#utility.yul\":3564:3565   */\n      dup2\n        /* \"#utility.yul\":3561:3574   */\n      lt\n        /* \"#utility.yul\":3553:3666   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":3643:3654   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3637:3655   */\n      mload\n        /* \"#utility.yul\":3624:3635   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3617:3656   */\n      mstore\n        /* \"#utility.yul\":3589:3591   */\n      0x20\n        /* \"#utility.yul\":3582:3592   */\n      add\n        /* \"#utility.yul\":3553:3666   */\n      jump(tag_149)\n    tag_151:\n        /* \"#utility.yul\":3684:3690   */\n      dup4\n        /* \"#utility.yul\":3681:3682   */\n      dup2\n        /* \"#utility.yul\":3678:3691   */\n      gt\n        /* \"#utility.yul\":3675:3723   */\n      iszero\n      tag_80\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":3719:3720   */\n      0x00\n        /* \"#utility.yul\":3701:3717   */\n      swap2\n      add\n        /* \"#utility.yul\":3694:3721   */\n      mstore\n        /* \"#utility.yul\":3471:3729   */\n      jump\t// out\n        /* \"#utility.yul\":3734:4008   */\n    tag_100:\n        /* \"#utility.yul\":3863:3866   */\n      0x00\n        /* \"#utility.yul\":3901:3907   */\n      dup3\n        /* \"#utility.yul\":3895:3908   */\n      mload\n        /* \"#utility.yul\":3917:3970   */\n      tag_154\n        /* \"#utility.yul\":3963:3969   */\n      dup2\n        /* \"#utility.yul\":3958:3961   */\n      dup5\n        /* \"#utility.yul\":3951:3955   */\n      0x20\n        /* \"#utility.yul\":3943:3949   */\n      dup8\n        /* \"#utility.yul\":3939:3956   */\n      add\n        /* \"#utility.yul\":3917:3970   */\n      tag_124\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3986:4002   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3734:4008   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4371:4754   */\n    tag_122:\n        /* \"#utility.yul\":4520:4522   */\n      0x20\n        /* \"#utility.yul\":4509:4518   */\n      dup2\n        /* \"#utility.yul\":4502:4523   */\n      mstore\n        /* \"#utility.yul\":4483:4487   */\n      0x00\n        /* \"#utility.yul\":4552:4558   */\n      dup3\n        /* \"#utility.yul\":4546:4559   */\n      mload\n        /* \"#utility.yul\":4595:4601   */\n      dup1\n        /* \"#utility.yul\":4590:4592   */\n      0x20\n        /* \"#utility.yul\":4579:4588   */\n      dup5\n        /* \"#utility.yul\":4575:4593   */\n      add\n        /* \"#utility.yul\":4568:4602   */\n      mstore\n        /* \"#utility.yul\":4611:4677   */\n      tag_157\n        /* \"#utility.yul\":4670:4676   */\n      dup2\n        /* \"#utility.yul\":4665:4667   */\n      0x40\n        /* \"#utility.yul\":4654:4663   */\n      dup6\n        /* \"#utility.yul\":4650:4668   */\n      add\n        /* \"#utility.yul\":4645:4647   */\n      0x20\n        /* \"#utility.yul\":4637:4643   */\n      dup8\n        /* \"#utility.yul\":4633:4648   */\n      add\n        /* \"#utility.yul\":4611:4677   */\n      tag_124\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4738:4740   */\n      0x1f\n        /* \"#utility.yul\":4717:4732   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4713:4742   */\n      and\n        /* \"#utility.yul\":4698:4743   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4745:4747   */\n      0x40\n        /* \"#utility.yul\":4694:4748   */\n      add\n      swap3\n        /* \"#utility.yul\":4371:4754   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122059653fa6aaefbaf504e99bf533607421c7c9b7d7093c0bc8e118c30ac7ba6d6564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610741806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063649e4a5211610066578063649e4a52146100f857806393ba4f6614610100578063a694fc3a14610129578063a8d5fd651461013c578063eabba1451461016757600080fd5b80631e7e936d146100985780632e1a7d4d146100af57806340d1fb87146100c457806362d45f8f146100cc575b600080fd5b6004545b6040519081526020015b60405180910390f35b6100c26100bd3660046105e7565b610194565b005b60025461009c565b61009c6100da366004610600565b6001600160a01b031660009081526001602052604090206002015490565b60035461009c565b61009c61010e366004610600565b6001600160a01b031660009081526001602052604090205490565b6100c26101373660046105e7565b610267565b60005461014f906001600160a01b031681565b6040516001600160a01b0390911681526020016100a6565b61009c610175366004610600565b6001600160a01b03166000908152600160208190526040909120015490565b336000908152600160205260409020600201548181101561021b5760405162461bcd60e51b815260206004820152603660248201527f426f617264726f6f6d3a207769746864726177207265717565737420677265616044820152751d195c881d1a185b881cdd185ad95908185b5bdd5b9d60521b60648201526084015b60405180910390fd5b60045461022890836102c0565b60045561023581836102c0565b336000818152600160205260408120600201929092559054610263916001600160a01b0390911690846102d3565b5050565b600254610274908261033b565b60025533600090815260016020526040902054610291908261033b565b3360008181526001602052604081209290925590546102bd916001600160a01b03909116903084610347565b50565b60006102cc828461063f565b9392505050565b6040516001600160a01b03831660248201526044810182905261033690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610385565b505050565b60006102cc8284610656565b6040516001600160a01b038085166024830152831660448201526064810182905261037f9085906323b872dd60e01b906084016102ff565b50505050565b60006103da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104579092919063ffffffff16565b80519091501561033657808060200190518101906103f8919061066e565b6103365760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610212565b6060610466848460008561046e565b949350505050565b6060824710156104cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610212565b600080866001600160a01b031685876040516104eb91906106bc565b60006040518083038185875af1925050503d8060008114610528576040519150601f19603f3d011682016040523d82523d6000602084013e61052d565b606091505b509150915061053e87838387610549565b979650505050505050565b606083156105b85782516000036105b1576001600160a01b0385163b6105b15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610212565b5081610466565b61046683838151156105cd5781518083602001fd5b8060405162461bcd60e51b815260040161021291906106d8565b6000602082840312156105f957600080fd5b5035919050565b60006020828403121561061257600080fd5b81356001600160a01b03811681146102cc57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561065157610651610629565b500390565b6000821982111561066957610669610629565b500190565b60006020828403121561068057600080fd5b815180151581146102cc57600080fd5b60005b838110156106ab578181015183820152602001610693565b8381111561037f5750506000910152565b600082516106ce818460208701610690565b9190910192915050565b60208152600082518060208401526106f7816040850160208701610690565b601f01601f1916919091016040019291505056fea264697066735822122059653fa6aaefbaf504e99bf533607421c7c9b7d7093c0bc8e118c30ac7ba6d6564736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x741 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x649E4A52 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x649E4A52 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x93BA4F66 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xA8D5FD65 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xEABBA145 EQ PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E7E936D EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x40D1FB87 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x62D45F8F EQ PUSH2 0xCC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9C JUMP JUMPDEST PUSH2 0x9C PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x9C JUMP JUMPDEST PUSH2 0x9C PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20776974686472617720726571756573742067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D195C881D1A185B881CDD185AD95908185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x228 SWAP1 DUP4 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x235 DUP2 DUP4 PUSH2 0x2C0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x263 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0x2D3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x274 SWAP1 DUP3 PUSH2 0x33B JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x291 SWAP1 DUP3 PUSH2 0x33B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x2BD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP5 PUSH2 0x347 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC DUP3 DUP5 PUSH2 0x63F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x336 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x385 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC DUP3 DUP5 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x37F SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x2FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x457 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x336 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x466 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x46E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x52D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x53E DUP8 DUP4 DUP4 DUP8 PUSH2 0x549 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x5B8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x5B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x212 JUMP JUMPDEST POP DUP2 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x466 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x5CD JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x651 JUMPI PUSH2 0x651 PUSH2 0x629 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x669 JUMPI PUSH2 0x669 PUSH2 0x629 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6AB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x693 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x37F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x6CE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x690 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x6F7 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x690 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PUSH6 0x3FA6AAEFBAF5 DIV 0xE9 SWAP12 CREATE2 CALLER PUSH1 0x74 0x21 0xC7 0xC9 0xB7 0xD7 MULMOD EXTCODECOPY SIGNEXTEND 0xC8 0xE1 XOR 0xC3 EXP 0xC7 0xBA PUSH14 0x6564736F6C634300080D00330000 ",
							"sourceMap": "134:1783:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1139": {
									"entryPoint": 901,
									"id": 1139,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_524": {
									"entryPoint": null,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_701": {
									"entryPoint": 827,
									"id": 701,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balance_Wait_75": {
									"entryPoint": null,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balance_staked_88": {
									"entryPoint": null,
									"id": 88,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balance_withdraw_101": {
									"entryPoint": null,
									"id": 101,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_349": {
									"entryPoint": 1134,
									"id": 349,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_285": {
									"entryPoint": 1111,
									"id": 285,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_973": {
									"entryPoint": 839,
									"id": 973,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_947": {
									"entryPoint": 723,
									"id": 947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@share_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_144": {
									"entryPoint": 615,
									"id": 144,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_716": {
									"entryPoint": 704,
									"id": 716,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_staked_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_wait_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_withdraw_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_480": {
									"entryPoint": 1353,
									"id": 480,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_194": {
									"entryPoint": 404,
									"id": 194,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$915__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4756:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:5"
															},
															"nodeType": "YulIf",
															"src": "276:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:5",
														"type": ""
													}
												],
												"src": "196:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "451:216:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "497:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "509:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "499:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "499:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "499:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "472:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "481:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "468:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "493:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:32:5"
															},
															"nodeType": "YulIf",
															"src": "461:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "522:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "548:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "535:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "526:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "621:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "630:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "633:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "580:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "591:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "606:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "611:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "602:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "602:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "615:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "598:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "598:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "587:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "587:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "577:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:50:5"
															},
															"nodeType": "YulIf",
															"src": "567:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "646:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "656:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "417:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "428:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "440:6:5",
														"type": ""
													}
												],
												"src": "381:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "787:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "797:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "809:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "805:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "805:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "797:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "854:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "870:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "875:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "866:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "866:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "879:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "862:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "862:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "850:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "850:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$915__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "756:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "767:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "778:4:5",
														"type": ""
													}
												],
												"src": "672:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:244:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1085:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1078:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1119:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1130:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1135:2:5",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1108:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1108:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1158:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1169:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1154:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1154:18:5"
																	},
																	{
																		"hexValue": "426f617264726f6f6d3a20776974686472617720726571756573742067726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1174:34:5",
																		"type": "",
																		"value": "Boardroom: withdraw request grea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1147:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1147:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1229:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1240:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1225:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1225:18:5"
																	},
																	{
																		"hexValue": "746572207468616e207374616b656420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1245:24:5",
																		"type": "",
																		"value": "ter than staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1218:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1291:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1302:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1287:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1045:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1059:4:5",
														"type": ""
													}
												],
												"src": "894:418:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1349:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1366:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1378:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1369:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1406:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1409:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1399:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1430:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1433:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1423:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1423:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1423:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1317:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1498:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1520:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1522:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1522:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1522:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1514:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1517:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1511:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:8:5"
															},
															"nodeType": "YulIf",
															"src": "1508:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1551:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1563:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1566:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1559:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1559:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1551:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1480:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1483:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1489:4:5",
														"type": ""
													}
												],
												"src": "1449:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1708:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1718:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1730:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1741:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1718:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1760:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1775:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1791:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1796:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1787:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1787:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1800:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1783:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1783:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1771:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1771:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1753:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1753:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1753:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1824:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1835:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1820:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1840:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1813:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1813:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1669:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1680:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1688:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1699:4:5",
														"type": ""
													}
												],
												"src": "1579:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1906:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1933:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1935:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1935:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1935:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1922:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1929:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1925:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1925:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1919:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:13:5"
															},
															"nodeType": "YulIf",
															"src": "1916:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1964:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1975:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1978:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1964:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1889:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1892:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1898:3:5",
														"type": ""
													}
												],
												"src": "1858:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2148:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2170:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2181:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2158:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2193:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2211:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2216:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2207:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2203:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2197:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2253:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2249:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2249:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2231:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2231:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2231:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2285:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2296:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2281:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2281:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2305:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2313:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2274:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2353:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2326:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2326:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2326:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2101:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2112:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2120:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2128:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2139:4:5",
														"type": ""
													}
												],
												"src": "1991:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2449:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2495:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2504:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2507:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2497:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2497:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2497:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2470:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2479:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2466:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2466:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2491:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2462:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:32:5"
															},
															"nodeType": "YulIf",
															"src": "2459:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2520:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2539:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2533:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2533:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2524:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2602:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2611:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2614:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2604:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2604:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2604:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2592:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2585:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2585:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2578:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2578:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2568:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2568:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:40:5"
															},
															"nodeType": "YulIf",
															"src": "2558:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2627:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2637:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2415:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2426:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2438:6:5",
														"type": ""
													}
												],
												"src": "2371:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2827:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2844:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2837:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2837:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2889:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:2:5",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2867:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2928:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2913:18:5"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2933:34:5",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2906:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2988:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2984:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:18:5"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3004:12:5",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2977:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:40:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2977:40:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3026:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3038:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3026:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2804:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2818:4:5",
														"type": ""
													}
												],
												"src": "2653:406:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3238:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3255:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3248:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3289:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3300:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3285:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3285:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3305:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3328:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3339:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3324:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3324:18:5"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3344:34:5",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3317:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3317:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3317:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3399:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3410:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3395:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3395:18:5"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3415:8:5",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3388:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3388:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3433:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3445:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3441:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3441:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3433:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3215:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3229:4:5",
														"type": ""
													}
												],
												"src": "3064:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3524:205:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3534:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3543:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3538:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3603:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3628:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3633:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3624:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3624:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3647:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3652:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3643:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3643:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3637:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3637:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3617:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3617:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3617:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3564:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3567:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3561:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3575:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3577:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3586:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3589:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3582:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3582:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3577:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3557:3:5",
																"statements": []
															},
															"src": "3553:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3692:31:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3705:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3710:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3701:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3701:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3719:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3694:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3694:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3694:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3681:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3684:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3678:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:13:5"
															},
															"nodeType": "YulIf",
															"src": "3675:48:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3502:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3507:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3512:6:5",
														"type": ""
													}
												],
												"src": "3471:258:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3871:137:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3881:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3901:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3895:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3885:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3951:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3939:17:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3958:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3963:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3917:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3917:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3917:53:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3979:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3990:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3995:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3986:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3847:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3852:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3863:3:5",
														"type": ""
													}
												],
												"src": "3734:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4187:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4204:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4215:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4197:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4197:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4197:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4238:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4249:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4234:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4254:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4227:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4227:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4227:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4277:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4288:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4273:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4273:18:5"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4293:31:5",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4266:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4266:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4266:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4334:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4346:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4334:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4164:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4178:4:5",
														"type": ""
													}
												],
												"src": "4013:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4492:262:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4509:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4502:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4502:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4502:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4532:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4552:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4546:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4536:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4579:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4590:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4575:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4575:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4595:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4568:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4637:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4633:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4633:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4654:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4665:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4650:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4650:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4670:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4611:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4611:66:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4686:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4702:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4721:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4729:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4717:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4717:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4738:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4734:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4734:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4713:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4713:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4745:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4694:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4686:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4461:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4472:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4483:4:5",
														"type": ""
													}
												],
												"src": "4371:383:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$915__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Boardroom: withdraw request grea\")\n        mstore(add(headStart, 96), \"ter than staked amount\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063649e4a5211610066578063649e4a52146100f857806393ba4f6614610100578063a694fc3a14610129578063a8d5fd651461013c578063eabba1451461016757600080fd5b80631e7e936d146100985780632e1a7d4d146100af57806340d1fb87146100c457806362d45f8f146100cc575b600080fd5b6004545b6040519081526020015b60405180910390f35b6100c26100bd3660046105e7565b610194565b005b60025461009c565b61009c6100da366004610600565b6001600160a01b031660009081526001602052604090206002015490565b60035461009c565b61009c61010e366004610600565b6001600160a01b031660009081526001602052604090205490565b6100c26101373660046105e7565b610267565b60005461014f906001600160a01b031681565b6040516001600160a01b0390911681526020016100a6565b61009c610175366004610600565b6001600160a01b03166000908152600160208190526040909120015490565b336000908152600160205260409020600201548181101561021b5760405162461bcd60e51b815260206004820152603660248201527f426f617264726f6f6d3a207769746864726177207265717565737420677265616044820152751d195c881d1a185b881cdd185ad95908185b5bdd5b9d60521b60648201526084015b60405180910390fd5b60045461022890836102c0565b60045561023581836102c0565b336000818152600160205260408120600201929092559054610263916001600160a01b0390911690846102d3565b5050565b600254610274908261033b565b60025533600090815260016020526040902054610291908261033b565b3360008181526001602052604081209290925590546102bd916001600160a01b03909116903084610347565b50565b60006102cc828461063f565b9392505050565b6040516001600160a01b03831660248201526044810182905261033690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610385565b505050565b60006102cc8284610656565b6040516001600160a01b038085166024830152831660448201526064810182905261037f9085906323b872dd60e01b906084016102ff565b50505050565b60006103da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104579092919063ffffffff16565b80519091501561033657808060200190518101906103f8919061066e565b6103365760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610212565b6060610466848460008561046e565b949350505050565b6060824710156104cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610212565b600080866001600160a01b031685876040516104eb91906106bc565b60006040518083038185875af1925050503d8060008114610528576040519150601f19603f3d011682016040523d82523d6000602084013e61052d565b606091505b509150915061053e87838387610549565b979650505050505050565b606083156105b85782516000036105b1576001600160a01b0385163b6105b15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610212565b5081610466565b61046683838151156105cd5781518083602001fd5b8060405162461bcd60e51b815260040161021291906106d8565b6000602082840312156105f957600080fd5b5035919050565b60006020828403121561061257600080fd5b81356001600160a01b03811681146102cc57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561065157610651610629565b500390565b6000821982111561066957610669610629565b500190565b60006020828403121561068057600080fd5b815180151581146102cc57600080fd5b60005b838110156106ab578181015183820152602001610693565b8381111561037f5750506000910152565b600082516106ce818460208701610690565b9190910192915050565b60208152600082518060208401526106f7816040850160208701610690565b601f01601f1916919091016040019291505056fea264697066735822122059653fa6aaefbaf504e99bf533607421c7c9b7d7093c0bc8e118c30ac7ba6d6564736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x649E4A52 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x649E4A52 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x93BA4F66 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xA8D5FD65 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xEABBA145 EQ PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E7E936D EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x40D1FB87 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x62D45F8F EQ PUSH2 0xCC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x9C JUMP JUMPDEST PUSH2 0x9C PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x9C JUMP JUMPDEST PUSH2 0x9C PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA6 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F617264726F6F6D3A20776974686472617720726571756573742067726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1D195C881D1A185B881CDD185AD95908185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x228 SWAP1 DUP4 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x235 DUP2 DUP4 PUSH2 0x2C0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x263 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 PUSH2 0x2D3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x274 SWAP1 DUP3 PUSH2 0x33B JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x291 SWAP1 DUP3 PUSH2 0x33B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SLOAD PUSH2 0x2BD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP5 PUSH2 0x347 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC DUP3 DUP5 PUSH2 0x63F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x336 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x385 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC DUP3 DUP5 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x37F SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x2FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x457 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x336 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x466 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x46E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x212 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x52D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x53E DUP8 DUP4 DUP4 DUP8 PUSH2 0x549 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x5B8 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x5B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x212 JUMP JUMPDEST POP DUP2 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x466 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x5CD JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x651 JUMPI PUSH2 0x651 PUSH2 0x629 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x669 JUMPI PUSH2 0x669 PUSH2 0x629 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6AB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x693 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x37F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x6CE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x690 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x6F7 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x690 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PUSH6 0x3FA6AAEFBAF5 DIV 0xE9 SWAP12 CREATE2 CALLER PUSH1 0x74 0x21 0xC7 0xC9 0xB7 0xD7 MULMOD EXTCODECOPY SIGNEXTEND 0xC8 0xE1 XOR 0xC3 EXP 0xC7 0xBA PUSH14 0x6564736F6C634300080D00330000 ",
							"sourceMap": "134:1783:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;765:107;844:21;;765:107;;;160:25:5;;;148:2;133:18;765:107:0;;;;;;;;1518:397;;;;;;:::i;:::-;;:::i;:::-;;551:99;626:12;:17;551:99;;1126:124;;;;;;:::i;:::-;-1:-1:-1;;;;;1216:18:0;1190:7;1216:18;;;:9;:18;;;;;:27;;;;1126:124;656:103;733:19;;656:103;;878:116;;;;;;:::i;:::-;-1:-1:-1;;;;;964:18:0;938:7;964:18;;;:9;:18;;;;;:23;;878:116;1256:256;;;;;;:::i;:::-;;:::i;227:19::-;;;;;-1:-1:-1;;;;;227:19:0;;;;;;-1:-1:-1;;;;;850:32:5;;;832:51;;820:2;805:18;227:19:0;672:217:5;1000:120:0;;;;;;:::i;:::-;-1:-1:-1;;;;;1088:18:0;1062:7;1088:18;;;:9;:18;;;;;;;;:25;;;1000:120;1518:397;1609:10;1577:19;1599:21;;;:9;:21;;;;;:30;;;1647:21;;;;1639:88;;;;-1:-1:-1;;;1639:88:0;;1096:2:5;1639:88:0;;;1078:21:5;1135:2;1115:18;;;1108:30;1174:34;1154:18;;;1147:62;-1:-1:-1;;;1225:18:5;;;1218:52;1287:19;;1639:88:0;;;;;;;;;1761:21;;:33;;1787:6;1761:25;:33::i;:::-;1737:21;:57;1837:23;:11;1853:6;1837:15;:23::i;:::-;1814:10;1804:21;;;;:9;:21;;;;;:30;;:56;;;;1870:5;;:38;;-1:-1:-1;;;;;1870:5:0;;;;1901:6;1870:18;:38::i;:::-;1567:348;1518:397;:::o;1256:256::-;1332:12;:17;:29;;1354:6;1332:21;:29::i;:::-;1312:12;:49;1410:10;1312:17;1400:21;;;:9;:21;;;;;:26;:38;;1431:6;1400:30;:38::i;:::-;1381:10;1371:21;;;;:9;:21;;;;;:67;;;;1448:5;;:57;;-1:-1:-1;;;;;1448:5:0;;;;1491:4;1498:6;1448:22;:57::i;:::-;1256:256;:::o;3050:96:2:-;3108:7;3134:5;3138:1;3134;:5;:::i;:::-;3127:12;3050:96;-1:-1:-1;;;3050:96:2:o;652:175:4:-;761:58;;-1:-1:-1;;;;;1771:32:5;;761:58:4;;;1753:51:5;1820:18;;;1813:34;;;734:86:4;;754:5;;-1:-1:-1;;;784:23:4;1726:18:5;;761:58:4;;;;-1:-1:-1;;761:58:4;;;;;;;;;;;;;;-1:-1:-1;;;;;761:58:4;-1:-1:-1;;;;;;761:58:4;;;;;;;;;;734:19;:86::i;:::-;652:175;;;:::o;2683:96:2:-;2741:7;2767:5;2771:1;2767;:5;:::i;833:203:4:-;960:68;;-1:-1:-1;;;;;2249:15:5;;;960:68:4;;;2231:34:5;2301:15;;2281:18;;;2274:43;2333:18;;;2326:34;;;933:96:4;;953:5;;-1:-1:-1;;;983:27:4;2166:18:5;;960:68:4;1991:375:5;933:96:4;833:203;;;;:::o;3000:706::-;3419:23;3445:69;3473:4;3445:69;;;;;;;;;;;;;;;;;3453:5;-1:-1:-1;;;;;3445:27:4;;;:69;;;;;:::i;:::-;3528:17;;3419:95;;-1:-1:-1;3528:21:4;3524:176;;3623:10;3612:30;;;;;;;;;;;;:::i;:::-;3604:85;;;;-1:-1:-1;;;3604:85:4;;2855:2:5;3604:85:4;;;2837:21:5;2894:2;2874:18;;;2867:30;2933:34;2913:18;;;2906:62;-1:-1:-1;;;2984:18:5;;;2977:40;3034:19;;3604:85:4;2653:406:5;4041:223:1;4174:12;4205:52;4227:6;4235:4;4241:1;4244:12;4205:21;:52::i;:::-;4198:59;4041:223;-1:-1:-1;;;;4041:223:1:o;5098:446::-;5263:12;5320:5;5295:21;:30;;5287:81;;;;-1:-1:-1;;;5287:81:1;;3266:2:5;5287:81:1;;;3248:21:5;3305:2;3285:18;;;3278:30;3344:34;3324:18;;;3317:62;-1:-1:-1;;;3395:18:5;;;3388:36;3441:19;;5287:81:1;3064:402:5;5287:81:1;5379:12;5393:23;5420:6;-1:-1:-1;;;;;5420:11:1;5439:5;5446:4;5420:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5378:73;;;;5468:69;5495:6;5503:7;5512:10;5524:12;5468:26;:69::i;:::-;5461:76;5098:446;-1:-1:-1;;;;;;;5098:446:1:o;7604:628::-;7784:12;7812:7;7808:418;;;7839:10;:17;7860:1;7839:22;7835:286;;-1:-1:-1;;;;;1634:19:1;;;8046:60;;;;-1:-1:-1;;;8046:60:1;;4215:2:5;8046:60:1;;;4197:21:5;4254:2;4234:18;;;4227:30;4293:31;4273:18;;;4266:59;4342:18;;8046:60:1;4013:353:5;8046:60:1;-1:-1:-1;8141:10:1;8134:17;;7808:418;8182:33;8190:10;8202:12;8913:17;;:21;8909:379;;9141:10;9135:17;9197:15;9184:10;9180:2;9176:19;9169:44;8909:379;9264:12;9257:20;;-1:-1:-1;;;9257:20:1;;;;;;;;:::i;196:180:5:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:5;;196:180;-1:-1:-1;196:180:5:o;381:286::-;440:6;493:2;481:9;472:7;468:23;464:32;461:52;;;509:1;506;499:12;461:52;535:23;;-1:-1:-1;;;;;587:31:5;;577:42;;567:70;;633:1;630;623:12;1317:127;1378:10;1373:3;1369:20;1366:1;1359:31;1409:4;1406:1;1399:15;1433:4;1430:1;1423:15;1449:125;1489:4;1517:1;1514;1511:8;1508:34;;;1522:18;;:::i;:::-;-1:-1:-1;1559:9:5;;1449:125::o;1858:128::-;1898:3;1929:1;1925:6;1922:1;1919:13;1916:39;;;1935:18;;:::i;:::-;-1:-1:-1;1971:9:5;;1858:128::o;2371:277::-;2438:6;2491:2;2479:9;2470:7;2466:23;2462:32;2459:52;;;2507:1;2504;2497:12;2459:52;2539:9;2533:16;2592:5;2585:13;2578:21;2571:5;2568:32;2558:60;;2614:1;2611;2604:12;3471:258;3543:1;3553:113;3567:6;3564:1;3561:13;3553:113;;;3643:11;;;3637:18;3624:11;;;3617:39;3589:2;3582:10;3553:113;;;3684:6;3681:1;3678:13;3675:48;;;-1:-1:-1;;3719:1:5;3701:16;;3694:27;3471:258::o;3734:274::-;3863:3;3901:6;3895:13;3917:53;3963:6;3958:3;3951:4;3943:6;3939:17;3917:53;:::i;:::-;3986:16;;;;;3734:274;-1:-1:-1;;3734:274:5:o;4371:383::-;4520:2;4509:9;4502:21;4483:4;4552:6;4546:13;4595:6;4590:2;4579:9;4575:18;4568:34;4611:66;4670:6;4665:2;4654:9;4650:18;4645:2;4637:6;4633:15;4611:66;:::i;:::-;4738:2;4717:15;-1:-1:-1;;4713:29:5;4698:45;;;;4745:2;4694:54;;4371:383;-1:-1:-1;;4371:383:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "371400",
								"executionCost": "411",
								"totalCost": "371811"
							},
							"external": {
								"balance_Wait(address)": "2513",
								"balance_staked(address)": "2591",
								"balance_withdraw(address)": "2564",
								"share()": "2403",
								"stake(uint256)": "infinite",
								"totalSupply_staked()": "2281",
								"totalSupply_wait()": "2326",
								"totalSupply_withdraw()": "2271",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 1917,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 1917,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059653fa6aaefbaf504e99bf533607421c7c9b7d7093c0bc8e118c30ac7ba6d6564736f6c634300080d0033",
									".code": [
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "649E4A52"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "649E4A52"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "93BA4F66"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "A8D5FD65"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "EABBA145"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "1E7E936D"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "40D1FB87"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "62D45F8F"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 134,
											"end": 1917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 765,
											"end": 872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 844,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 844,
											"end": 865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 765,
											"end": 872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 765,
											"end": 872,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 765,
											"end": 872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 765,
											"end": 872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 765,
											"end": 872,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 626,
											"end": 643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 551,
											"end": 650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1250,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 759,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 656,
											"end": 759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 733,
											"end": 752,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 733,
											"end": 752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 656,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 656,
											"end": 759,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 878,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 878,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 878,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 878,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 878,
											"end": 994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 878,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 878,
											"end": 994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 878,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 964,
											"end": 982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 964,
											"end": 982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 964,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 964,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 982,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 964,
											"end": 987,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 964,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 878,
											"end": 994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 227,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 227,
											"end": 246,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 850,
											"end": 882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 832,
											"end": 883,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 832,
											"end": 883,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 227,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 672,
											"end": 889,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1629,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1599,
											"end": 1629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1668,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1137,
											"name": "PUSH",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1115,
											"end": 1133,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1115,
											"end": 1133,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1208,
											"name": "PUSH",
											"source": 5,
											"value": "426F617264726F6F6D3A20776974686472617720726571756573742067726561"
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D195C881D1A185B881CDD185AD95908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1287,
											"end": 1306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1639,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 1793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 1794,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1837,
											"end": 1848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1837,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1824,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1804,
											"end": 1834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1860,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1870,
											"end": 1908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1870,
											"end": 1908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1908,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1870,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1915,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1332,
											"end": 1349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1332,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1312,
											"end": 1361,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1420,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1400,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1400,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1391,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1448,
											"end": 1505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1504,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1448,
											"end": 1505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1448,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1448,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3108,
											"end": 3115,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3127,
											"end": 3139,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 652,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 652,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1803,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1838,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1820,
											"end": 1838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1847,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1847,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 734,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 754,
											"end": 759,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 754,
											"end": 759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1744,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1726,
											"end": 1744,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 761,
											"end": 819,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 734,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 734,
											"end": 820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 652,
											"end": 827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 652,
											"end": 827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 652,
											"end": 827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 652,
											"end": 827,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2683,
											"end": 2779,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2683,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2231,
											"end": 2265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2317,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2360,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 953,
											"end": 958,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 953,
											"end": 958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 983,
											"end": 1010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1991,
											"end": 2366,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 933,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 833,
											"end": 1036,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3000,
											"end": 3706,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3000,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3453,
											"end": 3458,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3445,
											"end": 3472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3445,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3528,
											"end": 3549,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3524,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3524,
											"end": 3700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3612,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 2858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2897,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2913,
											"end": 2931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2968,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3017,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3034,
											"end": 3053,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2653,
											"end": 3059,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4186,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4239,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4205,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4257,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4041,
											"end": 4264,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5275,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5320,
											"end": 5325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3269,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3307,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3308,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3342,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3064,
											"end": 3466,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5287,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5420,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5444,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5450,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5536,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5468,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5537,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7604,
											"end": 8232,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7604,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7784,
											"end": 7796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7812,
											"end": 7819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7835,
											"end": 8121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4257,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4324,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4325,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4013,
											"end": 4366,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8046,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8141,
											"end": 8151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8134,
											"end": 8151,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7808,
											"end": 8226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8182,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8190,
											"end": 8200,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9141,
											"end": 9151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9197,
											"end": 9212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9184,
											"end": 9194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9176,
											"end": 9195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9169,
											"end": 9213,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8909,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 9257,
											"end": 9277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 667,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 381,
											"end": 667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 440,
											"end": 446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 495,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 481,
											"end": 490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 472,
											"end": 479,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 468,
											"end": 491,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 464,
											"end": 496,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 461,
											"end": 513,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 461,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 509,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 499,
											"end": 511,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 461,
											"end": 513,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 461,
											"end": 513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 535,
											"end": 558,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 587,
											"end": 618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 587,
											"end": 618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 577,
											"end": 619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 577,
											"end": 619,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 567,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 567,
											"end": 637,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 633,
											"end": 634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 623,
											"end": 635,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1444,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1317,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1373,
											"end": 1376,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1369,
											"end": 1389,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1413,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1399,
											"end": 1414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1437,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1430,
											"end": 1431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1438,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1574,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1449,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1514,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1519,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1542,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1508,
											"end": 1542,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1574,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1858,
											"end": 1986,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1858,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1931,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 1932,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1955,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1916,
											"end": 1955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1935,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1935,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1935,
											"end": 1953,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1935,
											"end": 1953,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1935,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1986,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2371,
											"end": 2648,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2371,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2477,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2494,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2511,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2459,
											"end": 2511,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2505,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2509,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2511,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2459,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2549,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2597,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2598,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2599,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2600,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2558,
											"end": 2618,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2616,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3471,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3567,
											"end": 3573,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3574,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3643,
											"end": 3654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3643,
											"end": 3654,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3643,
											"end": 3654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3591,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3553,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3675,
											"end": 3723,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3701,
											"end": 3717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3721,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3729,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3734,
											"end": 4008,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3734,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3908,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3963,
											"end": 3969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 3961,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3951,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3917,
											"end": 3970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3917,
											"end": 3970,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3917,
											"end": 3970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 4008,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3734,
											"end": 4008,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4371,
											"end": 4754,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4371,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4509,
											"end": 4518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4502,
											"end": 4523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4483,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4552,
											"end": 4558,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4546,
											"end": 4559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 4593,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4568,
											"end": 4602,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4663,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4637,
											"end": 4643,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4611,
											"end": 4677,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4611,
											"end": 4677,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4611,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4740,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4717,
											"end": 4732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4713,
											"end": 4742,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4698,
											"end": 4743,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4745,
											"end": 4747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4694,
											"end": 4748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4748,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4754,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4371,
											"end": 4754,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balance_Wait(address)": "93ba4f66",
							"balance_staked(address)": "eabba145",
							"balance_withdraw(address)": "62d45f8f",
							"share()": "a8d5fd65",
							"stake(uint256)": "a694fc3a",
							"totalSupply_staked()": "649e4a52",
							"totalSupply_wait()": "40d1fb87",
							"totalSupply_withdraw()": "1e7e936d",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balance_Wait\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balance_staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balance_withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"share\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply_staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply_wait\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply_withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":\"ShareWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol\":{\"keccak256\":\"0x89f20b3b3d77b2d660a1f10a101e88d3b032aeaff638f1427a224a0747f72f6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://925aababa2358f64fb0ed9aa4ab25d24716a2661f94ea9934eca9f054e160c5a\",\"dweb:/ipfs/QmdpQ9kSUTaBU4aqth6gCrkkx1v768D4BzZk5aigtJYV5w\"]},\"brownie_projects/sharplabs/contracts/utils/Address.sol\":{\"keccak256\":\"0x2254ff0365cbc4f80af2433d10890e0d4816c14f38a6e9e0c746f861ad434f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17ecd670c7f9522306389b638a01d0b0e93156ec0e9c2cbe798b091e89474a32\",\"dweb:/ipfs/QmUzZpE98hpS8J4KtqcLxxTzdrP2rKeUWssF5GJA1e3dYw\"]},\"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]},\"brownie_projects/sharplabs/contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]},\"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":{\"keccak256\":\"0x593692219f7f58fc3dd89dc0271eaf2b459fd7515bbf53dcdb799bcce79c97b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dcb333da0bda5db19dacbc438f214d8e8408c210605baba683ce4af33ba525d\",\"dweb:/ipfs/QmRjDL9cN4qKGozcoN34EscZZesPqsa9E5qggHRihUZxkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
								"label": "share",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)915"
							},
							{
								"astId": 32,
								"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Balances)27_storage)"
							},
							{
								"astId": 35,
								"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(TotalSupply)20_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)915": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Balances)27_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ShareWrapper.Balances)",
								"numberOfBytes": "32",
								"value": "t_struct(Balances)27_storage"
							},
							"t_struct(Balances)27_storage": {
								"encoding": "inplace",
								"label": "struct ShareWrapper.Balances",
								"members": [
									{
										"astId": 22,
										"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
										"label": "wait",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 24,
										"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
										"label": "staked",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 26,
										"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
										"label": "withdraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(TotalSupply)20_storage": {
								"encoding": "inplace",
								"label": "struct ShareWrapper.TotalSupply",
								"members": [
									{
										"astId": 15,
										"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
										"label": "wait",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 17,
										"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
										"label": "staked",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 19,
										"contract": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol:ShareWrapper",
										"label": "withdraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/sharplabs/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":126:9296  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/sharplabs/contracts/utils/Address.sol\":126:9296  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b35284dea08c625587e74b0cf0329c69749c9b9dfb460163724ba27c323f3ff964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b35284dea08c625587e74b0cf0329c69749c9b9dfb460163724ba27c323f3ff964736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 MSTORE DUP5 0xDE LOG0 DUP13 PUSH3 0x5587E7 0x4B 0xC CREATE ORIGIN SWAP13 PUSH10 0x749C9B9DFB460163724B LOG2 PUSH29 0x323F3FF964736F6C634300080D00330000000000000000000000000000 ",
							"sourceMap": "126:9170:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:9170:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b35284dea08c625587e74b0cf0329c69749c9b9dfb460163724ba27c323f3ff964736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 MSTORE DUP5 0xDE LOG0 DUP13 PUSH3 0x5587E7 0x4B 0xC CREATE ORIGIN SWAP13 PUSH10 0x749C9B9DFB460163724B LOG2 PUSH29 0x323F3FF964736F6C634300080D00330000000000000000000000000000 ",
							"sourceMap": "126:9170:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 126,
									"end": 9296,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b35284dea08c625587e74b0cf0329c69749c9b9dfb460163724ba27c323f3ff964736f6c634300080d0033",
									".code": [
										{
											"begin": 126,
											"end": 9296,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 126,
											"end": 9296,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/sharplabs/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/sharplabs/contracts/utils/Address.sol\":{\"keccak256\":\"0x2254ff0365cbc4f80af2433d10890e0d4816c14f38a6e9e0c746f861ad434f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17ecd670c7f9522306389b638a01d0b0e93156ec0e9c2cbe798b091e89474a32\",\"dweb:/ipfs/QmUzZpE98hpS8J4KtqcLxxTzdrP2rKeUWssF5GJA1e3dYw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":409:6710  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":409:6710  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7aaea80294f35f33f1f918f9de5ec9910d6d750b409a440faefbdb830dc49564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c7aaea80294f35f33f1f918f9de5ec9910d6d750b409a440faefbdb830dc49564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH27 0xAEA80294F35F33F1F918F9DE5EC9910D6D750B409A440FAEFBDB83 0xD 0xC4 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "409:6301:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;409:6301:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c7aaea80294f35f33f1f918f9de5ec9910d6d750b409a440faefbdb830dc49564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH27 0xAEA80294F35F33F1F918F9DE5EC9910D6D750B409A440FAEFBDB83 0xD 0xC4 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "409:6301:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7aaea80294f35f33f1f918f9de5ec9910d6d750b409a440faefbdb830dc49564736f6c634300080d0033",
									".code": [
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/sharplabs/contracts/utils/token/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/sharplabs/contracts/utils/token/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/sharplabs/contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":596:3708  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":596:3708  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a8e7434472187a363c96fa1e52d5996101451571f2c4bfc4798089808138c3c964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8e7434472187a363c96fa1e52d5996101451571f2c4bfc4798089808138c3c964736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xE7 NUMBER DIFFICULTY PUSH19 0x187A363C96FA1E52D5996101451571F2C4BFC4 PUSH26 0x8089808138C3C964736F6C634300080D00330000000000000000 ",
							"sourceMap": "596:3112:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;596:3112:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8e7434472187a363c96fa1e52d5996101451571f2c4bfc4798089808138c3c964736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xE7 NUMBER DIFFICULTY PUSH19 0x187A363C96FA1E52D5996101451571F2C4BFC4 PUSH26 0x8089808138C3C964736F6C634300080D00330000000000000000 ",
							"sourceMap": "596:3112:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 596,
									"end": 3708,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8e7434472187a363c96fa1e52d5996101451571f2c4bfc4798089808138c3c964736f6c634300080d0033",
									".code": [
										{
											"begin": 596,
											"end": 3708,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 596,
											"end": 3708,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"brownie_projects/sharplabs/contracts/utils/Address.sol\":{\"keccak256\":\"0x2254ff0365cbc4f80af2433d10890e0d4816c14f38a6e9e0c746f861ad434f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17ecd670c7f9522306389b638a01d0b0e93156ec0e9c2cbe798b091e89474a32\",\"dweb:/ipfs/QmUzZpE98hpS8J4KtqcLxxTzdrP2rKeUWssF5GJA1e3dYw\"]},\"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]},\"brownie_projects/sharplabs/contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]},\"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol\":{\"keccak256\":\"0x593692219f7f58fc3dd89dc0271eaf2b459fd7515bbf53dcdb799bcce79c97b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dcb333da0bda5db19dacbc438f214d8e8408c210605baba683ce4af33ba525d\",\"dweb:/ipfs/QmRjDL9cN4qKGozcoN34EscZZesPqsa9E5qggHRihUZxkB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"brownie_projects/sharplabs/contracts/core/ShareWrapper.sol": {
				"ast": {
					"absolutePath": "brownie_projects/sharplabs/contracts/core/ShareWrapper.sol",
					"exportedSymbols": {
						"Address": [
							525
						],
						"IERC20": [
							915
						],
						"SafeERC20": [
							1140
						],
						"SafeMath": [
							837
						],
						"ShareWrapper": [
							195
						]
					},
					"id": 196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "brownie_projects/sharplabs/contracts/utils/token/IERC20.sol",
							"file": "../utils/token/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 196,
							"sourceUnit": 916,
							"src": "58:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol",
							"file": "../utils/token/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 196,
							"sourceUnit": 1141,
							"src": "94:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShareWrapper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "ShareWrapper",
							"nameLocation": "143:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 6,
									"libraryName": {
										"id": 4,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 837,
										"src": "168:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "162:27:0",
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "181:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 10,
									"libraryName": {
										"id": 7,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1140,
										"src": "200:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "194:27:0",
									"typeName": {
										"id": 9,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 8,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 915,
											"src": "214:6:0"
										},
										"referencedDeclaration": 915,
										"src": "214:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$915",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a8d5fd65",
									"id": 13,
									"mutability": "mutable",
									"name": "share",
									"nameLocation": "241:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 195,
									"src": "227:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$915",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 12,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 11,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 915,
											"src": "227:6:0"
										},
										"referencedDeclaration": 915,
										"src": "227:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$915",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ShareWrapper.TotalSupply",
									"id": 20,
									"members": [
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "wait",
											"nameLocation": "290:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "282:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "282:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "312:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "304:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 16,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "304:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "withdraw",
											"nameLocation": "336:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "328:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "328:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TotalSupply",
									"nameLocation": "260:11:0",
									"nodeType": "StructDefinition",
									"scope": 195,
									"src": "253:98:0",
									"visibility": "public"
								},
								{
									"canonicalName": "ShareWrapper.Balances",
									"id": 27,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "wait",
											"nameLocation": "391:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "383:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 21,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "383:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "413:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "405:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 23,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "405:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "withdraw",
											"nameLocation": "437:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 27,
											"src": "429:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 25,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "429:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Balances",
									"nameLocation": "364:8:0",
									"nodeType": "StructDefinition",
									"scope": 195,
									"src": "357:95:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "496:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 195,
									"src": "458:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
										"typeString": "mapping(address => struct ShareWrapper.Balances)"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 28,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "466:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "458:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
											"typeString": "mapping(address => struct ShareWrapper.Balances)"
										},
										"valueType": {
											"id": 30,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 29,
												"name": "Balances",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 27,
												"src": "477:8:0"
											},
											"referencedDeclaration": 27,
											"src": "477:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Balances_$27_storage_ptr",
												"typeString": "struct ShareWrapper.Balances"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "532:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 195,
									"src": "511:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_TotalSupply_$20_storage",
										"typeString": "struct ShareWrapper.TotalSupply"
									},
									"typeName": {
										"id": 34,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 33,
											"name": "TotalSupply",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 20,
											"src": "511:11:0"
										},
										"referencedDeclaration": 20,
										"src": "511:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TotalSupply_$20_storage_ptr",
											"typeString": "struct ShareWrapper.TotalSupply"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "609:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 40,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "626:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TotalSupply_$20_storage",
															"typeString": "struct ShareWrapper.TotalSupply storage ref"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "wait",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 15,
													"src": "626:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 39,
												"id": 42,
												"nodeType": "Return",
												"src": "619:24:0"
											}
										]
									},
									"functionSelector": "40d1fb87",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply_wait",
									"nameLocation": "560:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "600:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:9:0"
									},
									"scope": 195,
									"src": "551:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "716:43:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 49,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "733:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TotalSupply_$20_storage",
															"typeString": "struct ShareWrapper.TotalSupply storage ref"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "staked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 17,
													"src": "733:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 48,
												"id": 51,
												"nodeType": "Return",
												"src": "726:26:0"
											}
										]
									},
									"functionSelector": "649e4a52",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply_staked",
									"nameLocation": "665:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "707:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:9:0"
									},
									"scope": 195,
									"src": "656:103:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "827:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 58,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "844:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TotalSupply_$20_storage",
															"typeString": "struct ShareWrapper.TotalSupply storage ref"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "withdraw",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 19,
													"src": "844:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 60,
												"nodeType": "Return",
												"src": "837:28:0"
											}
										]
									},
									"functionSelector": "1e7e936d",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply_withdraw",
									"nameLocation": "774:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:9:0"
									},
									"scope": 195,
									"src": "765:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "947:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 69,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "964:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
																"typeString": "mapping(address => struct ShareWrapper.Balances storage ref)"
															}
														},
														"id": 71,
														"indexExpression": {
															"id": 70,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "964:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balances_$27_storage",
															"typeString": "struct ShareWrapper.Balances storage ref"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "wait",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "964:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 68,
												"id": 73,
												"nodeType": "Return",
												"src": "957:30:0"
											}
										]
									},
									"functionSelector": "93ba4f66",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance_Wait",
									"nameLocation": "887:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:17:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:9:0"
									},
									"scope": 195,
									"src": "878:116:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1071:49:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 82,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1088:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
																"typeString": "mapping(address => struct ShareWrapper.Balances storage ref)"
															}
														},
														"id": 84,
														"indexExpression": {
															"id": 83,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1088:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balances_$27_storage",
															"typeString": "struct ShareWrapper.Balances storage ref"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "staked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "1088:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 86,
												"nodeType": "Return",
												"src": "1081:32:0"
											}
										]
									},
									"functionSelector": "eabba145",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance_staked",
									"nameLocation": "1009:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1032:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1024:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:17:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1062:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:9:0"
									},
									"scope": 195,
									"src": "1000:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1199:51:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 95,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1216:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
																"typeString": "mapping(address => struct ShareWrapper.Balances storage ref)"
															}
														},
														"id": 97,
														"indexExpression": {
															"id": 96,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1226:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1216:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balances_$27_storage",
															"typeString": "struct ShareWrapper.Balances storage ref"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "withdraw",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 26,
													"src": "1216:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 94,
												"id": 99,
												"nodeType": "Return",
												"src": "1209:34:0"
											}
										]
									},
									"functionSelector": "62d45f8f",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance_withdraw",
									"nameLocation": "1135:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1160:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1152:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:17:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1190:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:9:0"
									},
									"scope": 195,
									"src": "1126:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "1302:210:0",
										"statements": [
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 106,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "1312:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TotalSupply_$20_storage",
																"typeString": "struct ShareWrapper.TotalSupply storage ref"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "wait",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "1312:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 112,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "1354:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 109,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1332:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TotalSupply_$20_storage",
																		"typeString": "struct ShareWrapper.TotalSupply storage ref"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "wait",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 15,
																"src": "1332:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 701,
															"src": "1332:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1332:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1312:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1312:49:0"
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 116,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1371:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
																	"typeString": "mapping(address => struct ShareWrapper.Balances storage ref)"
																}
															},
															"id": 119,
															"indexExpression": {
																"expression": {
																	"id": 117,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1381:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1381:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1371:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$27_storage",
																"typeString": "struct ShareWrapper.Balances storage ref"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "wait",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "1371:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 127,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "1431:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 121,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "1400:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
																			"typeString": "mapping(address => struct ShareWrapper.Balances storage ref)"
																		}
																	},
																	"id": 124,
																	"indexExpression": {
																		"expression": {
																			"id": 122,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1410:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1410:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1400:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Balances_$27_storage",
																		"typeString": "struct ShareWrapper.Balances storage ref"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "wait",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 22,
																"src": "1400:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 701,
															"src": "1400:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1400:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1371:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1371:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 134,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1471:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1471:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 138,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ShareWrapper_$195",
																		"typeString": "contract ShareWrapper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ShareWrapper_$195",
																		"typeString": "contract ShareWrapper"
																	}
																],
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 136,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1483:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1483:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1498:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 131,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1448:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 973,
														"src": "1448:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1448:57:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1265:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1279:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1271:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:16:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1302:0:0"
									},
									"scope": 195,
									"src": "1256:256:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "1567:348:0",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "memberShare",
														"nameLocation": "1585:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 193,
														"src": "1577:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1577:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 151,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1599:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
																"typeString": "mapping(address => struct ShareWrapper.Balances storage ref)"
															}
														},
														"id": 154,
														"indexExpression": {
															"expression": {
																"id": 152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1609:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1599:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balances_$27_storage",
															"typeString": "struct ShareWrapper.Balances storage ref"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "withdraw",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 26,
													"src": "1599:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1577:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 158,
																"name": "memberShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "1647:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 159,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1662:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1647:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f617264726f6f6d3a20776974686472617720726571756573742067726561746572207468616e207374616b656420616d6f756e74",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1670:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2",
																"typeString": "literal_string \"Boardroom: withdraw request greater than staked amount\""
															},
															"value": "Boardroom: withdraw request greater than staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5201a2dd268ae0050ca4356479cb95b98b9b8007132374c41df9420d080bef2",
																"typeString": "literal_string \"Boardroom: withdraw request greater than staked amount\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1639:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1639:88:0"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 164,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "1737:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TotalSupply_$20_storage",
																"typeString": "struct ShareWrapper.TotalSupply storage ref"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1737:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 170,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1787:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 167,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1761:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TotalSupply_$20_storage",
																		"typeString": "struct ShareWrapper.TotalSupply storage ref"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "withdraw",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "1761:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 716,
															"src": "1761:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1761:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1737:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1737:57:0"
											},
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 174,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1804:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balances_$27_storage_$",
																	"typeString": "mapping(address => struct ShareWrapper.Balances storage ref)"
																}
															},
															"id": 177,
															"indexExpression": {
																"expression": {
																	"id": 175,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1814:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1804:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balances_$27_storage",
																"typeString": "struct ShareWrapper.Balances storage ref"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "1804:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 181,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1853:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 179,
																"name": "memberShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "1837:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 716,
															"src": "1837:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1837:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1804:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "1804:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 188,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1889:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1889:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "1901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 185,
															"name": "share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "1870:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$915_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "1870:38:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1527:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1536:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:16:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:0"
									},
									"scope": 195,
									"src": "1518:397:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 196,
							"src": "134:1783:0",
							"usedErrors": []
						}
					],
					"src": "33:1884:0"
				},
				"id": 0
			},
			"brownie_projects/sharplabs/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "brownie_projects/sharplabs/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							525
						]
					},
					"id": 526,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 198,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 525,
							"linearizedBaseContracts": [
								525
							],
							"name": "Address",
							"nameLocation": "134:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1410:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 206,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "1634:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1634:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1634:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1656:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1634:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 211,
												"nodeType": "Return",
												"src": "1627:30:1"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "148:1191:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1353:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1372:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1364:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:17:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1404:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1404:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:6:1"
									},
									"scope": 525,
									"src": "1344:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "2651:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 224,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2677:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$525",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$525",
																				"typeString": "library Address"
																			}
																		],
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2669:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 222,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2669:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2669:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2669:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 227,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2694:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2669:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2702:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2661:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2661:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2661:73:1"
											},
											{
												"assignments": [
													233,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2751:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "2746:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 232,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2794:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 234,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2764:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2764:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 236,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2786:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2764:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2745:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2815:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2824:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2807:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "2807:78:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1670:905:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2589:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2615:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2599:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2599:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2634:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2626:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:43:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2651:0:1"
									},
									"scope": 525,
									"src": "2580:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "3723:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3762:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "3770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3776:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3779:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 257,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															305,
															349
														],
														"referencedDeclaration": 349,
														"src": "3740:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3740:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 256,
												"id": 263,
												"nodeType": "Return",
												"src": "3733:79:1"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "2898:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3643:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3664:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3656:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3672:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3672:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3655:35:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3709:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3709:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3708:14:1"
									},
									"scope": 525,
									"src": "3634:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "4188:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "4227:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4235:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4241:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 281,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4244:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 277,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															305,
															349
														],
														"referencedDeclaration": 349,
														"src": "4205:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4205:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 276,
												"id": 283,
												"nodeType": "Return",
												"src": "4198:59:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3825:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4050:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4080:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4072:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4072:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4109:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4096:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4096:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4137:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4123:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 271,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4123:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:93:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4174:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4173:14:1"
									},
									"scope": 525,
									"src": "4041:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "4739:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "4778:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4786:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 300,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "4792:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 297,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															305,
															349
														],
														"referencedDeclaration": 349,
														"src": "4756:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4756:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 296,
												"id": 303,
												"nodeType": "Return",
												"src": "4749:94:1"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "4270:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4635:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4665:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4657:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4686:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4673:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4673:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4692:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4656:50:1"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "4725:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4725:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4724:14:1"
									},
									"scope": 525,
									"src": "4626:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "5277:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 322,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5303:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$525",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$525",
																				"typeString": "library Address"
																			}
																		],
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5295:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 320,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5295:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5295:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5295:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 325,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "5320:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5295:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5327:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5287:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5287:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "5287:81:1"
											},
											{
												"assignments": [
													331,
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5384:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "5379:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 330,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5406:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "5393:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 332,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5393:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [
														{
															"id": 338,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "5446:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 334,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "5420:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5420:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 336,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "5439:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5420:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5378:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "5495:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5503:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 344,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5512:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 345,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "5524:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "5468:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 318,
												"id": 347,
												"nodeType": "Return",
												"src": "5461:76:1"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "4856:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5107:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5146:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5138:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5138:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5175:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5162:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5162:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5197:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5189:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5226:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5212:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5212:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5128:116:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5263:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5263:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5262:14:1"
									},
									"scope": 525,
									"src": "5098:446:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "5821:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5857:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "5865:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5871:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 359,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															366,
															395
														],
														"referencedDeclaration": 395,
														"src": "5838:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5838:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 358,
												"id": 364,
												"nodeType": "Return",
												"src": "5831:80:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5550:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5730:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5757:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5749:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5778:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5765:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5765:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5748:35:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "5807:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5807:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5806:14:1"
									},
									"scope": 525,
									"src": "5721:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "6260:168:1",
										"statements": [
											{
												"assignments": [
													379,
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6276:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "6271:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 378,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6271:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6298:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "6285:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 380,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6285:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6330:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 382,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "6312:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6312:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6312:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6270:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 388,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "6379:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "6387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 390,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "6396:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 391,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "6408:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 387,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "6352:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6352:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 377,
												"id": 393,
												"nodeType": "Return",
												"src": "6345:76:1"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "5924:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6111:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6147:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "6139:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6139:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6176:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "6163:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6163:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6204:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "6190:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6190:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6129:93:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "6246:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6246:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6245:14:1"
									},
									"scope": 525,
									"src": "6102:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "6704:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6742:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "6750:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 405,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															412,
															441
														],
														"referencedDeclaration": 441,
														"src": "6721:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6721:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "6714:84:1"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "6434:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6645:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6637:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6666:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6653:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:35:1"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "6690:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6690:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:14:1"
									},
									"scope": 525,
									"src": "6607:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "7146:170:1",
										"statements": [
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7162:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "7157:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7157:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7184:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "7171:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7171:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 432,
												"initialValue": {
													"arguments": [
														{
															"id": 430,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7218:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 428,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7198:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7198:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7198:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7156:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7267:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "7275:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 436,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7284:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 437,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "7296:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 433,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "7240:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7240:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 423,
												"id": 439,
												"nodeType": "Return",
												"src": "7233:76:1"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "6811:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7000:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7038:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7030:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7030:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7054:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7095:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7081:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7081:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7020:93:1"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "7132:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7131:14:1"
									},
									"scope": 525,
									"src": "6991:325:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "7798:434:1",
										"statements": [
											{
												"condition": {
													"id": 455,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 446,
													"src": "7812:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "8168:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "8190:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 474,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "8202:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 472,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "8182:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8182:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "8182:33:1"
														}
													]
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "7808:418:1",
												"trueBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "7821:341:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 456,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "7839:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7839:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7839:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 468,
															"nodeType": "IfStatement",
															"src": "7835:286:1",
															"trueBody": {
																"id": 467,
																"nodeType": "Block",
																"src": "7863:258:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 462,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 444,
																							"src": "8065:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 461,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 213,
																						"src": "8054:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 463,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8054:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8074:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 460,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8046:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8046:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 466,
																		"nodeType": "ExpressionStatement",
																		"src": "8046:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 469,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "8141:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 454,
															"id": 470,
															"nodeType": "Return",
															"src": "8134:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "7322:277:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7613:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7657:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7649:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7673:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7673:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7708:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7695:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7695:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7742:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7728:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7728:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7639:121:1"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "7784:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7784:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7783:14:1"
									},
									"scope": 525,
									"src": "7604:628:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "8613:135:1",
										"statements": [
											{
												"condition": {
													"id": 492,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 483,
													"src": "8627:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 501,
													"nodeType": "Block",
													"src": "8684:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "8706:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 498,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "8718:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 496,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "8698:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8698:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 500,
															"nodeType": "ExpressionStatement",
															"src": "8698:33:1"
														}
													]
												},
												"id": 502,
												"nodeType": "IfStatement",
												"src": "8623:119:1",
												"trueBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "8636:42:1",
													"statements": [
														{
															"expression": {
																"id": 493,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8657:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 491,
															"id": 494,
															"nodeType": "Return",
															"src": "8650:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "8238:210:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8462:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8493:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "8488:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8488:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8523:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "8510:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8510:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8557:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "8543:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8543:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8478:97:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "8599:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8599:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8598:14:1"
									},
									"scope": 525,
									"src": "8453:295:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8837:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 511,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "8913:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8913:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8933:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "9243:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 518,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "9264:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 517,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9257:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9257:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "9257:20:1"
														}
													]
												},
												"id": 522,
												"nodeType": "IfStatement",
												"src": "8909:379:1",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "8936:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9094:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9112:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9141:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9135:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9135:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9116:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9180:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9184:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9176:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9176:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9197:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9169:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9169:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9169:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 506,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9141:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 506,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9184:10:1",
																	"valueSize": 1
																}
															],
															"id": 515,
															"nodeType": "InlineAssembly",
															"src": "9085:142:1"
														}
													]
												}
											}
										]
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8763:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8784:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8771:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8771:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8810:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8796:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8796:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8770:53:1"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8837:0:1"
									},
									"scope": 525,
									"src": "8754:540:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 526,
							"src": "126:9170:1",
							"usedErrors": []
						}
					],
					"src": "33:9263:1"
				},
				"id": 1
			},
			"brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							837
						]
					},
					"id": 838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 527,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 528,
								"nodeType": "StructuredDocumentation",
								"src": "212:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 837,
							"linearizedBaseContracts": [
								837
							],
							"name": "SafeMath",
							"nameLocation": "417:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "644:140:2",
										"statements": [
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "654:124:2",
												"statements": [
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "686:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "678:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "678:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 545,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "690:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 543,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "694:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "690:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "678:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "713:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "717:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "713:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "709:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "728:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "735:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "727:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 539,
															"id": 552,
															"nodeType": "Return",
															"src": "720:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "759:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 555,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "765:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "758:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 539,
														"id": 557,
														"nodeType": "Return",
														"src": "751:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "432:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "577:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "592:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "584:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "603:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "595:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:22:2"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "629:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "635:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "628:15:2"
									},
									"scope": 837,
									"src": "568:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "1006:113:2",
										"statements": [
											{
												"id": 586,
												"nodeType": "UncheckedBlock",
												"src": "1016:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1044:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "1048:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1044:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 579,
														"nodeType": "IfStatement",
														"src": "1040:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1059:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1066:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1058:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 571,
															"id": 578,
															"nodeType": "Return",
															"src": "1051:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1090:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 581,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "1096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 582,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "1100:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1096:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 584,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1089:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 571,
														"id": 585,
														"nodeType": "Return",
														"src": "1082:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "790:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "939:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "954:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "946:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "965:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "957:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:22:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "991:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "997:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:15:2"
									},
									"scope": 837,
									"src": "930:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "1343:417:2",
										"statements": [
											{
												"id": 628,
												"nodeType": "UncheckedBlock",
												"src": "1353:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "1611:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1616:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1611:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 607,
														"nodeType": "IfStatement",
														"src": "1607:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1627:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1633:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 605,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1626:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 599,
															"id": 606,
															"nodeType": "Return",
															"src": "1619:16:2"
														}
													},
													{
														"assignments": [
															609
														],
														"declarations": [
															{
																"constant": false,
																"id": 609,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1657:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 628,
																"src": "1649:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 608,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1649:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 613,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 610,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "1661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 611,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1665:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1649:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 614,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "1684:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 615,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1688:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1684:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1693:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1684:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "1680:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1704:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1711:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1703:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 599,
															"id": 622,
															"nodeType": "Return",
															"src": "1696:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1735:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 625,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "1741:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 626,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1734:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 599,
														"id": 627,
														"nodeType": "Return",
														"src": "1727:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "1125:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1276:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1291:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1283:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1302:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1294:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:22:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1328:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1328:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1334:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:15:2"
									},
									"scope": 837,
									"src": "1267:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "1985:114:2",
										"statements": [
											{
												"id": 656,
												"nodeType": "UncheckedBlock",
												"src": "1995:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "2023:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2028:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2023:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 649,
														"nodeType": "IfStatement",
														"src": "2019:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2039:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2046:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 647,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2038:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 641,
															"id": 648,
															"nodeType": "Return",
															"src": "2031:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2070:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 651,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "2076:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 652,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2080:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2076:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 654,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2069:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 641,
														"id": 655,
														"nodeType": "Return",
														"src": "2062:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1766:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1918:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1933:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1925:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1944:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1936:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:22:2"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1970:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1970:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1976:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:15:2"
									},
									"scope": 837,
									"src": "1909:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "2334:114:2",
										"statements": [
											{
												"id": 684,
												"nodeType": "UncheckedBlock",
												"src": "2344:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "2372:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2377:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2372:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 677,
														"nodeType": "IfStatement",
														"src": "2368:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2388:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2395:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2387:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 669,
															"id": 676,
															"nodeType": "Return",
															"src": "2380:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2419:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 679,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "2425:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 680,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "2429:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2425:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 682,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2418:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 669,
														"id": 683,
														"nodeType": "Return",
														"src": "2411:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "2105:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2267:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2282:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2274:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2293:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2285:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:22:2"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2319:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2319:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2325:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:15:2"
									},
									"scope": 837,
									"src": "2258:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "2750:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 696,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "2767:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 697,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "2771:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2767:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 695,
												"id": 699,
												"nodeType": "Return",
												"src": "2760:12:2"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "2454:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2692:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2715:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2707:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:22:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2741:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:9:2"
									},
									"scope": 837,
									"src": "2683:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "3117:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 711,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3134:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 712,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "3138:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3134:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 710,
												"id": 714,
												"nodeType": "Return",
												"src": "3127:12:2"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "2785:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3059:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3082:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "3074:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3074:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:22:2"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "3108:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:9:2"
									},
									"scope": 837,
									"src": "3050:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "3460:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 726,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "3477:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 727,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "3481:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3477:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 729,
												"nodeType": "Return",
												"src": "3470:12:2"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "3152:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3402:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3414:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3406:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3425:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3417:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:22:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3451:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:9:2"
									},
									"scope": 837,
									"src": "3393:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "3845:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "3862:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 742,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "3866:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3862:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 740,
												"id": 744,
												"nodeType": "Return",
												"src": "3855:12:2"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "3495:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3787:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3799:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3791:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3810:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3802:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:22:2"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3836:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:9:2"
									},
									"scope": 837,
									"src": "3778:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "4394:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 756,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "4411:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 757,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "4415:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4411:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 755,
												"id": 759,
												"nodeType": "Return",
												"src": "4404:12:2"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "3880:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4336:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4348:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "4340:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4359:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "4351:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:22:2"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "4385:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4385:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4384:9:2"
									},
									"scope": 837,
									"src": "4327:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "5012:106:2",
										"statements": [
											{
												"id": 784,
												"nodeType": "UncheckedBlock",
												"src": "5022:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 774,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "5054:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 775,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "5059:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5054:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 777,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "5062:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 773,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5046:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5046:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 779,
														"nodeType": "ExpressionStatement",
														"src": "5046:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 780,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "5096:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 781,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "5100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5096:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 772,
														"id": 783,
														"nodeType": "Return",
														"src": "5089:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "4429:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4896:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4917:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4909:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4936:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4928:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4928:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4961:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4947:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 767,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4947:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4899:80:2"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "5003:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5002:9:2"
									},
									"scope": 837,
									"src": "4887:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "5727:105:2",
										"statements": [
											{
												"id": 809,
												"nodeType": "UncheckedBlock",
												"src": "5737:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 799,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "5769:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5773:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5769:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 802,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "5776:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 798,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5761:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5761:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 804,
														"nodeType": "ExpressionStatement",
														"src": "5761:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 805,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "5810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 806,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5814:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5810:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 797,
														"id": 808,
														"nodeType": "Return",
														"src": "5803:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "5124:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5611:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5632:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5624:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5624:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5651:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5643:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5676:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5662:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5662:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5614:80:2"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5718:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5718:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5717:9:2"
									},
									"scope": 837,
									"src": "5602:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "6603:105:2",
										"statements": [
											{
												"id": 834,
												"nodeType": "UncheckedBlock",
												"src": "6613:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "6645:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6649:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6645:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 827,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "6652:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 823,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6637:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6637:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 829,
														"nodeType": "ExpressionStatement",
														"src": "6637:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 830,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "6686:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 831,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "6690:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6686:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 822,
														"id": 833,
														"nodeType": "Return",
														"src": "6679:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "5838:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6487:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6508:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6500:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6500:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6527:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6519:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6552:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6538:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6538:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6490:80:2"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "6594:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6593:9:2"
									},
									"scope": 837,
									"src": "6478:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 838,
							"src": "409:6301:2",
							"usedErrors": []
						}
					],
					"src": "33:6677:2"
				},
				"id": 2
			},
			"brownie_projects/sharplabs/contracts/utils/token/IERC20.sol": {
				"ast": {
					"absolutePath": "brownie_projects/sharplabs/contracts/utils/token/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							915
						]
					},
					"id": 916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 840,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 915,
							"linearizedBaseContracts": [
								915
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:3"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "342:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:3"
									},
									"scope": 915,
									"src": "296:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "493:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:3"
									},
									"scope": 915,
									"src": "434:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "733:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "745:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "779:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:3"
									},
									"scope": 915,
									"src": "715:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1079:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1094:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:3"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1134:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:3"
									},
									"scope": 915,
									"src": "1060:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1813:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1830:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:3"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1864:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:3"
									},
									"scope": 915,
									"src": "1796:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2199:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2241:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:3"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "2280:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:3"
									},
									"scope": 915,
									"src": "2168:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 905,
									"name": "Transfer",
									"nameLocation": "2461:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2470:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2492:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2512:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:3"
									},
									"src": "2455:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 914,
									"name": "Approval",
									"nameLocation": "2692:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2701:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2724:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "2749:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:3"
									},
									"src": "2686:78:3"
								}
							],
							"scope": 916,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2660:3"
				},
				"id": 3
			},
			"brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol": {
				"ast": {
					"absolutePath": "brownie_projects/sharplabs/contracts/utils/token/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							525
						],
						"IERC20": [
							915
						],
						"SafeERC20": [
							1140
						],
						"SafeMath": [
							837
						]
					},
					"id": 1141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 917,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "brownie_projects/sharplabs/contracts/utils/token/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 918,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1141,
							"sourceUnit": 916,
							"src": "58:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/sharplabs/contracts/utils/math/SafeMath.sol",
							"file": "../math/SafeMath.sol",
							"id": 919,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1141,
							"sourceUnit": 838,
							"src": "81:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "brownie_projects/sharplabs/contracts/utils/Address.sol",
							"file": "../Address.sol",
							"id": 920,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1141,
							"sourceUnit": 526,
							"src": "112:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 921,
								"nodeType": "StructuredDocumentation",
								"src": "138:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1140,
							"linearizedBaseContracts": [
								1140
							],
							"name": "SafeERC20",
							"nameLocation": "604:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 924,
									"libraryName": {
										"id": 922,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 525,
										"src": "626:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "620:26:4",
									"typeName": {
										"id": 923,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "638:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "724:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 938,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "784:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$915",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 864,
																		"src": "784:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "784:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 941,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "809:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 942,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "813:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 936,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "761:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "761:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "761:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 934,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "734:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "734:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "734:86:4"
											}
										]
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "661:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "681:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "674:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$915",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 926,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 925,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "674:6:4"
													},
													"referencedDeclaration": 915,
													"src": "674:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$915",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "696:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "688:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "708:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "700:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:41:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:0:4"
									},
									"scope": 1140,
									"src": "652:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "923:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "953:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 963,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "983:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$915",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 896,
																		"src": "983:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "983:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 966,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "1012:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "1018:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 968,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "1022:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 961,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "960:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "960:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "960:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 959,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "933:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "933:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "933:96:4"
											}
										]
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "842:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "866:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "859:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$915",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 948,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "859:6:4"
													},
													"referencedDeclaration": 915,
													"src": "859:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$915",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "881:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "873:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "895:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "887:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "907:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "899:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:55:4"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:0:4"
									},
									"scope": 1140,
									"src": "833:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "1372:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 985,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "1621:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1630:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1621:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 988,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1620:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 993,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1661:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1140",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1140",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 992,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1653:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 991,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1653:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 994,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1653:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 995,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "1668:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 989,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 977,
																					"src": "1637:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$915",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 874,
																				"src": "1637:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1637:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1680:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1637:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 999,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1636:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1620:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1696:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 984,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1599:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1599:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "1599:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1005,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "1792:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1008,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "1822:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$915",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 884,
																		"src": "1822:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1822:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1011,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "1846:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1012,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1855:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1006,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1799:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1799:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1799:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1004,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "1772:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "1772:90:4"
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "1042:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1305:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1324:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1317:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$915",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 976,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 975,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "1317:6:4"
													},
													"referencedDeclaration": 915,
													"src": "1317:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$915",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1339:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1331:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1356:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1348:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:46:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:0:4"
									},
									"scope": 1140,
									"src": "1296:573:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1961:194:4",
										"statements": [
											{
												"assignments": [
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1979:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1971:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1971:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1033,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2018:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1140",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1140",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2010:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1031,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2010:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2010:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1035,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "2025:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1029,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "1994:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$915",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 874,
															"src": "1994:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1994:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1037,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "2036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1994:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1971:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2071:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "2101:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$915",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 884,
																		"src": "2101:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2101:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "2125:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "2134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2078:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2078:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2078:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$915",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "2051:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2051:97:4"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1884:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1913:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1906:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$915",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1019,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1018,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "1906:6:4"
													},
													"referencedDeclaration": 915,
													"src": "1906:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$915",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1928:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1920:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1945:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1937:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:46:4"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1961:0:4"
									},
									"scope": 1140,
									"src": "1875:280:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "2247:370:4",
										"statements": [
											{
												"id": 1099,
												"nodeType": "UncheckedBlock",
												"src": "2257:354:4",
												"statements": [
													{
														"assignments": [
															1064
														],
														"declarations": [
															{
																"constant": false,
																"id": 1064,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2289:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1099,
																"src": "2281:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1063,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2281:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1073,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2328:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1140",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1140",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2335:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2304:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$915",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 874,
																"src": "2304:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2304:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2281:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1075,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "2365:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1076,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "2381:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2365:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2388:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1074,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2357:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2357:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1080,
														"nodeType": "ExpressionStatement",
														"src": "2357:75:4"
													},
													{
														"assignments": [
															1082
														],
														"declarations": [
															{
																"constant": false,
																"id": 1082,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2454:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1099,
																"src": "2446:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2446:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1086,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1083,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "2469:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1084,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "2484:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2469:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2446:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1088,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2523:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$915",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1091,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1056,
																					"src": "2553:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$915",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 884,
																				"src": "2553:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2553:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1094,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "2577:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1095,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "2586:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1089,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2530:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2530:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2530:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$915",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1087,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "2503:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$915_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2503:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1098,
														"nodeType": "ExpressionStatement",
														"src": "2503:97:4"
													}
												]
											}
										]
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2170:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2199:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "2192:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$915",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "2192:6:4"
													},
													"referencedDeclaration": 915,
													"src": "2192:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$915",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "2206:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2231:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "2223:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:46:4"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2247:0:4"
									},
									"scope": 1140,
									"src": "2161:456:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "3070:636:4",
										"statements": [
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3432:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "3419:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1110,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3419:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"arguments": [
														{
															"id": 1117,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "3473:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3479:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1114,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "3453:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$915",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$915",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3445:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3445:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3445:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 285,
														"src": "3445:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3445:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3419:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1121,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "3528:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3528:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3548:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"nodeType": "IfStatement",
												"src": "3524:176:4",
												"trueBody": {
													"id": 1136,
													"nodeType": "Block",
													"src": "3551:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1128,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1111,
																				"src": "3623:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1130,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3636:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1129,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3636:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1131,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3635:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1126,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3612:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3612:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3612:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3644:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1125,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3604:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1135,
															"nodeType": "ExpressionStatement",
															"src": "3604:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "2623:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3009:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3036:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3029:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$915",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1103,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "3029:6:4"
													},
													"referencedDeclaration": 915,
													"src": "3029:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$915",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3056:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3043:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3043:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:33:4"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3070:0:4"
									},
									"scope": 1140,
									"src": "3000:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1141,
							"src": "596:3112:4",
							"usedErrors": []
						}
					],
					"src": "33:3675:4"
				},
				"id": 4
			}
		}
	}
}