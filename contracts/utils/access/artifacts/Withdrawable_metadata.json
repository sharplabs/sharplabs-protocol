{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_assetAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "LogWithdraw",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_assetAddress",
						"type": "address"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdraw(address)": {
					"details": "Withdraw asset.",
					"params": {
						"_assetAddress": "Asset to be withdrawn."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Ensures that any contract that inherits from this contract is able to withdraw funds that are accidentally received or stuck.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sharplabs/contracts/utils/access/Withdrawable.sol": "Withdrawable"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sharplabs/contracts/utils/Address.sol": {
			"keccak256": "0x2254ff0365cbc4f80af2433d10890e0d4816c14f38a6e9e0c746f861ad434f1b",
			"license": "MIT",
			"urls": [
				"bzz-raw://17ecd670c7f9522306389b638a01d0b0e93156ec0e9c2cbe798b091e89474a32",
				"dweb:/ipfs/QmUzZpE98hpS8J4KtqcLxxTzdrP2rKeUWssF5GJA1e3dYw"
			]
		},
		"sharplabs/contracts/utils/Context.sol": {
			"keccak256": "0x1cc748b2446aafb4c362edda845ca05b3b9994ebafc2c0ddbc894982c21305f0",
			"license": "MIT",
			"urls": [
				"bzz-raw://076e714ffbbacde572851624994b9457f6765136fa8f5613fd082f607ec1924b",
				"dweb:/ipfs/QmPZJrP5BSYeMe4ajmpbNS1p3nsfJbTbo7hBwHxJA133Uv"
			]
		},
		"sharplabs/contracts/utils/access/Ownable.sol": {
			"keccak256": "0x43180eb9b0777a7f0b7ecfcae76c0e083c783a96119c9d8f1ffe3df9499968d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://d408370b21bcea7451dae0b39224f27cccedc9a8056de889bcb676e41ae057b9",
				"dweb:/ipfs/QmeZ6z6zrNMoUNAVjPhUqCompoBoe2LSpqHrJrnr7WJUP6"
			]
		},
		"sharplabs/contracts/utils/access/Withdrawable.sol": {
			"keccak256": "0xd13f7a127fab29ff583309ff39bfd627db7390202db32fa3958a71313b0bd378",
			"license": "MIT",
			"urls": [
				"bzz-raw://c80b2c9273b263d68f8b63711cc3fd409940bac2372d7b0e16033723836f7fa0",
				"dweb:/ipfs/QmQDvyNcQFhjkZ9xginYHBBKqB5YKzi1qcKqb3JiUwD7Rs"
			]
		},
		"sharplabs/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1",
			"license": "MIT",
			"urls": [
				"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916",
				"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg"
			]
		},
		"sharplabs/contracts/utils/token/ERC20.sol": {
			"keccak256": "0x9336c439b650ed30b53a5c9cb26d7efa34ee4f6a3359e789810c170f916928af",
			"license": "MIT",
			"urls": [
				"bzz-raw://57a1cbb4dfe75b31c8b548ab65a22e20b9a2f88603c493704500ccedc894f5bd",
				"dweb:/ipfs/QmPs4jM1ot85vw9V6vUp1J7tWpbB9gfEgCkVjRJ39jJEYh"
			]
		},
		"sharplabs/contracts/utils/token/IERC20.sol": {
			"keccak256": "0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400",
			"license": "MIT",
			"urls": [
				"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52",
				"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd"
			]
		},
		"sharplabs/contracts/utils/token/IERC20Metadata.sol": {
			"keccak256": "0x5e436570a8cc3b9b0e1ee9496474d65302af6a380728e561324288e468db645d",
			"license": "MIT",
			"urls": [
				"bzz-raw://b8c39aff9aad1fcbf6a9c2f70e9e358ca551e9b9fc847c97a5f3d42cfeb6cc4f",
				"dweb:/ipfs/QmUyrQTncAJRnuefm2D97cdzMohdEb6qpxDpnR9pnQyeaH"
			]
		},
		"sharplabs/contracts/utils/token/SafeERC20.sol": {
			"keccak256": "0x593692219f7f58fc3dd89dc0271eaf2b459fd7515bbf53dcdb799bcce79c97b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://5dcb333da0bda5db19dacbc438f214d8e8408c210605baba683ce4af33ba525d",
				"dweb:/ipfs/QmRjDL9cN4qKGozcoN34EscZZesPqsa9E5qggHRihUZxkB"
			]
		}
	},
	"version": 1
}