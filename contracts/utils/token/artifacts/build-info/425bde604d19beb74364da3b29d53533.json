{
	"id": "425bde604d19beb74364da3b29d53533",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/utils/token/ERC20Rebase.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"../Context.sol\";\nimport \"../math/SafeMath.sol\";\n\n\ncontract ERC20Rebase is Context, IERC20, IERC20Metadata {\n\n    using SafeMath for uint256;\n\n    uint256 internal _gonsPerFragment;\n\n    mapping(address => uint256) private _gonBalances;\n\n    mapping(address => mapping(address => uint256)) private _allowedFragments;\n\n    uint256 public TOTAL_GONS;\n\n    uint256 internal _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @param _address The address to query.\n     * @return The balance of the specified address.\n     */\n    function balanceOf(address _address) public view override returns (uint256) {\n        if (_gonsPerFragment == 0) return 0;\n        return _gonBalances[_address].div(_gonsPerFragment);\n    }\n\n    /**\n     * @param _address The address to query.\n     * @return The gon balance of the specified address.\n     */\n    function scaledBalanceOf(address _address) external view returns (uint256) {\n        return _gonBalances[_address];\n    }\n\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowedFragments[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowedFragments[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, _allowedFragments[owner][spender] + addedValue);\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = _allowedFragments[owner][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n        return true;\n    }\n\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);        \n        _transfer(from, to, amount);\n        return true;\n    }\n\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 gonValue = amount.mul(_gonsPerFragment);\n\n        uint256 fromBalance = _gonBalances[from];\n        require(fromBalance >= gonValue, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _gonBalances[from] = fromBalance - gonValue;\n        }\n\n        _gonBalances[to] += gonValue;    \n\n        emit Transfer(from, to, amount);    \n        \n        _afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        uint256 gonValue = amount.mul(_gonsPerFragment);\n\n        TOTAL_GONS += gonValue;\n        _totalSupply += amount;\n        _gonBalances[account] += gonValue;\n\n        _afterTokenTransfer(address(0), account, amount);\n\n        emit Transfer(address(0), account, amount);\n    }\n\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 gonValue = amount.mul(_gonsPerFragment);\n        uint256 accountBalance = _gonBalances[account];\n        require(accountBalance >= gonValue, \"ERC20: burn amount exceeds balance\");    \n        unchecked {\n            _gonBalances[account] = accountBalance - gonValue;\n        }\n\n        TOTAL_GONS -= gonValue;\n        _totalSupply -= amount;\n\n        _afterTokenTransfer(account, address(0), amount);\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}"
			},
			"contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"contracts/utils/token/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.13;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}"
			},
			"contracts/utils/token/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity 0.8.13;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x1cc748b2446aafb4c362edda845ca05b3b9994ebafc2c0ddbc894982c21305f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://076e714ffbbacde572851624994b9457f6765136fa8f5613fd082f607ec1924b\",\"dweb:/ipfs/QmPZJrP5BSYeMe4ajmpbNS1p3nsfJbTbo7hBwHxJA133Uv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/SafeMath.sol\":409:6710  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/SafeMath.sol\":409:6710  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a126ec763ec203286c775447a64c819e8497e49faa45a7d61ab5a5b58042315264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a126ec763ec203286c775447a64c819e8497e49faa45a7d61ab5a5b58042315264736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0x26 0xEC PUSH23 0x3EC203286C775447A64C819E8497E49FAA45A7D61AB5A5 0xB5 DUP1 TIMESTAMP BALANCE MSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "409:6301:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;409:6301:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a126ec763ec203286c775447a64c819e8497e49faa45a7d61ab5a5b58042315264736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0x26 0xEC PUSH23 0x3EC203286C775447A64C819E8497E49FAA45A7D61AB5A5 0xB5 DUP1 TIMESTAMP BALANCE MSTORE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "409:6301:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 409,
									"end": 6710,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a126ec763ec203286c775447a64c819e8497e49faa45a7d61ab5a5b58042315264736f6c634300080d0033",
									".code": [
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 409,
											"end": 6710,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/token/ERC20Rebase.sol": {
				"ERC20Rebase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOTAL_GONS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "scaledBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"params": {
									"_address": "The address to query."
								},
								"returns": {
									"_0": "The balance of the specified address."
								}
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"scaledBalanceOf(address)": {
								"params": {
									"_address": "The address to query."
								},
								"returns": {
									"_0": "The gon balance of the specified address."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/token/ERC20Rebase.sol\":170:6151  contract ERC20Rebase is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/utils/token/ERC20Rebase.sol\":593:731  constructor (string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/utils/token/ERC20Rebase.sol\":660:673  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/utils/token/ERC20Rebase.sol\":660:665  _name */\n  0x05\n  swap1\n    /* \"contracts/utils/token/ERC20Rebase.sol\":660:673  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/utils/token/ERC20Rebase.sol\":683:700  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/utils/token/ERC20Rebase.sol\":683:690  _symbol */\n  0x06\n  swap1\n    /* \"contracts/utils/token/ERC20Rebase.sol\":683:700  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"contracts/utils/token/ERC20Rebase.sol\":710:719  _decimals */\n  0x07\n    /* \"contracts/utils/token/ERC20Rebase.sol\":710:724  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/utils/token/ERC20Rebase.sol\":722:724  18 */\n  0x12\n    /* \"contracts/utils/token/ERC20Rebase.sol\":710:724  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/utils/token/ERC20Rebase.sol\":170:6151  contract ERC20Rebase is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"contracts/utils/token/ERC20Rebase.sol\":170:6151  contract ERC20Rebase is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/token/ERC20Rebase.sol\":170:6151  contract ERC20Rebase is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe00713e9\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1da24f3e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/utils/token/ERC20Rebase.sol\":737:826  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2048:2245  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2048:2245  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1026:1132  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1113:1125  _totalSupply */\n      sload(0x04)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1026:1132  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1026:1132  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_20\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1565:1686  function scaledBalanceOf(address _address) external view returns (uint256) {... */\n    tag_6:\n      tag_28\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1657:1679  _gonBalances[_address] */\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1631:1638  uint256 */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1657:1679  _gonBalances[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1657:1669  _gonBalances */\n      0x01\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1657:1679  _gonBalances[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1565:1686  function scaledBalanceOf(address _address) external view returns (uint256) {... */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3738:4002  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_22\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":931:1020  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1004:1013  _decimals */\n      sload(0x07)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":931:1020  function decimals() public view virtual returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1004:1013  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2093:2129   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2066:2084   */\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":931:1020  function decimals() public view virtual returns (uint8) {... */\n      tag_20\n        /* \"#utility.yul\":1951:2135   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2603:2845  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_22\n      tag_47\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1252:1441  function balanceOf(address _address) public view override returns (uint256) {... */\n    tag_10:\n      tag_28\n      tag_51\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":832:925  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_18\n      tag_55\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2851:3285  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_22\n      tag_58\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1692:1881  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_13:\n      tag_22\n      tag_62\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1887:2042  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_28\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2026  _allowedFragments[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1976:1983  uint256 */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2026  _allowedFragments[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2019  _allowedFragments */\n      0x02\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2026  _allowedFragments[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2035  _allowedFragments[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1887:2042  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":441:466  uint256 public TOTAL_GONS */\n    tag_15:\n      tag_28\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":737:826  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":782:795  string memory */\n      0x60\n        /* \"contracts/utils/token/ERC20Rebase.sol\":814:819  _name */\n      0x05\n        /* \"contracts/utils/token/ERC20Rebase.sol\":807:819  return _name */\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_75\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/utils/token/ERC20Rebase.sol\":737:826  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2048:2245  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2131:2135  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2185:2217  _approve(owner, spender, amount) */\n      tag_83\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      dup2\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2201:2208  spender */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2210:2216  amount */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2185:2193  _approve */\n      tag_84\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2185:2217  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2234:2238  true */\n      0x01\n      swap4\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2048:2245  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3738:4002  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_40:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3835:3839  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3891:3929  _spendAllowance(from, spender, amount) */\n      tag_89\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3907:3911  from */\n      dup6\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      dup3\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3922:3928  amount */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3891:3906  _spendAllowance */\n      tag_90\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3891:3929  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3947:3974  _transfer(from, to, amount) */\n      tag_91\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3957:3961  from */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3963:3965  to */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3967:3973  amount */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3947:3956  _transfer */\n      tag_92\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3947:3974  _transfer(from, to, amount) */\n      jump\t// in\n    tag_91:\n      pop\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3991:3995  true */\n      0x01\n      swap5\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3738:4002  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2603:2845  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2691:2695  bool */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2770:2794  _allowedFragments[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2770:2787  _allowedFragments */\n      0x02\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2770:2794  _allowedFragments[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2770:2803  _allowedFragments[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2691:2695  bool */\n      swap1\n      swap2\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2745:2817  _approve(owner, spender, _allowedFragments[owner][spender] + addedValue) */\n      tag_83\n      swap1\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      dup3\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2770:2803  _allowedFragments[owner][spender] */\n      dup7\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2770:2816  _allowedFragments[owner][spender] + addedValue */\n      tag_97\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2806:2816  addedValue */\n      dup8\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2770:2816  _allowedFragments[owner][spender] + addedValue */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2745:2753  _approve */\n      tag_84\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2745:2817  _approve(owner, spender, _allowedFragments[owner][spender] + addedValue) */\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1252:1441  function balanceOf(address _address) public view override returns (uint256) {... */\n    tag_52:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1319:1326  uint256 */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1342:1358  _gonsPerFragment */\n      dup1\n      sload\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1362:1363  0 */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1342:1363  _gonsPerFragment == 0 */\n      sub\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1338:1373  if (_gonsPerFragment == 0) return 0 */\n      tag_100\n      jumpi\n      pop\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1372:1373  0 */\n      0x00\n      swap2\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1252:1441  function balanceOf(address _address) public view override returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1338:1373  if (_gonsPerFragment == 0) return 0 */\n    tag_100:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1417:1433  _gonsPerFragment */\n      0x00\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1390:1412  _gonBalances[_address] */\n      dup5\n      and\n      dup3\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1390:1402  _gonBalances */\n      0x01\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1390:1412  _gonBalances[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1390:1434  _gonBalances[_address].div(_gonsPerFragment) */\n      tag_101\n      swap2\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1390:1416  _gonBalances[_address].div */\n      tag_102\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1390:1434  _gonBalances[_address].div(_gonsPerFragment) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1383:1434  return _gonBalances[_address].div(_gonsPerFragment) */\n      swap3\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1252:1441  function balanceOf(address _address) public view override returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/token/ERC20Rebase.sol\":832:925  function symbol() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":879:892  string memory */\n      0x60\n        /* \"contracts/utils/token/ERC20Rebase.sol\":911:918  _symbol */\n      0x06\n        /* \"contracts/utils/token/ERC20Rebase.sol\":904:918  return _symbol */\n      dup1\n      sload\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2851:3285  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_59:\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2944:2948  bool */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3025:3049  _allowedFragments[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3025:3042  _allowedFragments */\n      0x02\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3025:3049  _allowedFragments[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3025:3058  _allowedFragments[owner][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2944:2948  bool */\n      swap1\n      swap2\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3076:3111  currentAllowance >= subtractedValue */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3068:3153  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3257:3259   */\n      0x20\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3068:3153  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3239:3260   */\n      mstore\n        /* \"#utility.yul\":3296:3298   */\n      0x25\n        /* \"#utility.yul\":3276:3294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3269:3299   */\n      mstore\n        /* \"#utility.yul\":3335:3369   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3315:3333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3308:3370   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3386:3404   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3379:3414   */\n      mstore\n        /* \"#utility.yul\":3431:3450   */\n      0x84\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3068:3153  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3187:3247  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_91\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3196:3201  owner */\n      dup3\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3203:3210  spender */\n      dup7\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3231:3246  subtractedValue */\n      dup7\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3212:3228  currentAllowance */\n      dup5\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3212:3246  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3187:3195  _approve */\n      tag_84\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3187:3247  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1692:1881  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_63:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1771:1775  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      caller\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1825:1853  _transfer(owner, to, amount) */\n      tag_83\n        /* \"contracts/utils/Context.sol\":666:676  msg.sender */\n      dup2\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1842:1844  to */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1846:1852  amount */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1825:1834  _transfer */\n      tag_92\n        /* \"contracts/utils/token/ERC20Rebase.sol\":1825:1853  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2251:2597  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2352:2371  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2344:2412  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3663:3665   */\n      0x20\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2344:2412  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3645:3666   */\n      mstore\n        /* \"#utility.yul\":3702:3704   */\n      0x24\n        /* \"#utility.yul\":3682:3700   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3675:3705   */\n      mstore\n        /* \"#utility.yul\":3741:3775   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3721:3739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3714:3776   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3792:3810   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3785:3819   */\n      mstore\n        /* \"#utility.yul\":3836:3855   */\n      0x84\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2344:2412  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n        /* \"#utility.yul\":3461:3861   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2344:2412  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2430:2451  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2422:2490  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4068:4070   */\n      0x20\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2422:2490  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4050:4071   */\n      mstore\n        /* \"#utility.yul\":4107:4109   */\n      0x22\n        /* \"#utility.yul\":4087:4105   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4080:4110   */\n      mstore\n        /* \"#utility.yul\":4146:4180   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4126:4144   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4119:4181   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4197:4215   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4190:4222   */\n      mstore\n        /* \"#utility.yul\":4239:4258   */\n      0x84\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2422:2490  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n        /* \"#utility.yul\":3866:4264   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2422:2490  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2501:2525  _allowedFragments[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2501:2518  _allowedFragments */\n      0x02\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2501:2525  _allowedFragments[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2501:2534  _allowedFragments[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2501:2543  _allowedFragments[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2558:2590  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2558:2590  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2558:2590  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2251:2597  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3291:3732  function _spendAllowance(... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2026  _allowedFragments[owner] */\n      dup4\n      dup2\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3421:3445  uint256 currentAllowance */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2026  _allowedFragments[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2019  _allowedFragments */\n      0x02\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2026  _allowedFragments[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/utils/token/ERC20Rebase.sol\":2002:2035  _allowedFragments[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3487:3524  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3483:3726  if (currentAllowance != type(uint256).max) {... */\n      tag_134\n      jumpi\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3568:3574  amount */\n      dup2\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3548:3564  currentAllowance */\n      dup2\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3548:3574  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3540:3608  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4471:4473   */\n      0x20\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3540:3608  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4453:4474   */\n      mstore\n        /* \"#utility.yul\":4510:4512   */\n      0x1d\n        /* \"#utility.yul\":4490:4508   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4483:4513   */\n      mstore\n        /* \"#utility.yul\":4549:4580   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4529:4547   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4522:4581   */\n      mstore\n        /* \"#utility.yul\":4598:4616   */\n      0x64\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3540:3608  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_112\n        /* \"#utility.yul\":4269:4622   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3540:3608  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_131:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3650:3701  _approve(owner, spender, currentAllowance - amount) */\n      tag_134\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3659:3664  owner */\n      dup5\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3666:3673  spender */\n      dup5\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3694:3700  amount */\n      dup5\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3675:3691  currentAllowance */\n      dup5\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3675:3700  currentAllowance - amount */\n      sub\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3650:3658  _approve */\n      tag_84\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3650:3701  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3411:3732  {... */\n      pop\n        /* \"contracts/utils/token/ERC20Rebase.sol\":3291:3732  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4008:4719  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4104:4122  from != address(0) */\n      dup4\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4096:4164  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4829:4831   */\n      0x20\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4096:4164  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4811:4832   */\n      mstore\n        /* \"#utility.yul\":4868:4870   */\n      0x25\n        /* \"#utility.yul\":4848:4866   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4841:4871   */\n      mstore\n        /* \"#utility.yul\":4907:4941   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4887:4905   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4880:4942   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4958:4976   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4951:4986   */\n      mstore\n        /* \"#utility.yul\":5003:5022   */\n      0x84\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4096:4164  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_112\n        /* \"#utility.yul\":4627:5028   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4096:4164  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4182:4198  to != address(0) */\n      dup3\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4174:4238  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5235:5237   */\n      0x20\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4174:4238  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5217:5238   */\n      mstore\n        /* \"#utility.yul\":5274:5276   */\n      0x23\n        /* \"#utility.yul\":5254:5272   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5247:5277   */\n      mstore\n        /* \"#utility.yul\":5313:5347   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5293:5311   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5286:5348   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5364:5382   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5357:5390   */\n      mstore\n        /* \"#utility.yul\":5407:5426   */\n      0x84\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4174:4238  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_112\n        /* \"#utility.yul\":5033:5432   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4174:4238  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_139:\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4298:4314  uint256 gonValue */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4328:4344  _gonsPerFragment */\n      dup1\n      sload\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4317:4345  amount.mul(_gonsPerFragment) */\n      tag_144\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4317:4323  amount */\n      dup4\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4317:4327  amount.mul */\n      tag_145\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4317:4345  amount.mul(_gonsPerFragment) */\n      jump\t// in\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4378:4396  _gonBalances[from] */\n      dup6\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4356:4375  uint256 fromBalance */\n      0x00\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4378:4396  _gonBalances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4378:4390  _gonBalances */\n      0x01\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4378:4396  _gonBalances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4298:4345  uint256 gonValue = amount.mul(_gonsPerFragment) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4414:4437  fromBalance >= gonValue */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4406:4480  require(fromBalance >= gonValue, \"ERC20: transfer amount exceeds balance\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5639:5641   */\n      0x20\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4406:4480  require(fromBalance >= gonValue, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5621:5642   */\n      mstore\n        /* \"#utility.yul\":5678:5680   */\n      0x26\n        /* \"#utility.yul\":5658:5676   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5651:5681   */\n      mstore\n        /* \"#utility.yul\":5717:5751   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5697:5715   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5690:5752   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5768:5786   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5761:5797   */\n      mstore\n        /* \"#utility.yul\":5814:5833   */\n      0x84\n      add\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4406:4480  require(fromBalance >= gonValue, \"ERC20: transfer amount exceeds balance\") */\n      tag_112\n        /* \"#utility.yul\":5437:5839   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4406:4480  require(fromBalance >= gonValue, \"ERC20: transfer amount exceeds balance\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4514:4532  _gonBalances[from] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4514:4526  _gonBalances */\n      0x01\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4514:4532  _gonBalances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4535:4557  fromBalance - gonValue */\n      dup6\n      dup6\n      sub\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4514:4557  _gonBalances[from] = fromBalance - gonValue */\n      swap1\n      sstore\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4578:4594  _gonBalances[to] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4578:4606  _gonBalances[to] += gonValue */\n      dup1\n      sload\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4549:4557  gonValue */\n      dup5\n      swap3\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4514:4532  _gonBalances[from] */\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4578:4606  _gonBalances[to] += gonValue */\n      tag_149\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4549:4557  gonValue */\n      dup5\n      swap1\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4578:4606  _gonBalances[to] += gonValue */\n      tag_98\n      jump\t// in\n    tag_149:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4641:4643  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4626:4652  Transfer(from, to, amount) */\n      and\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4635:4639  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4626:4652  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4645:4651  amount */\n      dup6\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4626:4652  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_150\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4626:4652  Transfer(from, to, amount) */\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4086:4719  {... */\n      pop\n      pop\n        /* \"contracts/utils/token/ERC20Rebase.sol\":4008:4719  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3778:3874  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"contracts/utils/math/SafeMath.sol\":3836:3843  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3862:3867  a / b */\n      tag_154\n        /* \"contracts/utils/math/SafeMath.sol\":3866:3867  b */\n      dup3\n        /* \"contracts/utils/math/SafeMath.sol\":3862:3863  a */\n      dup5\n        /* \"contracts/utils/math/SafeMath.sol\":3862:3867  a / b */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/utils/math/SafeMath.sol\":3855:3867  return a / b */\n      swap4\n        /* \"contracts/utils/math/SafeMath.sol\":3778:3874  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3393:3489  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_145:\n        /* \"contracts/utils/math/SafeMath.sol\":3451:3458  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3477:3482  a * b */\n      tag_154\n        /* \"contracts/utils/math/SafeMath.sol\":3481:3482  b */\n      dup3\n        /* \"contracts/utils/math/SafeMath.sol\":3477:3478  a */\n      dup5\n        /* \"contracts/utils/math/SafeMath.sol\":3477:3482  a * b */\n      tag_159\n      jump\t// in\n        /* \"#utility.yul\":14:611   */\n    tag_21:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_165:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_165)\n    tag_167:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_161:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_170:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_24:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_172:\n        /* \"#utility.yul\":962:991   */\n      tag_173\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_161\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1613   */\n    tag_34:\n        /* \"#utility.yul\":1486:1492   */\n      0x00\n        /* \"#utility.yul\":1539:1541   */\n      0x20\n        /* \"#utility.yul\":1527:1536   */\n      dup3\n        /* \"#utility.yul\":1518:1525   */\n      dup5\n        /* \"#utility.yul\":1514:1537   */\n      sub\n        /* \"#utility.yul\":1510:1542   */\n      slt\n        /* \"#utility.yul\":1507:1559   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1507:1559   */\n    tag_177:\n        /* \"#utility.yul\":1578:1607   */\n      tag_154\n        /* \"#utility.yul\":1597:1606   */\n      dup3\n        /* \"#utility.yul\":1578:1607   */\n      tag_161\n      jump\t// in\n        /* \"#utility.yul\":1618:1946   */\n    tag_39:\n        /* \"#utility.yul\":1695:1701   */\n      0x00\n        /* \"#utility.yul\":1703:1709   */\n      dup1\n        /* \"#utility.yul\":1711:1717   */\n      0x00\n        /* \"#utility.yul\":1764:1766   */\n      0x60\n        /* \"#utility.yul\":1752:1761   */\n      dup5\n        /* \"#utility.yul\":1743:1750   */\n      dup7\n        /* \"#utility.yul\":1739:1762   */\n      sub\n        /* \"#utility.yul\":1735:1767   */\n      slt\n        /* \"#utility.yul\":1732:1784   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":1780:1781   */\n      0x00\n        /* \"#utility.yul\":1777:1778   */\n      dup1\n        /* \"#utility.yul\":1770:1782   */\n      revert\n        /* \"#utility.yul\":1732:1784   */\n    tag_180:\n        /* \"#utility.yul\":1803:1832   */\n      tag_181\n        /* \"#utility.yul\":1822:1831   */\n      dup5\n        /* \"#utility.yul\":1803:1832   */\n      tag_161\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1793:1832   */\n      swap3\n      pop\n        /* \"#utility.yul\":1851:1889   */\n      tag_182\n        /* \"#utility.yul\":1885:1887   */\n      0x20\n        /* \"#utility.yul\":1874:1883   */\n      dup6\n        /* \"#utility.yul\":1870:1888   */\n      add\n        /* \"#utility.yul\":1851:1889   */\n      tag_161\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1841:1889   */\n      swap2\n      pop\n        /* \"#utility.yul\":1936:1938   */\n      0x40\n        /* \"#utility.yul\":1925:1934   */\n      dup5\n        /* \"#utility.yul\":1921:1939   */\n      add\n        /* \"#utility.yul\":1908:1940   */\n      calldataload\n        /* \"#utility.yul\":1898:1940   */\n      swap1\n      pop\n        /* \"#utility.yul\":1618:1946   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_67:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_185:\n        /* \"#utility.yul\":2308:2337   */\n      tag_186\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_161\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_187\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_161\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_75:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_189:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_190:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:2917   */\n    tag_162:\n        /* \"#utility.yul\":2851:2861   */\n      0x4e487b71\n        /* \"#utility.yul\":2846:2849   */\n      0xe0\n        /* \"#utility.yul\":2842:2862   */\n      shl\n        /* \"#utility.yul\":2839:2840   */\n      0x00\n        /* \"#utility.yul\":2832:2863   */\n      mstore\n        /* \"#utility.yul\":2882:2886   */\n      0x11\n        /* \"#utility.yul\":2879:2880   */\n      0x04\n        /* \"#utility.yul\":2872:2887   */\n      mstore\n        /* \"#utility.yul\":2906:2910   */\n      0x24\n        /* \"#utility.yul\":2903:2904   */\n      0x00\n        /* \"#utility.yul\":2896:2911   */\n      revert\n        /* \"#utility.yul\":2922:3050   */\n    tag_98:\n        /* \"#utility.yul\":2962:2965   */\n      0x00\n        /* \"#utility.yul\":2993:2994   */\n      dup3\n        /* \"#utility.yul\":2989:2995   */\n      not\n        /* \"#utility.yul\":2986:2987   */\n      dup3\n        /* \"#utility.yul\":2983:2996   */\n      gt\n        /* \"#utility.yul\":2980:3019   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2999:3017   */\n      tag_194\n      tag_162\n      jump\t// in\n    tag_194:\n      pop\n        /* \"#utility.yul\":3035:3044   */\n      add\n      swap1\n        /* \"#utility.yul\":2922:3050   */\n      jump\t// out\n        /* \"#utility.yul\":5844:6061   */\n    tag_155:\n        /* \"#utility.yul\":5884:5885   */\n      0x00\n        /* \"#utility.yul\":5910:5911   */\n      dup3\n        /* \"#utility.yul\":5900:6032   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":5954:5964   */\n      0x4e487b71\n        /* \"#utility.yul\":5949:5952   */\n      0xe0\n        /* \"#utility.yul\":5945:5965   */\n      shl\n        /* \"#utility.yul\":5942:5943   */\n      0x00\n        /* \"#utility.yul\":5935:5966   */\n      mstore\n        /* \"#utility.yul\":5989:5993   */\n      0x12\n        /* \"#utility.yul\":5986:5987   */\n      0x04\n        /* \"#utility.yul\":5979:5994   */\n      mstore\n        /* \"#utility.yul\":6017:6021   */\n      0x24\n        /* \"#utility.yul\":6014:6015   */\n      0x00\n        /* \"#utility.yul\":6007:6022   */\n      revert\n        /* \"#utility.yul\":5900:6032   */\n    tag_203:\n      pop\n        /* \"#utility.yul\":6046:6055   */\n      div\n      swap1\n        /* \"#utility.yul\":5844:6061   */\n      jump\t// out\n        /* \"#utility.yul\":6066:6234   */\n    tag_159:\n        /* \"#utility.yul\":6106:6113   */\n      0x00\n        /* \"#utility.yul\":6172:6173   */\n      dup2\n        /* \"#utility.yul\":6168:6169   */\n      0x00\n        /* \"#utility.yul\":6164:6170   */\n      not\n        /* \"#utility.yul\":6160:6174   */\n      div\n        /* \"#utility.yul\":6157:6158   */\n      dup4\n        /* \"#utility.yul\":6154:6175   */\n      gt\n        /* \"#utility.yul\":6149:6150   */\n      dup3\n        /* \"#utility.yul\":6142:6151   */\n      iszero\n        /* \"#utility.yul\":6135:6152   */\n      iszero\n        /* \"#utility.yul\":6131:6176   */\n      and\n        /* \"#utility.yul\":6128:6199   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":6179:6197   */\n      tag_206\n      tag_162\n      jump\t// in\n    tag_206:\n      pop\n        /* \"#utility.yul\":6219:6228   */\n      mul\n      swap1\n        /* \"#utility.yul\":6066:6234   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203aa45d10b815316d1807f6cb16f0471725af946af4634ec989ce072e741d890364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_390": {
									"entryPoint": null,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:5"
															},
															"nodeType": "YulIf",
															"src": "698:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:5",
																"statements": []
															},
															"src": "779:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:5"
															},
															"nodeType": "YulIf",
															"src": "921:80:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:885:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:5"
															},
															"nodeType": "YulIf",
															"src": "1164:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:5"
															},
															"nodeType": "YulIf",
															"src": "1301:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:5"
															},
															"nodeType": "YulIf",
															"src": "1474:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:5",
														"type": ""
													}
												],
												"src": "1036:562:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:5"
															},
															"nodeType": "YulIf",
															"src": "1746:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:5"
															},
															"nodeType": "YulIf",
															"src": "1816:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:5",
														"type": ""
													}
												],
												"src": "1603:380:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000c6538038062000c658339810160408190526200003491620001e8565b81516200004990600590602085019062000075565b5080516200005f90600690602084019062000075565b50506007805460ff19166012179055506200028e565b828054620000839062000252565b90600052602060002090601f016020900481019282620000a75760008555620000f2565b82601f10620000c257805160ff1916838001178555620000f2565b82800160010185558215620000f2579182015b82811115620000f2578251825591602001919060010190620000d5565b506200010092915062000104565b5090565b5b8082111562000100576000815560010162000105565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014357600080fd5b81516001600160401b03808211156200016057620001606200011b565b604051601f8301601f19908116603f011681019082821181831017156200018b576200018b6200011b565b81604052838152602092508683858801011115620001a857600080fd5b600091505b83821015620001cc5785820183015181830184015290820190620001ad565b83821115620001de5760008385830101525b9695505050505050565b60008060408385031215620001fc57600080fd5b82516001600160401b03808211156200021457600080fd5b620002228683870162000131565b935060208501519150808211156200023957600080fd5b50620002488582860162000131565b9150509250929050565b600181811c908216806200026757607f821691505b6020821081036200028857634e487b7160e01b600052602260045260246000fd5b50919050565b6109c7806200029e6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146101a6578063a9059cbb146101b9578063dd62ed3e146101cc578063e00713e91461020557600080fd5b8063395093511461017857806370a082311461018b57806395d89b411461019e57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd146101155780631da24f3e1461012757806323b872dd14610150578063313ce56714610163575b600080fd5b6100dc61020e565b6040516100e991906107c3565b60405180910390f35b610105610100366004610834565b6102a0565b60405190151581526020016100e9565b6004545b6040519081526020016100e9565b61011961013536600461085e565b6001600160a01b031660009081526001602052604090205490565b61010561015e366004610879565b6102b8565b60075460405160ff90911681526020016100e9565b610105610186366004610834565b6102dc565b61011961019936600461085e565b61031b565b6100dc610358565b6101056101b4366004610834565b610367565b6101056101c7366004610834565b6103fe565b6101196101da3660046108b5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61011960035481565b60606005805461021d906108e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610249906108e8565b80156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b5050505050905090565b6000336102ae81858561040c565b5060019392505050565b6000336102c6858285610530565b6102d18585856105c2565b506001949350505050565b3360008181526002602090815260408083206001600160a01b03871684529091528120549091906102ae9082908690610316908790610938565b61040c565b6000805460000361032e57506000919050565b600080546001600160a01b03841682526001602052604090912054610352916107a4565b92915050565b60606006805461021d906108e8565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909190838110156103f15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102d1828686840361040c565b6000336102ae8185856105c2565b6001600160a01b03831661046e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e8565b6001600160a01b0382166104cf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e8565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526002602090815260408083209386168352929052205460001981146105bc57818110156105af5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e8565b6105bc848484840361040c565b50505050565b6001600160a01b0383166106265760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e8565b6001600160a01b0382166106885760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e8565b600080546106979083906107b7565b6001600160a01b038516600090815260016020526040902054909150818110156107125760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e8565b6001600160a01b03808616600090815260016020526040808220858503905591861681529081208054849290610749908490610938565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161079591815260200190565b60405180910390a35050505050565b60006107b08284610950565b9392505050565b60006107b08284610972565b600060208083528351808285015260005b818110156107f0578581018301518582016040015282016107d4565b81811115610802576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461082f57600080fd5b919050565b6000806040838503121561084757600080fd5b61085083610818565b946020939093013593505050565b60006020828403121561087057600080fd5b6107b082610818565b60008060006060848603121561088e57600080fd5b61089784610818565b92506108a560208501610818565b9150604084013590509250925092565b600080604083850312156108c857600080fd5b6108d183610818565b91506108df60208401610818565b90509250929050565b600181811c908216806108fc57607f821691505b60208210810361091c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561094b5761094b610922565b500190565b60008261096d57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561098c5761098c610922565b50029056fea26469706673582212203aa45d10b815316d1807f6cb16f0471725af946af4634ec989ce072e741d890364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC65 CODESIZE SUB DUP1 PUSH3 0xC65 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1E8 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x75 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x75 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x28E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x83 SWAP1 PUSH3 0x252 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF2 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD5 JUMP JUMPDEST POP PUSH3 0x100 SWAP3 SWAP2 POP PUSH3 0x104 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x100 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x105 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x160 JUMPI PUSH3 0x160 PUSH3 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x18B JUMPI PUSH3 0x18B PUSH3 0x11B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1CC JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1AD JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1DE JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x222 DUP7 DUP4 DUP8 ADD PUSH3 0x131 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x248 DUP6 DUP3 DUP7 ADD PUSH3 0x131 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x267 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x288 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C7 DUP1 PUSH3 0x29E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xE00713E9 EQ PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x1DA24F3E EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x879 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x119 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH2 0xDC PUSH2 0x358 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x119 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x21D SWAP1 PUSH2 0x8E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x249 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x26B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x296 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x279 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2AE DUP2 DUP6 DUP6 PUSH2 0x40C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2C6 DUP6 DUP3 DUP6 PUSH2 0x530 JUMP JUMPDEST PUSH2 0x2D1 DUP6 DUP6 DUP6 PUSH2 0x5C2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2AE SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x316 SWAP1 DUP8 SWAP1 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x0 SUB PUSH2 0x32E JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x352 SWAP2 PUSH2 0x7A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x21D SWAP1 PUSH2 0x8E8 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2AE DUP2 DUP6 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5BC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x5BC DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x697 SWAP1 DUP4 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x749 SWAP1 DUP5 SWAP1 PUSH2 0x938 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x795 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B0 DUP3 DUP5 PUSH2 0x950 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B0 DUP3 DUP5 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7F0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7D4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x850 DUP4 PUSH2 0x818 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B0 DUP3 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x897 DUP5 PUSH2 0x818 JUMP JUMPDEST SWAP3 POP PUSH2 0x8A5 PUSH1 0x20 DUP6 ADD PUSH2 0x818 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D1 DUP4 PUSH2 0x818 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DF PUSH1 0x20 DUP5 ADD PUSH2 0x818 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x91C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x94B JUMPI PUSH2 0x94B PUSH2 0x922 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x96D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x98C JUMPI PUSH2 0x98C PUSH2 0x922 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE LOG4 0x5D LT 0xB8 ISZERO BALANCE PUSH14 0x1807F6CB16F0471725AF946AF463 0x4E 0xC9 DUP10 0xCE SMOD 0x2E PUSH21 0x1D890364736F6C634300080D003300000000000000 ",
							"sourceMap": "170:5981:2:-:0;;;593:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;660:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;683:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;710:9:2;:14;;-1:-1:-1;;710:14:2;722:2;710:14;;;-1:-1:-1;170:5981:2;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;170:5981:2;;;-1:-1:-1;170:5981:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:5:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:5;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;170:5981:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_GONS_362": {
									"entryPoint": null,
									"id": 362,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_568": {
									"entryPoint": 1036,
									"id": 568,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_953": {
									"entryPoint": null,
									"id": 953,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_680": {
									"entryPoint": 1328,
									"id": 680,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_795": {
									"entryPoint": 1474,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_500": {
									"entryPoint": null,
									"id": 500,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_524": {
									"entryPoint": 672,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_446": {
									"entryPoint": 795,
									"id": 446,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_414": {
									"entryPoint": null,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_638": {
									"entryPoint": 871,
									"id": 638,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_242": {
									"entryPoint": 1956,
									"id": 242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_597": {
									"entryPoint": 732,
									"id": 597,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_227": {
									"entryPoint": 1975,
									"id": 227,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_398": {
									"entryPoint": 526,
									"id": 398,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@scaledBalanceOf_459": {
									"entryPoint": null,
									"id": 459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_406": {
									"entryPoint": 856,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_423": {
									"entryPoint": null,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_712": {
									"entryPoint": 696,
									"id": 712,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_483": {
									"entryPoint": 1022,
									"id": 483,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6236:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:5"
															},
															"nodeType": "YulIf",
															"src": "443:91:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:5"
															},
															"nodeType": "YulIf",
															"src": "713:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:5",
														"type": ""
													}
												],
												"src": "616:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:5"
															},
															"nodeType": "YulIf",
															"src": "891:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:5",
														"type": ""
													}
												],
												"src": "794:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:5",
														"type": ""
													}
												],
												"src": "1053:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:5",
														"type": ""
													}
												],
												"src": "1245:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1543:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1552:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1555:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1545:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1545:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1545:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1514:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1514:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1510:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1510:32:5"
															},
															"nodeType": "YulIf",
															"src": "1507:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1568:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1597:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1578:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1463:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1474:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1486:6:5",
														"type": ""
													}
												],
												"src": "1427:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1722:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1768:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1777:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1780:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1770:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1770:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1770:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1743:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1752:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1739:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1739:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:32:5"
															},
															"nodeType": "YulIf",
															"src": "1732:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1793:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1803:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1841:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1874:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1885:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1870:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1870:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1851:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1898:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1925:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1936:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1908:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1908:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1672:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1683:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1695:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1703:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1711:6:5",
														"type": ""
													}
												],
												"src": "1618:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2058:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2066:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2058:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2100:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2115:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2123:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2111:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2111:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2017:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2028:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2039:4:5",
														"type": ""
													}
												],
												"src": "1951:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:5"
															},
															"nodeType": "YulIf",
															"src": "2237:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:5",
														"type": ""
													}
												],
												"src": "2140:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:5"
															},
															"nodeType": "YulIf",
															"src": "2548:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:5"
															},
															"nodeType": "YulIf",
															"src": "2618:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:5",
														"type": ""
													}
												],
												"src": "2405:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2822:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2846:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2851:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2842:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2832:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2879:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2903:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2906:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2896:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2896:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2790:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2970:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2997:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2999:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2999:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2999:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2986:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2993:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2989:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2989:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2983:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:13:5"
															},
															"nodeType": "YulIf",
															"src": "2980:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3028:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3039:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3042:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3035:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3035:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3028:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2953:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2956:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2962:3:5",
														"type": ""
													}
												],
												"src": "2922:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3229:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3246:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3239:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3291:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3276:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3276:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3296:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3269:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3319:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3330:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3315:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3315:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3335:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3308:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3308:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3401:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3386:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3386:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3406:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3379:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3379:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3379:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3423:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3435:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3446:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3431:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3423:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3206:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3220:4:5",
														"type": ""
													}
												],
												"src": "3055:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3635:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3652:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3645:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3645:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3686:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3697:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3682:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3682:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3675:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3725:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3736:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3721:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3721:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3741:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3714:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3796:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3807:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3792:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3812:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3785:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3785:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3828:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3840:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3836:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3828:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3612:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3626:4:5",
														"type": ""
													}
												],
												"src": "3461:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4040:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4057:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4050:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4050:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4091:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4102:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4087:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4087:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4080:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4130:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4141:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4146:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4119:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4119:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4201:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4212:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4197:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4197:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4217:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4190:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4190:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4231:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4243:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4254:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4239:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4231:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4017:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4031:4:5",
														"type": ""
													}
												],
												"src": "3866:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4443:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4460:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4453:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4494:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4505:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4490:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4490:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4510:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4483:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4533:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4544:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4529:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4529:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4549:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4522:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4590:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4602:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4598:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4590:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4420:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4434:4:5",
														"type": ""
													}
												],
												"src": "4269:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4801:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4818:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4829:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4852:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4863:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4848:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4868:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4841:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4891:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4902:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4887:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4887:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4907:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4880:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4880:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4880:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4962:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4973:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4958:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4958:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4978:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4951:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4951:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4951:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4995:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5007:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5018:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4995:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4778:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4792:4:5",
														"type": ""
													}
												],
												"src": "4627:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5207:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5224:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5235:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5217:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5258:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5269:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5274:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5247:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5247:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5247:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5297:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5308:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5293:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5293:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5313:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5286:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5286:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5368:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5379:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5364:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5364:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5384:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5357:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5399:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5411:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5407:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5407:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5399:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5184:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5198:4:5",
														"type": ""
													}
												],
												"src": "5033:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5611:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5628:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5639:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5621:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5662:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5673:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5658:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5658:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5678:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5651:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5651:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5701:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5712:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5697:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5697:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5717:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5690:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5690:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5772:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5783:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5768:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5768:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5788:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5761:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5806:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5818:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5829:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5814:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5814:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5806:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5588:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5602:4:5",
														"type": ""
													}
												],
												"src": "5437:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5890:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5921:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5949:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5954:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5945:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5945:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5935:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5935:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5935:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5986:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5989:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5979:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5979:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5979:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6014:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6017:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6007:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6007:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6007:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5910:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5903:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:9:5"
															},
															"nodeType": "YulIf",
															"src": "5900:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6041:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6050:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6053:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6046:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6041:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5875:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5878:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5884:1:5",
														"type": ""
													}
												],
												"src": "5844:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6118:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6177:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6179:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6179:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6179:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6149:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6142:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6142:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6135:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6135:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6157:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6168:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6164:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6164:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6172:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6160:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6160:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6154:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6154:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6131:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6131:45:5"
															},
															"nodeType": "YulIf",
															"src": "6128:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6208:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6223:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6226:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6219:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6219:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6208:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6097:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6100:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6106:7:5",
														"type": ""
													}
												],
												"src": "6066:168:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d7146101a6578063a9059cbb146101b9578063dd62ed3e146101cc578063e00713e91461020557600080fd5b8063395093511461017857806370a082311461018b57806395d89b411461019e57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd146101155780631da24f3e1461012757806323b872dd14610150578063313ce56714610163575b600080fd5b6100dc61020e565b6040516100e991906107c3565b60405180910390f35b610105610100366004610834565b6102a0565b60405190151581526020016100e9565b6004545b6040519081526020016100e9565b61011961013536600461085e565b6001600160a01b031660009081526001602052604090205490565b61010561015e366004610879565b6102b8565b60075460405160ff90911681526020016100e9565b610105610186366004610834565b6102dc565b61011961019936600461085e565b61031b565b6100dc610358565b6101056101b4366004610834565b610367565b6101056101c7366004610834565b6103fe565b6101196101da3660046108b5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61011960035481565b60606005805461021d906108e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610249906108e8565b80156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b5050505050905090565b6000336102ae81858561040c565b5060019392505050565b6000336102c6858285610530565b6102d18585856105c2565b506001949350505050565b3360008181526002602090815260408083206001600160a01b03871684529091528120549091906102ae9082908690610316908790610938565b61040c565b6000805460000361032e57506000919050565b600080546001600160a01b03841682526001602052604090912054610352916107a4565b92915050565b60606006805461021d906108e8565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909190838110156103f15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102d1828686840361040c565b6000336102ae8185856105c2565b6001600160a01b03831661046e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e8565b6001600160a01b0382166104cf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e8565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526002602090815260408083209386168352929052205460001981146105bc57818110156105af5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e8565b6105bc848484840361040c565b50505050565b6001600160a01b0383166106265760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e8565b6001600160a01b0382166106885760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e8565b600080546106979083906107b7565b6001600160a01b038516600090815260016020526040902054909150818110156107125760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e8565b6001600160a01b03808616600090815260016020526040808220858503905591861681529081208054849290610749908490610938565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161079591815260200190565b60405180910390a35050505050565b60006107b08284610950565b9392505050565b60006107b08284610972565b600060208083528351808285015260005b818110156107f0578581018301518582016040015282016107d4565b81811115610802576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461082f57600080fd5b919050565b6000806040838503121561084757600080fd5b61085083610818565b946020939093013593505050565b60006020828403121561087057600080fd5b6107b082610818565b60008060006060848603121561088e57600080fd5b61089784610818565b92506108a560208501610818565b9150604084013590509250925092565b600080604083850312156108c857600080fd5b6108d183610818565b91506108df60208401610818565b90509250929050565b600181811c908216806108fc57607f821691505b60208210810361091c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561094b5761094b610922565b500190565b60008261096d57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561098c5761098c610922565b50029056fea26469706673582212203aa45d10b815316d1807f6cb16f0471725af946af4634ec989ce072e741d890364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xE00713E9 EQ PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x1DA24F3E EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x135 CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x879 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE9 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x119 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH2 0xDC PUSH2 0x358 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x119 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x119 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x21D SWAP1 PUSH2 0x8E8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x249 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x26B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x296 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x279 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2AE DUP2 DUP6 DUP6 PUSH2 0x40C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2C6 DUP6 DUP3 DUP6 PUSH2 0x530 JUMP JUMPDEST PUSH2 0x2D1 DUP6 DUP6 DUP6 PUSH2 0x5C2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2AE SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x316 SWAP1 DUP8 SWAP1 PUSH2 0x938 JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x0 SUB PUSH2 0x32E JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x352 SWAP2 PUSH2 0x7A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x21D SWAP1 PUSH2 0x8E8 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40C JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2AE DUP2 DUP6 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5BC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x5BC DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x697 SWAP1 DUP4 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x749 SWAP1 DUP5 SWAP1 PUSH2 0x938 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD PUSH2 0x795 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B0 DUP3 DUP5 PUSH2 0x950 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B0 DUP3 DUP5 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7F0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7D4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x850 DUP4 PUSH2 0x818 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B0 DUP3 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x897 DUP5 PUSH2 0x818 JUMP JUMPDEST SWAP3 POP PUSH2 0x8A5 PUSH1 0x20 DUP6 ADD PUSH2 0x818 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8D1 DUP4 PUSH2 0x818 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DF PUSH1 0x20 DUP5 ADD PUSH2 0x818 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x91C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x94B JUMPI PUSH2 0x94B PUSH2 0x922 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x96D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x98C JUMPI PUSH2 0x98C PUSH2 0x922 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE LOG4 0x5D LT 0xB8 ISZERO BALANCE PUSH14 0x1807F6CB16F0471725AF946AF463 0x4E 0xC9 DUP10 0xCE SMOD 0x2E PUSH21 0x1D890364736F6C634300080D003300000000000000 ",
							"sourceMap": "170:5981:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2048:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:5;;1211:22;1193:41;;1181:2;1166:18;2048:197:2;1053:187:5;1026:106:2;1113:12;;1026:106;;;1391:25:5;;;1379:2;1364:18;1026:106:2;1245:177:5;1565:121:2;;;;;;:::i;:::-;-1:-1:-1;;;;;1657:22:2;1631:7;1657:22;;;:12;:22;;;;;;;1565:121;3738:264;;;;;;:::i;:::-;;:::i;931:89::-;1004:9;;931:89;;1004:9;;;;2093:36:5;;2081:2;2066:18;931:89:2;1951:184:5;2603:242:2;;;;;;:::i;:::-;;:::i;1252:189::-;;;;;;:::i;:::-;;:::i;832:93::-;;;:::i;2851:434::-;;;;;;:::i;:::-;;:::i;1692:189::-;;;;;;:::i;:::-;;:::i;1887:155::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2002:24:2;;;1976:7;2002:24;;;:17;:24;;;;;;;;:33;;;;;;;;;;;;;1887:155;441:25;;;;;;737:89;782:13;814:5;807:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:89;:::o;2048:197::-;2131:4;666:10:0;2185:32:2;666:10:0;2201:7:2;2210:6;2185:8;:32::i;:::-;-1:-1:-1;2234:4:2;;2048:197;-1:-1:-1;;;2048:197:2:o;3738:264::-;3835:4;666:10:0;3891:38:2;3907:4;666:10:0;3922:6:2;3891:15;:38::i;:::-;3947:27;3957:4;3963:2;3967:6;3947:9;:27::i;:::-;-1:-1:-1;3991:4:2;;3738:264;-1:-1:-1;;;;3738:264:2:o;2603:242::-;666:10:0;2691:4:2;2770:24;;;:17;:24;;;;;;;;-1:-1:-1;;;;;2770:33:2;;;;;;;;;;2691:4;;666:10:0;2745:72:2;;666:10:0;;2770:33:2;;:46;;2806:10;;2770:46;:::i;:::-;2745:8;:72::i;1252:189::-;1319:7;1342:16;;1362:1;1342:21;1338:35;;-1:-1:-1;1372:1:2;;1252:189;-1:-1:-1;1252:189:2:o;1338:35::-;1417:16;;;-1:-1:-1;;;;;1390:22:2;;;;:12;:22;;;;;;;:44;;:26;:44::i;:::-;1383:51;1252:189;-1:-1:-1;;1252:189:2:o;832:93::-;879:13;911:7;904:14;;;;;:::i;2851:434::-;666:10:0;2944:4:2;3025:24;;;:17;:24;;;;;;;;-1:-1:-1;;;;;3025:33:2;;;;;;;;;;2944:4;;666:10:0;3076:35:2;;;;3068:85;;;;-1:-1:-1;;;3068:85:2;;3257:2:5;3068:85:2;;;3239:21:5;3296:2;3276:18;;;3269:30;3335:34;3315:18;;;3308:62;-1:-1:-1;;;3386:18:5;;;3379:35;3431:19;;3068:85:2;;;;;;;;;3187:60;3196:5;3203:7;3231:15;3212:16;:34;3187:8;:60::i;1692:189::-;1771:4;666:10:0;1825:28:2;666:10:0;1842:2:2;1846:6;1825:9;:28::i;2251:346::-;-1:-1:-1;;;;;2352:19:2;;2344:68;;;;-1:-1:-1;;;2344:68:2;;3663:2:5;2344:68:2;;;3645:21:5;3702:2;3682:18;;;3675:30;3741:34;3721:18;;;3714:62;-1:-1:-1;;;3792:18:5;;;3785:34;3836:19;;2344:68:2;3461:400:5;2344:68:2;-1:-1:-1;;;;;2430:21:2;;2422:68;;;;-1:-1:-1;;;2422:68:2;;4068:2:5;2422:68:2;;;4050:21:5;4107:2;4087:18;;;4080:30;4146:34;4126:18;;;4119:62;-1:-1:-1;;;4197:18:5;;;4190:32;4239:19;;2422:68:2;3866:398:5;2422:68:2;-1:-1:-1;;;;;2501:24:2;;;;;;;:17;:24;;;;;;;;:33;;;;;;;;;;;;;:42;;;2558:32;;1391:25:5;;;2558:32:2;;1364:18:5;2558:32:2;;;;;;;2251:346;;;:::o;3291:441::-;-1:-1:-1;;;;;2002:24:2;;;3421;2002;;;:17;:24;;;;;;;;:33;;;;;;;;;;-1:-1:-1;;3487:37:2;;3483:243;;3568:6;3548:16;:26;;3540:68;;;;-1:-1:-1;;;3540:68:2;;4471:2:5;3540:68:2;;;4453:21:5;4510:2;4490:18;;;4483:30;4549:31;4529:18;;;4522:59;4598:18;;3540:68:2;4269:353:5;3540:68:2;3650:51;3659:5;3666:7;3694:6;3675:16;:25;3650:8;:51::i;:::-;3411:321;3291:441;;;:::o;4008:711::-;-1:-1:-1;;;;;4104:18:2;;4096:68;;;;-1:-1:-1;;;4096:68:2;;4829:2:5;4096:68:2;;;4811:21:5;4868:2;4848:18;;;4841:30;4907:34;4887:18;;;4880:62;-1:-1:-1;;;4958:18:5;;;4951:35;5003:19;;4096:68:2;4627:401:5;4096:68:2;-1:-1:-1;;;;;4182:16:2;;4174:64;;;;-1:-1:-1;;;4174:64:2;;5235:2:5;4174:64:2;;;5217:21:5;5274:2;5254:18;;;5247:30;5313:34;5293:18;;;5286:62;-1:-1:-1;;;5364:18:5;;;5357:33;5407:19;;4174:64:2;5033:399:5;4174:64:2;4298:16;4328;;4317:28;;:6;;:10;:28::i;:::-;-1:-1:-1;;;;;4378:18:2;;4356:19;4378:18;;;:12;:18;;;;;;4298:47;;-1:-1:-1;4414:23:2;;;;4406:74;;;;-1:-1:-1;;;4406:74:2;;5639:2:5;4406:74:2;;;5621:21:5;5678:2;5658:18;;;5651:30;5717:34;5697:18;;;5690:62;-1:-1:-1;;;5768:18:5;;;5761:36;5814:19;;4406:74:2;5437:402:5;4406:74:2;-1:-1:-1;;;;;4514:18:2;;;;;;;:12;:18;;;;;;4535:22;;;4514:43;;4578:16;;;;;;;;:28;;4549:8;;4514:18;4578:28;;4549:8;;4578:28;:::i;:::-;;;;;;;;4641:2;-1:-1:-1;;;;;4626:26:2;4635:4;-1:-1:-1;;;;;4626:26:2;;4645:6;4626:26;;;;1391:25:5;;1379:2;1364:18;;1245:177;4626:26:2;;;;;;;;4086:633;;4008:711;;;:::o;3778:96:1:-;3836:7;3862:5;3866:1;3862;:5;:::i;:::-;3855:12;3778:96;-1:-1:-1;;;3778:96:1:o;3393:::-;3451:7;3477:5;3481:1;3477;:5;:::i;14:597:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:5;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:5:o;1427:186::-;1486:6;1539:2;1527:9;1518:7;1514:23;1510:32;1507:52;;;1555:1;1552;1545:12;1507:52;1578:29;1597:9;1578:29;:::i;1618:328::-;1695:6;1703;1711;1764:2;1752:9;1743:7;1739:23;1735:32;1732:52;;;1780:1;1777;1770:12;1732:52;1803:29;1822:9;1803:29;:::i;:::-;1793:39;;1851:38;1885:2;1874:9;1870:18;1851:38;:::i;:::-;1841:48;;1936:2;1925:9;1921:18;1908:32;1898:42;;1618:328;;;;;:::o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:127::-;2851:10;2846:3;2842:20;2839:1;2832:31;2882:4;2879:1;2872:15;2906:4;2903:1;2896:15;2922:128;2962:3;2993:1;2989:6;2986:1;2983:13;2980:39;;;2999:18;;:::i;:::-;-1:-1:-1;3035:9:5;;2922:128::o;5844:217::-;5884:1;5910;5900:132;;5954:10;5949:3;5945:20;5942:1;5935:31;5989:4;5986:1;5979:15;6017:4;6014:1;6007:15;5900:132;-1:-1:-1;6046:9:5;;5844:217::o;6066:168::-;6106:7;6172:1;6168;6164:6;6160:14;6157:1;6154:21;6149:1;6142:9;6135:17;6131:45;6128:71;;;6179:18;;:::i;:::-;-1:-1:-1;6219:9:5;;6066:168::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "500600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOTAL_GONS()": "2383",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "infinite",
								"decimals()": "2400",
								"decreaseAllowance(address,uint256)": "26922",
								"increaseAllowance(address,uint256)": "26968",
								"name()": "infinite",
								"scaledBalanceOf(address)": "2604",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "53464",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 593,
									"end": 731,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 660,
									"end": 673,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 660,
									"end": 673,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 660,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 660,
									"end": 673,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 660,
									"end": 665,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 660,
									"end": 673,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 660,
									"end": 673,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 660,
									"end": 673,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 660,
									"end": 673,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 660,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 660,
									"end": 673,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 673,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 660,
									"end": 673,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 683,
									"end": 700,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 683,
									"end": 700,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 683,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 683,
									"end": 700,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 683,
									"end": 690,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 683,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 683,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 700,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 683,
									"end": 700,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 683,
									"end": 700,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 683,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 683,
									"end": 700,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 683,
									"end": 700,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 683,
									"end": 700,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 710,
									"end": 719,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 710,
									"end": 724,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 710,
									"end": 724,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 710,
									"end": 724,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 722,
									"end": 724,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 710,
									"end": 724,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 710,
									"end": 724,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 710,
									"end": 724,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 6151,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203aa45d10b815316d1807f6cb16f0471725af946af4634ec989ce072e741d890364736f6c634300080d0033",
									".code": [
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "E00713E9"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "1DA24F3E"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 6151,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1026,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1113,
											"end": 1125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1026,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1669,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1686,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 1020,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 931,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 931,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 1020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 2135,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 832,
											"end": 925,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 832,
											"end": 925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 832,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 832,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 832,
											"end": 925,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 2042,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 441,
											"end": 466,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 441,
											"end": 466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 737,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 782,
											"end": 795,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 807,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 737,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2201,
											"end": 2208,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2210,
											"end": 2216,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2185,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2238,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2245,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3891,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3907,
											"end": 3911,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 666,
											"end": 676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3891,
											"end": 3929,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3891,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3891,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3947,
											"end": 3974,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3947,
											"end": 3974,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3947,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3991,
											"end": 3995,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3991,
											"end": 3995,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3738,
											"end": 4002,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2603,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2794,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 666,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2745,
											"end": 2817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 666,
											"end": 676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 666,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2770,
											"end": 2816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2816,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2770,
											"end": 2816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2770,
											"end": 2816,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2770,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2745,
											"end": 2817,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1373,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1372,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1338,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1412,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1390,
											"end": 1434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1390,
											"end": 1434,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1434,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1390,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1434,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1441,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 832,
											"end": 925,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 832,
											"end": 925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 879,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 911,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 904,
											"end": 918,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 904,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 904,
											"end": 918,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2851,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3049,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 666,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3111,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3111,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3294,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3308,
											"end": 3370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3379,
											"end": 3414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3431,
											"end": 3450,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3431,
											"end": 3450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3068,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3196,
											"end": 3201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3231,
											"end": 3246,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3246,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3187,
											"end": 3247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1692,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1825,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 666,
											"end": 676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1852,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1825,
											"end": 1853,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2251,
											"end": 2597,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2251,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2371,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3705,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3775,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3721,
											"end": 3739,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3721,
											"end": 3739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 3776,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3792,
											"end": 3810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3855,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3836,
											"end": 3855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3461,
											"end": 3861,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2344,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4070,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4050,
											"end": 4071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4110,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4146,
											"end": 4180,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4119,
											"end": 4181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4215,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4197,
											"end": 4215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4258,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4239,
											"end": 4258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3866,
											"end": 4264,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2422,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2518,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2525,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2543,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2558,
											"end": 2590,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2597,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3291,
											"end": 3732,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3291,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3421,
											"end": 3445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2026,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2035,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3483,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3483,
											"end": 3726,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4453,
											"end": 4474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4510,
											"end": 4512,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4483,
											"end": 4513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4580,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4522,
											"end": 4581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4269,
											"end": 4622,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3540,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3659,
											"end": 3664,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3673,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3691,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3700,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3650,
											"end": 3701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3650,
											"end": 3701,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3650,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3732,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4008,
											"end": 4719,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4008,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4104,
											"end": 4122,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4104,
											"end": 4122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4832,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4870,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 4871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4907,
											"end": 4941,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4880,
											"end": 4942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4627,
											"end": 5028,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4096,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4182,
											"end": 4198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4198,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 5237,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5217,
											"end": 5238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5274,
											"end": 5276,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5313,
											"end": 5347,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5286,
											"end": 5348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5426,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5407,
											"end": 5426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5033,
											"end": 5432,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4328,
											"end": 4344,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4317,
											"end": 4345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4317,
											"end": 4345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4317,
											"end": 4345,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4317,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4356,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4390,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4298,
											"end": 4345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4298,
											"end": 4345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5621,
											"end": 5642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5678,
											"end": 5680,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5717,
											"end": 5751,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5690,
											"end": 5752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5768,
											"end": 5786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5797,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5814,
											"end": 5833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5437,
											"end": 5839,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4406,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4526,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4557,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4557,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4557,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4606,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4643,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4635,
											"end": 4639,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4645,
											"end": 4651,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4086,
											"end": 4719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4086,
											"end": 4719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4719,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3778,
											"end": 3874,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3778,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3863,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3867,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3874,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3778,
											"end": 3874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3481,
											"end": 3482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1613,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1427,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1542,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1597,
											"end": 1606,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1946,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1618,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1766,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1752,
											"end": 1761,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1750,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1762,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1767,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1732,
											"end": 1784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1732,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1732,
											"end": 1784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1732,
											"end": 1784,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1732,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1822,
											"end": 1831,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1803,
											"end": 1832,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1803,
											"end": 1832,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1803,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1832,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1885,
											"end": 1887,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1888,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1851,
											"end": 1889,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 1889,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 1851,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1889,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1938,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1934,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1908,
											"end": 1940,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 1940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 1940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1946,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 2917,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2790,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2861,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2846,
											"end": 2849,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2842,
											"end": 2862,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2886,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2879,
											"end": 2880,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2872,
											"end": 2887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2910,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2911,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 3050,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2922,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 2994,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 2987,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2996,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2980,
											"end": 3019,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2980,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2980,
											"end": 3019,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2999,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2999,
											"end": 3017,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2999,
											"end": 3017,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2999,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 3050,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5844,
											"end": 6061,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5844,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5900,
											"end": 6032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5954,
											"end": 5964,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5949,
											"end": 5952,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5945,
											"end": 5965,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5966,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 5993,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5986,
											"end": 5987,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5979,
											"end": 5994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6014,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6022,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 6032,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5900,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6046,
											"end": 6055,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5844,
											"end": 6061,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6066,
											"end": 6234,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6066,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6168,
											"end": 6169,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6160,
											"end": 6174,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6154,
											"end": 6175,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6151,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6135,
											"end": 6152,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6131,
											"end": 6176,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6199,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6128,
											"end": 6199,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6219,
											"end": 6228,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6219,
											"end": 6228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6234,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"TOTAL_GONS()": "e00713e9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"scaledBalanceOf(address)": "1da24f3e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_GONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"scaledBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"params\":{\"_address\":\"The address to query.\"},\"returns\":{\"_0\":\"The balance of the specified address.\"}},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"scaledBalanceOf(address)\":{\"params\":{\"_address\":\"The address to query.\"},\"returns\":{\"_0\":\"The gon balance of the specified address.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/token/ERC20Rebase.sol\":\"ERC20Rebase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x1cc748b2446aafb4c362edda845ca05b3b9994ebafc2c0ddbc894982c21305f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://076e714ffbbacde572851624994b9457f6765136fa8f5613fd082f607ec1924b\",\"dweb:/ipfs/QmPZJrP5BSYeMe4ajmpbNS1p3nsfJbTbo7hBwHxJA133Uv\"]},\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9abfb3888eb1535805fd1ce80be0738b5fc57c7aece52b85bd925d2e1d22bab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bae47c4219dfdc2aa9c3a38f76c0bb249a077ad55d79ec23ed43beb03a89916\",\"dweb:/ipfs/QmP2fK7qHCjJ9RKqMmCifPdP3LwWfEEzZTne84AGyCkRrg\"]},\"contracts/utils/token/ERC20Rebase.sol\":{\"keccak256\":\"0xab7245f7640962928ceb6c19b7be588ea5e0f02f6bd46b29f298b7dd7a290168\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aceae247e896f0289ca2086cf3d20ae5fe9dca3694fd5843f808141756e84a64\",\"dweb:/ipfs/QmaXLtWofJ19JavhiBu8s8HdjpySSWxVAREWj8tWhGGXkv\"]},\"contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]},\"contracts/utils/token/IERC20Metadata.sol\":{\"keccak256\":\"0x5e436570a8cc3b9b0e1ee9496474d65302af6a380728e561324288e468db645d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8c39aff9aad1fcbf6a9c2f70e9e358ca551e9b9fc847c97a5f3d42cfeb6cc4f\",\"dweb:/ipfs/QmUyrQTncAJRnuefm2D97cdzMohdEb6qpxDpnR9pnQyeaH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 350,
								"contract": "contracts/utils/token/ERC20Rebase.sol:ERC20Rebase",
								"label": "_gonsPerFragment",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 354,
								"contract": "contracts/utils/token/ERC20Rebase.sol:ERC20Rebase",
								"label": "_gonBalances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 360,
								"contract": "contracts/utils/token/ERC20Rebase.sol:ERC20Rebase",
								"label": "_allowedFragments",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 362,
								"contract": "contracts/utils/token/ERC20Rebase.sol:ERC20Rebase",
								"label": "TOTAL_GONS",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 364,
								"contract": "contracts/utils/token/ERC20Rebase.sol:ERC20Rebase",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 366,
								"contract": "contracts/utils/token/ERC20Rebase.sol:ERC20Rebase",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 368,
								"contract": "contracts/utils/token/ERC20Rebase.sol:ERC20Rebase",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 370,
								"contract": "contracts/utils/token/ERC20Rebase.sol:ERC20Rebase",
								"label": "_decimals",
								"offset": 0,
								"slot": "7",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/token/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/token/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/token/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/token/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/token/IERC20.sol\":{\"keccak256\":\"0xbb468cd9676a6fdae71b903143d44854a9b4082b703613463644b828e9b7a400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21c8b22a3e1b54ef211bc17afb71f5a91ab26360133c7f835c9d0e89706bfb52\",\"dweb:/ipfs/QmNwhncwZbdRfqpJe5fVH2S2KkZQrnLGXQsWdHnEfXVrFd\"]},\"contracts/utils/token/IERC20Metadata.sol\":{\"keccak256\":\"0x5e436570a8cc3b9b0e1ee9496474d65302af6a380728e561324288e468db645d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8c39aff9aad1fcbf6a9c2f70e9e358ca551e9b9fc847c97a5f3d42cfeb6cc4f\",\"dweb:/ipfs/QmUyrQTncAJRnuefm2D97cdzMohdEb6qpxDpnR9pnQyeaH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "573:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "649:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "666:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "666:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "659:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "596:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:0"
									},
									"scope": 21,
									"src": "587:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "756:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "773:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "773:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "766:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "698:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "740:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "740:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:16:0"
									},
									"scope": 21,
									"src": "689:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "555:235:0",
							"usedErrors": []
						}
					],
					"src": "33:757:0"
				},
				"id": 0
			},
			"contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							333
						]
					},
					"id": 334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "212:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 333,
							"linearizedBaseContracts": [
								333
							],
							"name": "SafeMath",
							"nameLocation": "417:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "644:140:1",
										"statements": [
											{
												"id": 54,
												"nodeType": "UncheckedBlock",
												"src": "654:124:1",
												"statements": [
													{
														"assignments": [
															37
														],
														"declarations": [
															{
																"constant": false,
																"id": 37,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "686:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 54,
																"src": "678:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 36,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "678:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 41,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 38,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "690:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 39,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "694:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "690:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "678:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 42,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "713:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 43,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "717:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "713:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 49,
														"nodeType": "IfStatement",
														"src": "709:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "728:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "735:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 47,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "727:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 35,
															"id": 48,
															"nodeType": "Return",
															"src": "720:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "759:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 51,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "765:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 52,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "758:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 35,
														"id": 53,
														"nodeType": "Return",
														"src": "751:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "432:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "577:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "592:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "584:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "603:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "595:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:22:1"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "629:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "629:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "635:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "628:15:1"
									},
									"scope": 333,
									"src": "568:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1006:113:1",
										"statements": [
											{
												"id": 82,
												"nodeType": "UncheckedBlock",
												"src": "1016:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 68,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1044:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 69,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "1048:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1044:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 75,
														"nodeType": "IfStatement",
														"src": "1040:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1059:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1066:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 73,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1058:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 67,
															"id": 74,
															"nodeType": "Return",
															"src": "1051:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1090:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 77,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 59,
																		"src": "1096:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 78,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "1100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1096:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 80,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1089:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 67,
														"id": 81,
														"nodeType": "Return",
														"src": "1082:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "790:135:1",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "939:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "954:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "946:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "965:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "957:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:22:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "991:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 63,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "991:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "997:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:15:1"
									},
									"scope": 333,
									"src": "930:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1343:417:1",
										"statements": [
											{
												"id": 124,
												"nodeType": "UncheckedBlock",
												"src": "1353:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 96,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "1611:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1611:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 103,
														"nodeType": "IfStatement",
														"src": "1607:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1627:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1633:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 101,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1626:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 95,
															"id": 102,
															"nodeType": "Return",
															"src": "1619:16:1"
														}
													},
													{
														"assignments": [
															105
														],
														"declarations": [
															{
																"constant": false,
																"id": 105,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1657:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 124,
																"src": "1649:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 104,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1649:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 109,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 106,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "1661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 107,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "1665:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1649:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 110,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "1684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 111,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "1688:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1684:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 113,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "1693:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1684:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 119,
														"nodeType": "IfStatement",
														"src": "1680:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1704:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1711:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 117,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1703:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 95,
															"id": 118,
															"nodeType": "Return",
															"src": "1696:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1735:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 121,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "1741:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 122,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1734:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 95,
														"id": 123,
														"nodeType": "Return",
														"src": "1727:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1125:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1276:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1291:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1283:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1302:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1294:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:22:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1328:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1328:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1334:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:15:1"
									},
									"scope": 333,
									"src": "1267:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1985:114:1",
										"statements": [
											{
												"id": 152,
												"nodeType": "UncheckedBlock",
												"src": "1995:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2023:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2028:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2023:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 145,
														"nodeType": "IfStatement",
														"src": "2019:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2039:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2046:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 143,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2038:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 137,
															"id": 144,
															"nodeType": "Return",
															"src": "2031:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2070:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 147,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "2076:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 148,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "2080:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2076:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 150,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2069:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 137,
														"id": 151,
														"nodeType": "Return",
														"src": "2062:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1766:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1918:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1933:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1925:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1944:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1936:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:22:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1970:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1970:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1976:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:15:1"
									},
									"scope": 333,
									"src": "1909:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "2334:114:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "2344:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2372:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2377:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2372:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 173,
														"nodeType": "IfStatement",
														"src": "2368:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2388:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2395:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 171,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2387:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 165,
															"id": 172,
															"nodeType": "Return",
															"src": "2380:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2419:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 175,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "2425:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 176,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "2429:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2425:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2418:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 165,
														"id": 179,
														"nodeType": "Return",
														"src": "2411:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2105:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2267:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2282:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2274:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2293:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2285:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:22:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2319:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2325:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:15:1"
									},
									"scope": 333,
									"src": "2258:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2750:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 192,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2767:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 193,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "2771:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2767:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 191,
												"id": 195,
												"nodeType": "Return",
												"src": "2760:12:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "2454:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2692:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2715:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2707:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:22:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2741:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:9:1"
									},
									"scope": 333,
									"src": "2683:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "3117:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 207,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3134:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 208,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "3138:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3134:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 210,
												"nodeType": "Return",
												"src": "3127:12:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2785:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3059:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3071:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "3063:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3082:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "3074:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3074:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:22:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "3108:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:9:1"
									},
									"scope": 333,
									"src": "3050:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "3460:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "3477:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "3481:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3477:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 221,
												"id": 225,
												"nodeType": "Return",
												"src": "3470:12:1"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "3152:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3402:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3414:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "3406:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3425:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "3417:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "3451:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:9:1"
									},
									"scope": 333,
									"src": "3393:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "3845:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 237,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "3862:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 238,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "3866:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3862:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 240,
												"nodeType": "Return",
												"src": "3855:12:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "3495:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3787:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3799:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3791:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3810:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3802:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:22:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3836:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:9:1"
									},
									"scope": 333,
									"src": "3778:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "4394:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 252,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "4411:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 253,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "4415:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4411:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 251,
												"id": 255,
												"nodeType": "Return",
												"src": "4404:12:1"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "3880:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4336:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4348:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4340:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4359:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4351:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:22:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4385:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4385:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4384:9:1"
									},
									"scope": 333,
									"src": "4327:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "5012:106:1",
										"statements": [
											{
												"id": 280,
												"nodeType": "UncheckedBlock",
												"src": "5022:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 270,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "5054:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 271,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "5059:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5054:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 273,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "5062:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 269,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5046:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5046:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 275,
														"nodeType": "ExpressionStatement",
														"src": "5046:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 276,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "5096:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 277,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "5100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5096:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 268,
														"id": 279,
														"nodeType": "Return",
														"src": "5089:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "4429:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4896:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4917:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4909:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4936:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4928:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4928:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4961:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4947:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4947:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4899:80:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5003:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5002:9:1"
									},
									"scope": 333,
									"src": "4887:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "5727:105:1",
										"statements": [
											{
												"id": 305,
												"nodeType": "UncheckedBlock",
												"src": "5737:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 295,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "5769:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5773:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5769:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 298,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "5776:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 294,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5761:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5761:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 300,
														"nodeType": "ExpressionStatement",
														"src": "5761:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 301,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 302,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "5814:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5810:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 293,
														"id": 304,
														"nodeType": "Return",
														"src": "5803:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "5124:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5611:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5632:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5624:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5651:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5643:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5676:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5662:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 288,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5662:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5614:80:1"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5718:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5718:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5717:9:1"
									},
									"scope": 333,
									"src": "5602:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "6603:105:1",
										"statements": [
											{
												"id": 330,
												"nodeType": "UncheckedBlock",
												"src": "6613:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "6645:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6649:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6645:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 323,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "6652:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 319,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6637:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6637:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "6637:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "6686:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 327,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "6690:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6686:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 318,
														"id": 329,
														"nodeType": "Return",
														"src": "6679:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "5838:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6487:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6508:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6500:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6527:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6519:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6552:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6538:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6538:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6490:80:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "6594:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6593:9:1"
									},
									"scope": 333,
									"src": "6478:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 334,
							"src": "409:6301:1",
							"usedErrors": []
						}
					],
					"src": "33:6677:1"
				},
				"id": 1
			},
			"contracts/utils/token/ERC20Rebase.sol": {
				"ast": {
					"absolutePath": "contracts/utils/token/ERC20Rebase.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20Rebase": [
							964
						],
						"IERC20": [
							1042
						],
						"IERC20Metadata": [
							1067
						],
						"SafeMath": [
							333
						]
					},
					"id": 965,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 335,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/utils/token/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 965,
							"sourceUnit": 1043,
							"src": "58:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/token/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 965,
							"sourceUnit": 1068,
							"src": "81:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../Context.sol",
							"id": 338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 965,
							"sourceUnit": 22,
							"src": "112:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/math/SafeMath.sol",
							"file": "../math/SafeMath.sol",
							"id": 339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 965,
							"sourceUnit": 334,
							"src": "137:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 340,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "194:7:2"
									},
									"id": 341,
									"nodeType": "InheritanceSpecifier",
									"src": "194:7:2"
								},
								{
									"baseName": {
										"id": 342,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1042,
										"src": "203:6:2"
									},
									"id": 343,
									"nodeType": "InheritanceSpecifier",
									"src": "203:6:2"
								},
								{
									"baseName": {
										"id": 344,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1067,
										"src": "211:14:2"
									},
									"id": 345,
									"nodeType": "InheritanceSpecifier",
									"src": "211:14:2"
								}
							],
							"canonicalName": "ERC20Rebase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 964,
							"linearizedBaseContracts": [
								964,
								1067,
								1042,
								21
							],
							"name": "ERC20Rebase",
							"nameLocation": "179:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 348,
									"libraryName": {
										"id": 346,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 333,
										"src": "239:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "233:27:2",
									"typeName": {
										"id": 347,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 350,
									"mutability": "mutable",
									"name": "_gonsPerFragment",
									"nameLocation": "283:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "266:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "266:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 354,
									"mutability": "mutable",
									"name": "_gonBalances",
									"nameLocation": "342:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "306:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 353,
										"keyType": {
											"id": 351,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "314:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "306:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "325:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 360,
									"mutability": "mutable",
									"name": "_allowedFragments",
									"nameLocation": "417:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "361:73:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 359,
										"keyType": {
											"id": 355,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "369:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "361:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 358,
											"keyType": {
												"id": 356,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "388:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "380:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 357,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "e00713e9",
									"id": 362,
									"mutability": "mutable",
									"name": "TOTAL_GONS",
									"nameLocation": "456:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "441:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 361,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 364,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "490:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "473:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "473:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 366,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "524:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "509:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 365,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "509:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 368,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "550:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "535:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 367,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "535:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 370,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "577:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 964,
									"src": "563:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 369,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "563:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "650:81:2",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "660:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "668:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "660:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "660:13:2"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "683:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "693:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "683:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "683:17:2"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "710:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "722:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "710:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "710:14:2"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "620:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "606:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "606:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "641:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "627:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "627:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:44:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "650:0:2"
									},
									"scope": 964,
									"src": "593:138:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1054
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "797:29:2",
										"statements": [
											{
												"expression": {
													"id": 395,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 366,
													"src": "814:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 394,
												"id": 396,
												"nodeType": "Return",
												"src": "807:12:2"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "746:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "782:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "782:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:15:2"
									},
									"scope": 964,
									"src": "737:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1060
									],
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "894:31:2",
										"statements": [
											{
												"expression": {
													"id": 403,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 368,
													"src": "911:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 402,
												"id": 404,
												"nodeType": "Return",
												"src": "904:14:2"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "841:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:2:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "879:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "879:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:15:2"
									},
									"scope": 964,
									"src": "832:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1066
									],
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "987:33:2",
										"statements": [
											{
												"expression": {
													"id": 411,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 370,
													"src": "1004:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 410,
												"id": 412,
												"nodeType": "Return",
												"src": "997:16:2"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "940:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:2:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "980:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 408,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "980:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:7:2"
									},
									"scope": 964,
									"src": "931:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										973
									],
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "1096:36:2",
										"statements": [
											{
												"expression": {
													"id": 420,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 364,
													"src": "1113:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 419,
												"id": 421,
												"nodeType": "Return",
												"src": "1106:19:2"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1035:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 416,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1069:8:2"
									},
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:2"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1087:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:9:2"
									},
									"scope": 964,
									"src": "1026:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										981
									],
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1328:113:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 432,
														"name": "_gonsPerFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "1342:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1362:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1342:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1338:35:2",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1372:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 431,
													"id": 436,
													"nodeType": "Return",
													"src": "1365:8:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "1417:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 438,
																"name": "_gonBalances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "1390:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 440,
															"indexExpression": {
																"id": 439,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "1403:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1390:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 242,
														"src": "1390:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1390:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 431,
												"id": 444,
												"nodeType": "Return",
												"src": "1383:51:2"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1138:109:2",
										"text": " @param _address The address to query.\n @return The balance of the specified address."
									},
									"functionSelector": "70a08231",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1261:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 428,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1301:8:2"
									},
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1279:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1271:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:18:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1319:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:9:2"
									},
									"scope": 964,
									"src": "1252:189:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1640:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 454,
														"name": "_gonBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1657:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 456,
													"indexExpression": {
														"id": 455,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "1670:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1657:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 457,
												"nodeType": "Return",
												"src": "1650:29:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1447:113:2",
										"text": " @param _address The address to query.\n @return The gon balance of the specified address."
									},
									"functionSelector": "1da24f3e",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "scaledBalanceOf",
									"nameLocation": "1574:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1598:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1590:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:18:2"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1630:9:2"
									},
									"scope": 964,
									"src": "1565:121:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										991
									],
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "1777:104:2",
										"statements": [
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1795:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "1787:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 469,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1787:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 471,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1803:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1803:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1787:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "1835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "1842:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "1846:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "1825:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1825:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "1825:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1870:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 468,
												"id": 481,
												"nodeType": "Return",
												"src": "1863:11:2"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1701:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 465,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1753:8:2"
									},
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1730:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1722:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:28:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 466,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:6:2"
									},
									"scope": 964,
									"src": "1692:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "1985:57:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 493,
															"name": "_allowedFragments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "2002:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 495,
														"indexExpression": {
															"id": 494,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "2020:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2002:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 497,
													"indexExpression": {
														"id": 496,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2027:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2002:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 492,
												"id": 498,
												"nodeType": "Return",
												"src": "1995:40:2"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1896:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 489,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1958:8:2"
									},
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1914:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1906:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1929:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1921:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:32:2"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1976:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:9:2"
									},
									"scope": 964,
									"src": "1887:155:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1011
									],
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "2137:108:2",
										"statements": [
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2155:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "2147:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 510,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2147:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 514,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 512,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2163:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2147:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "2194:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "2201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "2210:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2185:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "2185:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2234:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 509,
												"id": 522,
												"nodeType": "Return",
												"src": "2227:11:2"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2057:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 506,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2113:8:2"
									},
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2073:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2065:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2090:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2082:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:33:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2131:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2131:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:6:2"
									},
									"scope": 964,
									"src": "2048:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2334:263:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2352:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2369:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2361:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 535,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2361:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2361:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2352:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2373:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2344:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2344:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2344:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 544,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "2430:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2449:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2441:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 545,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2441:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2441:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2430:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2453:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2422:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2422:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "2422:68:2"
											},
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 553,
																"name": "_allowedFragments",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "2501:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 556,
															"indexExpression": {
																"id": 554,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2519:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2501:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 557,
														"indexExpression": {
															"id": 555,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2526:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2501:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 558,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "2537:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2501:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "2501:42:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 562,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2567:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "2583:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2558:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2558:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "EmitStatement",
												"src": "2553:37:2"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "2260:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2277:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2269:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2292:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2284:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2309:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2301:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:48:2"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:2"
									},
									"scope": 964,
									"src": "2251:346:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "2697:148:2",
										"statements": [
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2715:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "2707:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2707:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2723:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2707:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 583,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "2754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "2761:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 585,
																		"name": "_allowedFragments",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "2770:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 587,
																	"indexExpression": {
																		"id": 586,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "2788:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2770:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"id": 588,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "2795:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2770:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 590,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "2806:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2770:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 582,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2745:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2745:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "2745:72:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2834:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 576,
												"id": 595,
												"nodeType": "Return",
												"src": "2827:11:2"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "2612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2638:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2630:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "2655:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2647:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:37:2"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "2691:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:2"
									},
									"scope": 964,
									"src": "2603:242:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "2950:335:2",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2968:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "2960:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 606,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2960:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 608,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2976:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2976:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2960:28:2"
											},
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "3006:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "2998:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2998:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 613,
															"name": "_allowedFragments",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3025:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 615,
														"indexExpression": {
															"id": 614,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "3043:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3025:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 617,
													"indexExpression": {
														"id": 616,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "3050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3025:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2998:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 620,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "3076:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 621,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "3096:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3076:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3113:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3068:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "3068:85:2"
											},
											{
												"id": 634,
												"nodeType": "UncheckedBlock",
												"src": "3163:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 627,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "3196:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 628,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "3203:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 629,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "3212:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 630,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "3231:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3212:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 626,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "3187:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3187:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 633,
														"nodeType": "ExpressionStatement",
														"src": "3187:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3274:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 605,
												"id": 636,
												"nodeType": "Return",
												"src": "3267:11:2"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "2860:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2886:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "2878:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2878:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "2903:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "2895:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2895:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2877:42:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "2944:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2944:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2943:6:2"
									},
									"scope": 964,
									"src": "2851:434:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "3411:321:2",
										"statements": [
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "3429:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "3421:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3421:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"arguments": [
														{
															"id": 650,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "3458:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "3465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 649,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3448:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3448:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3421:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 654,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "3487:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3512:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 656,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3512:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 655,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3507:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3507:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3507:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3487:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "3483:243:2",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "3526:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 662,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "3548:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 663,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "3568:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3548:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3576:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 661,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3540:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3540:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 667,
															"nodeType": "ExpressionStatement",
															"src": "3540:68:2"
														},
														{
															"id": 676,
															"nodeType": "UncheckedBlock",
															"src": "3622:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 669,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 640,
																				"src": "3659:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 670,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "3666:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 671,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "3675:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 672,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "3694:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3675:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 668,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "3650:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3650:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 675,
																	"nodeType": "ExpressionStatement",
																	"src": "3650:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "3300:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3333:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3325:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3356:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3348:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3381:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3373:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:78:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3411:0:2"
									},
									"scope": 964,
									"src": "3291:441:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1023
									],
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "3841:161:2",
										"statements": [
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "3859:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 711,
														"src": "3851:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 692,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3851:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 694,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3869:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3869:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3851:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3907:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "3913:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3922:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3891:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "3891:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 705,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3967:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 703,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "3947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3947:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "3947:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 691,
												"id": 710,
												"nodeType": "Return",
												"src": "3984:11:2"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3747:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 688,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3817:8:2"
									},
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3768:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3760:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3782:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3774:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3794:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3786:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3786:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:42:2"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "3835:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3835:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:6:2"
									},
									"scope": 964,
									"src": "3738:264:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "4086:633:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 722,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "4104:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4120:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4112:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4112:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4112:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4104:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4124:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4096:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "4096:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 732,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "4182:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4196:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4188:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 733,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4188:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4188:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4182:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4200:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4174:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4174:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "4174:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "4270:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4276:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4280:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 741,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "4249:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "4249:38:2"
											},
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "gonValue",
														"nameLocation": "4306:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4298:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4298:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [
														{
															"id": 751,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4328:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 749,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4317:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 227,
														"src": "4317:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4317:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4298:47:2"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "4364:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4356:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4356:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 759,
												"initialValue": {
													"baseExpression": {
														"id": 756,
														"name": "_gonBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "4378:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 758,
													"indexExpression": {
														"id": 757,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "4391:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4378:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4356:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 761,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "4414:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 762,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "4429:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4414:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4439:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4406:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4406:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "4406:74:2"
											},
											{
												"id": 775,
												"nodeType": "UncheckedBlock",
												"src": "4490:78:2",
												"statements": [
													{
														"expression": {
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 767,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "4514:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 769,
																"indexExpression": {
																	"id": 768,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "4527:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4514:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 770,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "4535:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 771,
																	"name": "gonValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "4549:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4535:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4514:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 774,
														"nodeType": "ExpressionStatement",
														"src": "4514:43:2"
													}
												]
											},
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 776,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "4578:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 778,
														"indexExpression": {
															"id": 777,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4591:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4578:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 779,
														"name": "gonValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "4598:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4578:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "4578:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 783,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "4635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4641:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4645:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 782,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "4626:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4626:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "EmitStatement",
												"src": "4621:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "4695:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4701:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "4675:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4675:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "4675:37:2"
											}
										]
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "4017:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4035:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4027:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4049:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4041:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4041:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4061:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4053:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:42:2"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4086:0:2"
									},
									"scope": 964,
									"src": "4008:711:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "4790:420:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "4808:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4827:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4819:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 804,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4819:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4819:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4808:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4831:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4800:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4800:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "4800:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4905:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4897:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4897:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4897:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "4909:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "4918:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "4876:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "4876:49:2"
											},
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "gonValue",
														"nameLocation": "4944:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "4936:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"arguments": [
														{
															"id": 825,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "4966:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 823,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "4955:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 227,
														"src": "4955:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4955:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:47:2"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 828,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "4994:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 829,
														"name": "gonValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "5008:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4994:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "4994:22:2"
											},
											{
												"expression": {
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 832,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5026:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 833,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "5042:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5026:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "5026:22:2"
											},
											{
												"expression": {
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 836,
															"name": "_gonBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "5058:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 838,
														"indexExpression": {
															"id": 837,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5071:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5058:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 839,
														"name": "gonValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "5083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5058:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "5058:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5130:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5122:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 843,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5122:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5122:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5134:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "5143:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5102:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5102:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "5102:48:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5183:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5175:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 852,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5175:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5175:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5187:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "5196:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "5166:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5166:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "EmitStatement",
												"src": "5161:42:2"
											}
										]
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "4734:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "4740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4765:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "4757:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:33:2"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4790:0:2"
									},
									"scope": 964,
									"src": "4725:485:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "5281:615:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5299:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5318:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5310:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 870,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5310:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5310:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5299:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5322:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5291:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5291:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "5291:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 879,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5390:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5407:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5399:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 880,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5399:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5399:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "5411:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "5369:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5369:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "5369:49:2"
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "gonValue",
														"nameLocation": "5437:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "5429:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5429:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"id": 891,
															"name": "_gonsPerFragment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5459:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "5448:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 227,
														"src": "5448:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5448:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5429:47:2"
											},
											{
												"assignments": [
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "5494:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "5486:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 894,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5486:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 899,
												"initialValue": {
													"baseExpression": {
														"id": 896,
														"name": "_gonBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "5511:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 898,
													"indexExpression": {
														"id": 897,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "5524:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5511:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5486:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 901,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "5550:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 902,
																"name": "gonValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "5568:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5550:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5578:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5542:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5542:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "5542:73:2"
											},
											{
												"id": 915,
												"nodeType": "UncheckedBlock",
												"src": "5629:84:2",
												"statements": [
													{
														"expression": {
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 907,
																	"name": "_gonBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "5653:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 909,
																"indexExpression": {
																	"id": 908,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "5666:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5653:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 910,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "5677:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 911,
																	"name": "gonValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "5694:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5677:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5653:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 914,
														"nodeType": "ExpressionStatement",
														"src": "5653:49:2"
													}
												]
											},
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 916,
														"name": "TOTAL_GONS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5723:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 917,
														"name": "gonValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "5737:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5723:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "5723:22:2"
											},
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 920,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5755:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 921,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "5771:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5755:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "5755:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5808:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5825:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5817:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 926,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5817:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5817:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "5829:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5788:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5788:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "5788:48:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 934,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5861:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5878:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5870:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5870:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5870:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "5882:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 933,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "5852:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5852:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "EmitStatement",
												"src": "5847:42:2"
											}
										]
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "5225:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5239:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "5231:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5256:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "5248:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:33:2"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5281:0:2"
									},
									"scope": 964,
									"src": "5216:680:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "6021:2:2",
										"statements": []
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "5911:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5949:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "5941:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5971:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "5963:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5991:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "5983:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5931:72:2"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6021:0:2"
									},
									"scope": 964,
									"src": "5902:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "6147:2:2",
										"statements": []
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "6038:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6075:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "6067:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6067:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6097:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "6089:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6117:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "6109:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6057:72:2"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6147:0:2"
									},
									"scope": 964,
									"src": "6029:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 965,
							"src": "170:5981:2",
							"usedErrors": []
						}
					],
					"src": "33:6118:2"
				},
				"id": 2
			},
			"contracts/utils/token/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/utils/token/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1042
						]
					},
					"id": 1043,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 966,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 967,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1042,
							"linearizedBaseContracts": [
								1042
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:3"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "342:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:3"
									},
									"scope": 1042,
									"src": "296:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:3"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "493:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:3"
									},
									"scope": 1042,
									"src": "434:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "733:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "745:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "779:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:3"
									},
									"scope": 1042,
									"src": "715:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1079:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1094:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:3"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1134:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:3"
									},
									"scope": 1042,
									"src": "1060:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1813:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1830:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:3"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1864:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:3"
									},
									"scope": 1042,
									"src": "1796:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2199:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2241:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:3"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2280:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:3"
									},
									"scope": 1042,
									"src": "2168:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1032,
									"name": "Transfer",
									"nameLocation": "2461:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2470:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2492:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2512:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:3"
									},
									"src": "2455:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1041,
									"name": "Approval",
									"nameLocation": "2692:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "2701:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "2724:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "2749:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:3"
									},
									"src": "2686:78:3"
								}
							],
							"scope": 1043,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2660:3"
				},
				"id": 3
			},
			"contracts/utils/token/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/utils/token/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1042
						],
						"IERC20Metadata": [
							1067
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1044,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "contracts/utils/token/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1068,
							"sourceUnit": 1043,
							"src": "58:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1042,
										"src": "227:6:4"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "227:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1046,
								"nodeType": "StructuredDocumentation",
								"src": "82:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1067,
							"linearizedBaseContracts": [
								1067,
								1042
							],
							"name": "IERC20Metadata",
							"nameLocation": "209:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "240:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "308:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:4"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "338:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1051,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "338:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:15:4"
									},
									"scope": 1067,
									"src": "299:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "359:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "429:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:4"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "461:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "461:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:15:4"
									},
									"scope": 1067,
									"src": "420:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "482:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "561:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:4"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "595:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1063,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "595:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:7:4"
									},
									"scope": 1067,
									"src": "552:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1068,
							"src": "199:405:4",
							"usedErrors": []
						}
					],
					"src": "33:571:4"
				},
				"id": 4
			}
		}
	}
}